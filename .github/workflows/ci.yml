name: ci
on:
  push:
    branches:
      - master
      - main

permissions:
  contents: write

jobs:
  deploy:
    runs-on: ubuntu-latest

    # <-- añade tus contraseñas aquí, leídas de los repo secrets
    env:
      RM_PASSWORD: ${{ secrets.RM_PASSWORD }}
      RA_PASSWORD: ${{ secrets.RA_PASSWORD }}

    steps:
      - uses: actions/checkout@v4

      - name: Configure Git Credentials
        run: |
          git config user.name github-actions[bot]
          git config user.email 41898282+github-actions[bot]@users.noreply.github.com

      - uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - run: echo "cache_id=$(date --utc '+%V')" >> $GITHUB_ENV

      - uses: actions/cache@v4
        with:
          key: mkdocs-material-${{ env.cache_id }}
          path: .cache
          restore-keys: |
            mkdocs-material-

      # <-- instala también el plugin de cifrado
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install mkdocs-material mkdocs-encryptcontent-plugin

      # (opcional) si vas a proteger solo bloques dentro de una página, añade:
      # pip install pymdown-extensions

      # <-- valida que los secrets existan (fallará el job si faltan)
      - name: Check secrets
        run: |
          test -n "$RM_PASSWORD" || (echo "Falta RM_PASSWORD" && exit 1)
          test -n "$RA_PASSWORD" || (echo "Falta RA_PASSWORD" && exit 1)

      # puedes compilar antes para fallar temprano:
      - name: Build
        run: mkdocs build --clean --strict

      # despliegas igual que antes
      - name: Deploy to gh-pages
        run: mkdocs gh-deploy --force
