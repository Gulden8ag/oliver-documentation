{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to MkDocs","text":"<p>For full documentation visit mkdocs.org.</p>"},{"location":"#commands","title":"Commands","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul>"},{"location":"#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre>"},{"location":"faqs/","title":"Instalaci\u00f3n de ROS 2 Jazzy Jalisco (WSL2 + WSLg)","text":""},{"location":"faqs/#que-es-ros","title":"\u00bfQu\u00e9 es ROS?","text":"<p>Aunque se llame \u201csistema operativo\u201d, en realidad es un conjunto de herramientas y librer\u00edas que te ayudan a conectar y coordinar los distintos bloques de tu robot.</p> <p>Define c\u00f3mo intercambian informaci\u00f3n las partes (por ejemplo, tu m\u00f3dulo de visi\u00f3n env\u00eda \u201cveo un obst\u00e1culo\u201d y tu m\u00f3dulo de movimiento recibe ese mensaje y frena).</p> <p>Cuenta con cientos de paquetes que ya resuelven tareas comunes (planificar rutas, procesar im\u00e1genes, simular en ordenador\u2026), de modo que no tienes que escribir todo desde cero.</p> <p>Al dia de actualizacion de esta pagina 21 de mayo de 2025 Jazzy Jalisco es la distribucion mas moderna estable sacada en mayo 23, 2024 con soporte hasta Mayo 2029. Revisar la documentacion de ROS Para mas informacion.</p> <p>ROS es nativo a Linux, el cual deberia ser usado en proceso de alto rendimiento. Sin embargo para experimentacion o si no se quiere sacar una particion de Linux WSL2 es una mejora del Subsistema de Windows para Linux (WSL), que permite ejecutar distribuciones Linux nativas en Windows sin necesidad de m\u00e1quinas virtuales tradicionales.</p>"},{"location":"faqs/#1-instalar-wsl2-y-ubuntu-2404","title":"1. Instalar WSL2 y Ubuntu 24.04","text":"<ul> <li>Si ya est\u00e1s en Ubuntu nativo:  Omite este Paso 1 completo (instalaci\u00f3n de WSL2 y Ubuntu)</li> <li>Si est\u00e1s en Windows 11:  Sigue todos los pasos. </li> </ul> <p>WSL2 (Windows Subsystem for Linux 2) es una mejora del Subsistema de Windows para Linux (WSL), que permite ejecutar distribuciones Linux nativas en Windows sin necesidad de m\u00e1quinas virtuales tradicionales.</p> <p>Abre powershell como administrador  <pre><code>wsl --install -d Ubuntu-24.04\n</code></pre> Este comando:</p> <ul> <li>Habilita el Subsistema de Windows para Linux (WSL) y la plataforma de maquina virtual</li> <li>Configura WSL2 comola version default</li> <li>Descarga e instala Ubuntu 24.04 LTS (Noble Numbat es el distro estable actual)</li> </ul>"},{"location":"faqs/#2-primer-arranque-y-actualizacion-del-sistema","title":"2.  Primer arranque y actualizaci\u00f3n del sistema","text":"<p>Si estas en windows inicia Ubuntu (Desdes inicio) y crea un usuario/contrasena de UNIX(La contrasena no mostrara caracteres cuando escribes), posteriormente en el shell corre los siguientes comandos:</p> <p><pre><code>sudo apt update\nsudo apt full-upgrade -y\n</code></pre> Esto actualizara to Ubuntu</p>"},{"location":"faqs/#3-configuracion-del-sistema-para-ros-2","title":"3. Configuraci\u00f3n del sistema para ROS 2","text":"<p>Antes de instalar ROS, debemos configurar nuestro sistema para hacerlo compatible.</p>"},{"location":"faqs/#31-configurar-el-locale-codificacion-de-texto","title":"3.1 Configurar el locale (codificaci\u00f3n de texto)","text":"<p>Primero debemos configurar el locale que se refiere a los ajutes de un sistema para un idioma, ROS utiliza UTF-8.  Evitando problemas con caracteres especiales en ROS y otros programas.</p> <p><pre><code>sudo apt update &amp;&amp; sudo apt install locales\nsudo locale-gen en_US en_US.UTF-8\nsudo update-locale LC_ALL=en_US.UTF-8 LANG=en_US.UTF-8\nexport LANG=en_US.UTF-8\n</code></pre> Estos settings utilizan ingles estados unidos, sin embargo cualquier esta bien UTF-8 sirve.</p> <pre><code>locale # Verificamos que sea UTF-8\n</code></pre>"},{"location":"faqs/#32-habilitar-universe-y-anadir-el-repositorio-de-ros-2","title":"3.2 Habilitar \u201cuniverse\u201d y a\u00f1adir el repositorio de ROS 2","text":"<p>Primero debemos asegurar que el repositorio de Ubuntu Universe este habilitado. </p> <pre><code>sudo apt install -y software-properties-common\nsudo add-apt-repository universe\n</code></pre> <p>Ahora agreguemos la clave GPG ROS 2 con apt.</p> <pre><code>sudo apt update\nsudo apt install -y curl\ncurl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key \\\n  | sudo tee /usr/share/keyrings/ros-archive-keyring.gpg\n</code></pre> <p>Finalmente agregemos el repositorio a tu lista de sources para instalar.</p> <pre><code>echo \"deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/ros-archive-keyring.gpg] \\\n  http://packages.ros.org/ros2/ubuntu \\\n  $(. /etc/os-release &amp;&amp; echo $UBUNTU_CODENAME) main\" \\\n  | sudo tee /etc/apt/sources.list.d/ros2.list &gt; /dev/null\n</code></pre>"},{"location":"faqs/#4-instalar-ros-2-jazzy-desktop","title":"4. Instalar ROS 2 Jazzy Desktop","text":"<p>Primero actualiza tu repositorio de apt para tomar en cuenta los cambios que hicimos. <pre><code>sudo apt update\nsudo apt upgrade\n</code></pre></p> <p>Realizamos la instalacion completa</p> <pre><code>sudo apt install ros-jazzy-desktop\n</code></pre>"},{"location":"faqs/#5-verifica-instalacion-con-un-ejemplo","title":"5. Verifica instalacion con un ejemplo","text":"<p>Para esta prueba necesitaras dos terminales porque lo que abre una segunda terminal.</p> <p>En una terminal vamos a correr un codigo sencillo en C++ llamado talker:</p> <pre><code>source /opt/ros/jazzy/setup.bash\nros2 run demo_nodes_cpp talker\n</code></pre> <p>En otra terminal vamos correr un codigo en python llamado Listener:</p> <pre><code>source /opt/ros/jazzy/setup.bash\nros2 run demo_nodes_py listener\n</code></pre> <p>Deberias ver que talker imprime en consola, Publishing: numbers y en la consola on listener se imprime I heard: numbers coincidiendo el mensaje. Verificando que los APIs de C++ y python funcionan.</p> <p>Felicidades has isntalado ROS.</p>"},{"location":"tutoriales_Laser/","title":"Instalaci\u00f3n de ROS 2 Jazzy Jalisco (WSL2 + WSLg)","text":""},{"location":"tutoriales_Laser/#que-es-ros","title":"\u00bfQu\u00e9 es ROS?","text":"<p>Aunque se llame \u201csistema operativo\u201d, en realidad es un conjunto de herramientas y librer\u00edas que te ayudan a conectar y coordinar los distintos bloques de tu robot.</p> <p>Define c\u00f3mo intercambian informaci\u00f3n las partes (por ejemplo, tu m\u00f3dulo de visi\u00f3n env\u00eda \u201cveo un obst\u00e1culo\u201d y tu m\u00f3dulo de movimiento recibe ese mensaje y frena).</p> <p>Cuenta con cientos de paquetes que ya resuelven tareas comunes (planificar rutas, procesar im\u00e1genes, simular en ordenador\u2026), de modo que no tienes que escribir todo desde cero.</p> <p>Al dia de actualizacion de esta pagina 21 de mayo de 2025 Jazzy Jalisco es la distribucion mas moderna estable sacada en mayo 23, 2024 con soporte hasta Mayo 2029. Revisar la documentacion de ROS Para mas informacion.</p> <p>ROS es nativo a Linux, el cual deberia ser usado en proceso de alto rendimiento. Sin embargo para experimentacion o si no se quiere sacar una particion de Linux WSL2 es una mejora del Subsistema de Windows para Linux (WSL), que permite ejecutar distribuciones Linux nativas en Windows sin necesidad de m\u00e1quinas virtuales tradicionales.</p>"},{"location":"tutoriales_Laser/#1-instalar-wsl2-y-ubuntu-2404","title":"1. Instalar WSL2 y Ubuntu 24.04","text":"<ul> <li>Si ya est\u00e1s en Ubuntu nativo:  Omite este Paso 1 completo (instalaci\u00f3n de WSL2 y Ubuntu)</li> <li>Si est\u00e1s en Windows 11:  Sigue todos los pasos. </li> </ul> <p>WSL2 (Windows Subsystem for Linux 2) es una mejora del Subsistema de Windows para Linux (WSL), que permite ejecutar distribuciones Linux nativas en Windows sin necesidad de m\u00e1quinas virtuales tradicionales.</p> <p>Abre powershell como administrador  <pre><code>wsl --install -d Ubuntu-24.04\n</code></pre> Este comando:</p> <ul> <li>Habilita el Subsistema de Windows para Linux (WSL) y la plataforma de maquina virtual</li> <li>Configura WSL2 comola version default</li> <li>Descarga e instala Ubuntu 24.04 LTS (Noble Numbat es el distro estable actual)</li> </ul>"},{"location":"tutoriales_Laser/#2-primer-arranque-y-actualizacion-del-sistema","title":"2.  Primer arranque y actualizaci\u00f3n del sistema","text":"<p>Si estas en windows inicia Ubuntu (Desdes inicio) y crea un usuario/contrasena de UNIX(La contrasena no mostrara caracteres cuando escribes), posteriormente en el shell corre los siguientes comandos:</p> <p><pre><code>sudo apt update\nsudo apt full-upgrade -y\n</code></pre> Esto actualizara to Ubuntu</p>"},{"location":"tutoriales_Laser/#3-configuracion-del-sistema-para-ros-2","title":"3. Configuraci\u00f3n del sistema para ROS 2","text":"<p>Antes de instalar ROS, debemos configurar nuestro sistema para hacerlo compatible.</p>"},{"location":"tutoriales_Laser/#31-configurar-el-locale-codificacion-de-texto","title":"3.1 Configurar el locale (codificaci\u00f3n de texto)","text":"<p>Primero debemos configurar el locale que se refiere a los ajutes de un sistema para un idioma, ROS utiliza UTF-8.  Evitando problemas con caracteres especiales en ROS y otros programas.</p> <p><pre><code>sudo apt update &amp;&amp; sudo apt install locales\nsudo locale-gen en_US en_US.UTF-8\nsudo update-locale LC_ALL=en_US.UTF-8 LANG=en_US.UTF-8\nexport LANG=en_US.UTF-8\n</code></pre> Estos settings utilizan ingles estados unidos, sin embargo cualquier esta bien UTF-8 sirve.</p> <pre><code>locale # Verificamos que sea UTF-8\n</code></pre>"},{"location":"tutoriales_Laser/#32-habilitar-universe-y-anadir-el-repositorio-de-ros-2","title":"3.2 Habilitar \u201cuniverse\u201d y a\u00f1adir el repositorio de ROS 2","text":"<p>Primero debemos asegurar que el repositorio de Ubuntu Universe este habilitado. </p> <pre><code>sudo apt install -y software-properties-common\nsudo add-apt-repository universe\n</code></pre> <p>Ahora agreguemos la clave GPG ROS 2 con apt.</p> <pre><code>sudo apt update\nsudo apt install -y curl\ncurl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key \\\n  | sudo tee /usr/share/keyrings/ros-archive-keyring.gpg\n</code></pre> <p>Finalmente agregemos el repositorio a tu lista de sources para instalar.</p> <pre><code>echo \"deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/ros-archive-keyring.gpg] \\\n  http://packages.ros.org/ros2/ubuntu \\\n  $(. /etc/os-release &amp;&amp; echo $UBUNTU_CODENAME) main\" \\\n  | sudo tee /etc/apt/sources.list.d/ros2.list &gt; /dev/null\n</code></pre>"},{"location":"tutoriales_Laser/#4-instalar-ros-2-jazzy-desktop","title":"4. Instalar ROS 2 Jazzy Desktop","text":"<p>Primero actualiza tu repositorio de apt para tomar en cuenta los cambios que hicimos. <pre><code>sudo apt update\nsudo apt upgrade\n</code></pre></p> <p>Realizamos la instalacion completa</p> <pre><code>sudo apt install ros-jazzy-desktop\n</code></pre>"},{"location":"tutoriales_Laser/#5-verifica-instalacion-con-un-ejemplo","title":"5. Verifica instalacion con un ejemplo","text":"<p>Para esta prueba necesitaras dos terminales porque lo que abre una segunda terminal.</p> <p>En una terminal vamos a correr un codigo sencillo en C++ llamado talker:</p> <pre><code>source /opt/ros/jazzy/setup.bash\nros2 run demo_nodes_cpp talker\n</code></pre> <p>En otra terminal vamos correr un codigo en python llamado Listener:</p> <pre><code>source /opt/ros/jazzy/setup.bash\nros2 run demo_nodes_py listener\n</code></pre> <p>Deberias ver que talker imprime en consola, Publishing: numbers y en la consola on listener se imprime I heard: numbers coincidiendo el mensaje. Verificando que los APIs de C++ y python funcionan.</p> <p>Felicidades has isntalado ROS.</p>"},{"location":"tutoriales_Router/","title":"Instalaci\u00f3n de ROS 2 Jazzy Jalisco (WSL2 + WSLg)","text":""},{"location":"tutoriales_Router/#que-es-ros","title":"\u00bfQu\u00e9 es ROS?","text":"<p>Aunque se llame \u201csistema operativo\u201d, en realidad es un conjunto de herramientas y librer\u00edas que te ayudan a conectar y coordinar los distintos bloques de tu robot.</p> <p>Define c\u00f3mo intercambian informaci\u00f3n las partes (por ejemplo, tu m\u00f3dulo de visi\u00f3n env\u00eda \u201cveo un obst\u00e1culo\u201d y tu m\u00f3dulo de movimiento recibe ese mensaje y frena).</p> <p>Cuenta con cientos de paquetes que ya resuelven tareas comunes (planificar rutas, procesar im\u00e1genes, simular en ordenador\u2026), de modo que no tienes que escribir todo desde cero.</p> <p>Al dia de actualizacion de esta pagina 21 de mayo de 2025 Jazzy Jalisco es la distribucion mas moderna estable sacada en mayo 23, 2024 con soporte hasta Mayo 2029. Revisar la documentacion de ROS Para mas informacion.</p> <p>ROS es nativo a Linux, el cual deberia ser usado en proceso de alto rendimiento. Sin embargo para experimentacion o si no se quiere sacar una particion de Linux WSL2 es una mejora del Subsistema de Windows para Linux (WSL), que permite ejecutar distribuciones Linux nativas en Windows sin necesidad de m\u00e1quinas virtuales tradicionales.</p>"},{"location":"tutoriales_Router/#1-instalar-wsl2-y-ubuntu-2404","title":"1. Instalar WSL2 y Ubuntu 24.04","text":"<ul> <li>Si ya est\u00e1s en Ubuntu nativo:  Omite este Paso 1 completo (instalaci\u00f3n de WSL2 y Ubuntu)</li> <li>Si est\u00e1s en Windows 11:  Sigue todos los pasos. </li> </ul> <p>WSL2 (Windows Subsystem for Linux 2) es una mejora del Subsistema de Windows para Linux (WSL), que permite ejecutar distribuciones Linux nativas en Windows sin necesidad de m\u00e1quinas virtuales tradicionales.</p> <p>Abre powershell como administrador  <pre><code>wsl --install -d Ubuntu-24.04\n</code></pre> Este comando:</p> <ul> <li>Habilita el Subsistema de Windows para Linux (WSL) y la plataforma de maquina virtual</li> <li>Configura WSL2 comola version default</li> <li>Descarga e instala Ubuntu 24.04 LTS (Noble Numbat es el distro estable actual)</li> </ul>"},{"location":"tutoriales_Router/#2-primer-arranque-y-actualizacion-del-sistema","title":"2.  Primer arranque y actualizaci\u00f3n del sistema","text":"<p>Si estas en windows inicia Ubuntu (Desdes inicio) y crea un usuario/contrasena de UNIX(La contrasena no mostrara caracteres cuando escribes), posteriormente en el shell corre los siguientes comandos:</p> <p><pre><code>sudo apt update\nsudo apt full-upgrade -y\n</code></pre> Esto actualizara to Ubuntu</p>"},{"location":"tutoriales_Router/#3-configuracion-del-sistema-para-ros-2","title":"3. Configuraci\u00f3n del sistema para ROS 2","text":"<p>Antes de instalar ROS, debemos configurar nuestro sistema para hacerlo compatible.</p>"},{"location":"tutoriales_Router/#31-configurar-el-locale-codificacion-de-texto","title":"3.1 Configurar el locale (codificaci\u00f3n de texto)","text":"<p>Primero debemos configurar el locale que se refiere a los ajutes de un sistema para un idioma, ROS utiliza UTF-8.  Evitando problemas con caracteres especiales en ROS y otros programas.</p> <p><pre><code>sudo apt update &amp;&amp; sudo apt install locales\nsudo locale-gen en_US en_US.UTF-8\nsudo update-locale LC_ALL=en_US.UTF-8 LANG=en_US.UTF-8\nexport LANG=en_US.UTF-8\n</code></pre> Estos settings utilizan ingles estados unidos, sin embargo cualquier esta bien UTF-8 sirve.</p> <pre><code>locale # Verificamos que sea UTF-8\n</code></pre>"},{"location":"tutoriales_Router/#32-habilitar-universe-y-anadir-el-repositorio-de-ros-2","title":"3.2 Habilitar \u201cuniverse\u201d y a\u00f1adir el repositorio de ROS 2","text":"<p>Primero debemos asegurar que el repositorio de Ubuntu Universe este habilitado. </p> <pre><code>sudo apt install -y software-properties-common\nsudo add-apt-repository universe\n</code></pre> <p>Ahora agreguemos la clave GPG ROS 2 con apt.</p> <pre><code>sudo apt update\nsudo apt install -y curl\ncurl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key \\\n  | sudo tee /usr/share/keyrings/ros-archive-keyring.gpg\n</code></pre> <p>Finalmente agregemos el repositorio a tu lista de sources para instalar.</p> <pre><code>echo \"deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/ros-archive-keyring.gpg] \\\n  http://packages.ros.org/ros2/ubuntu \\\n  $(. /etc/os-release &amp;&amp; echo $UBUNTU_CODENAME) main\" \\\n  | sudo tee /etc/apt/sources.list.d/ros2.list &gt; /dev/null\n</code></pre>"},{"location":"tutoriales_Router/#4-instalar-ros-2-jazzy-desktop","title":"4. Instalar ROS 2 Jazzy Desktop","text":"<p>Primero actualiza tu repositorio de apt para tomar en cuenta los cambios que hicimos. <pre><code>sudo apt update\nsudo apt upgrade\n</code></pre></p> <p>Realizamos la instalacion completa</p> <pre><code>sudo apt install ros-jazzy-desktop\n</code></pre>"},{"location":"tutoriales_Router/#5-verifica-instalacion-con-un-ejemplo","title":"5. Verifica instalacion con un ejemplo","text":"<p>Para esta prueba necesitaras dos terminales porque lo que abre una segunda terminal.</p> <p>En una terminal vamos a correr un codigo sencillo en C++ llamado talker:</p> <pre><code>source /opt/ros/jazzy/setup.bash\nros2 run demo_nodes_cpp talker\n</code></pre> <p>En otra terminal vamos correr un codigo en python llamado Listener:</p> <pre><code>source /opt/ros/jazzy/setup.bash\nros2 run demo_nodes_py listener\n</code></pre> <p>Deberias ver que talker imprime en consola, Publishing: numbers y en la consola on listener se imprime I heard: numbers coincidiendo el mensaje. Verificando que los APIs de C++ y python funcionan.</p> <p>Felicidades has isntalado ROS.</p>"},{"location":"tutoriales_cura/","title":"Instalaci\u00f3n de ROS 2 Jazzy Jalisco (WSL2 + WSLg)","text":""},{"location":"tutoriales_cura/#que-es-ros","title":"\u00bfQu\u00e9 es ROS?","text":"<p>Aunque se llame \u201csistema operativo\u201d, en realidad es un conjunto de herramientas y librer\u00edas que te ayudan a conectar y coordinar los distintos bloques de tu robot.</p> <p>Define c\u00f3mo intercambian informaci\u00f3n las partes (por ejemplo, tu m\u00f3dulo de visi\u00f3n env\u00eda \u201cveo un obst\u00e1culo\u201d y tu m\u00f3dulo de movimiento recibe ese mensaje y frena).</p> <p>Cuenta con cientos de paquetes que ya resuelven tareas comunes (planificar rutas, procesar im\u00e1genes, simular en ordenador\u2026), de modo que no tienes que escribir todo desde cero.</p> <p>Al dia de actualizacion de esta pagina 21 de mayo de 2025 Jazzy Jalisco es la distribucion mas moderna estable sacada en mayo 23, 2024 con soporte hasta Mayo 2029. Revisar la documentacion de ROS Para mas informacion.</p> <p>ROS es nativo a Linux, el cual deberia ser usado en proceso de alto rendimiento. Sin embargo para experimentacion o si no se quiere sacar una particion de Linux WSL2 es una mejora del Subsistema de Windows para Linux (WSL), que permite ejecutar distribuciones Linux nativas en Windows sin necesidad de m\u00e1quinas virtuales tradicionales.</p>"},{"location":"tutoriales_cura/#1-instalar-wsl2-y-ubuntu-2404","title":"1. Instalar WSL2 y Ubuntu 24.04","text":"<ul> <li>Si ya est\u00e1s en Ubuntu nativo:  Omite este Paso 1 completo (instalaci\u00f3n de WSL2 y Ubuntu)</li> <li>Si est\u00e1s en Windows 11:  Sigue todos los pasos. </li> </ul> <p>WSL2 (Windows Subsystem for Linux 2) es una mejora del Subsistema de Windows para Linux (WSL), que permite ejecutar distribuciones Linux nativas en Windows sin necesidad de m\u00e1quinas virtuales tradicionales.</p> <p>Abre powershell como administrador  <pre><code>wsl --install -d Ubuntu-24.04\n</code></pre> Este comando:</p> <ul> <li>Habilita el Subsistema de Windows para Linux (WSL) y la plataforma de maquina virtual</li> <li>Configura WSL2 comola version default</li> <li>Descarga e instala Ubuntu 24.04 LTS (Noble Numbat es el distro estable actual)</li> </ul>"},{"location":"tutoriales_cura/#2-primer-arranque-y-actualizacion-del-sistema","title":"2.  Primer arranque y actualizaci\u00f3n del sistema","text":"<p>Si estas en windows inicia Ubuntu (Desdes inicio) y crea un usuario/contrasena de UNIX(La contrasena no mostrara caracteres cuando escribes), posteriormente en el shell corre los siguientes comandos:</p> <p><pre><code>sudo apt update\nsudo apt full-upgrade -y\n</code></pre> Esto actualizara to Ubuntu</p>"},{"location":"tutoriales_cura/#3-configuracion-del-sistema-para-ros-2","title":"3. Configuraci\u00f3n del sistema para ROS 2","text":"<p>Antes de instalar ROS, debemos configurar nuestro sistema para hacerlo compatible.</p>"},{"location":"tutoriales_cura/#31-configurar-el-locale-codificacion-de-texto","title":"3.1 Configurar el locale (codificaci\u00f3n de texto)","text":"<p>Primero debemos configurar el locale que se refiere a los ajutes de un sistema para un idioma, ROS utiliza UTF-8.  Evitando problemas con caracteres especiales en ROS y otros programas.</p> <p><pre><code>sudo apt update &amp;&amp; sudo apt install locales\nsudo locale-gen en_US en_US.UTF-8\nsudo update-locale LC_ALL=en_US.UTF-8 LANG=en_US.UTF-8\nexport LANG=en_US.UTF-8\n</code></pre> Estos settings utilizan ingles estados unidos, sin embargo cualquier esta bien UTF-8 sirve.</p> <pre><code>locale # Verificamos que sea UTF-8\n</code></pre>"},{"location":"tutoriales_cura/#32-habilitar-universe-y-anadir-el-repositorio-de-ros-2","title":"3.2 Habilitar \u201cuniverse\u201d y a\u00f1adir el repositorio de ROS 2","text":"<p>Primero debemos asegurar que el repositorio de Ubuntu Universe este habilitado. </p> <pre><code>sudo apt install -y software-properties-common\nsudo add-apt-repository universe\n</code></pre> <p>Ahora agreguemos la clave GPG ROS 2 con apt.</p> <pre><code>sudo apt update\nsudo apt install -y curl\ncurl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key \\\n  | sudo tee /usr/share/keyrings/ros-archive-keyring.gpg\n</code></pre> <p>Finalmente agregemos el repositorio a tu lista de sources para instalar.</p> <pre><code>echo \"deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/ros-archive-keyring.gpg] \\\n  http://packages.ros.org/ros2/ubuntu \\\n  $(. /etc/os-release &amp;&amp; echo $UBUNTU_CODENAME) main\" \\\n  | sudo tee /etc/apt/sources.list.d/ros2.list &gt; /dev/null\n</code></pre>"},{"location":"tutoriales_cura/#4-instalar-ros-2-jazzy-desktop","title":"4. Instalar ROS 2 Jazzy Desktop","text":"<p>Primero actualiza tu repositorio de apt para tomar en cuenta los cambios que hicimos. <pre><code>sudo apt update\nsudo apt upgrade\n</code></pre></p> <p>Realizamos la instalacion completa</p> <pre><code>sudo apt install ros-jazzy-desktop\n</code></pre>"},{"location":"tutoriales_cura/#5-verifica-instalacion-con-un-ejemplo","title":"5. Verifica instalacion con un ejemplo","text":"<p>Para esta prueba necesitaras dos terminales porque lo que abre una segunda terminal.</p> <p>En una terminal vamos a correr un codigo sencillo en C++ llamado talker:</p> <pre><code>source /opt/ros/jazzy/setup.bash\nros2 run demo_nodes_cpp talker\n</code></pre> <p>En otra terminal vamos correr un codigo en python llamado Listener:</p> <pre><code>source /opt/ros/jazzy/setup.bash\nros2 run demo_nodes_py listener\n</code></pre> <p>Deberias ver que talker imprime en consola, Publishing: numbers y en la consola on listener se imprime I heard: numbers coincidiendo el mensaje. Verificando que los APIs de C++ y python funcionan.</p> <p>Felicidades has isntalado ROS.</p>"},{"location":"tutoriales_mods/","title":"Instalaci\u00f3n de ROS 2 Jazzy Jalisco (WSL2 + WSLg)","text":""},{"location":"tutoriales_mods/#que-es-ros","title":"\u00bfQu\u00e9 es ROS?","text":"<p>Aunque se llame \u201csistema operativo\u201d, en realidad es un conjunto de herramientas y librer\u00edas que te ayudan a conectar y coordinar los distintos bloques de tu robot.</p> <p>Define c\u00f3mo intercambian informaci\u00f3n las partes (por ejemplo, tu m\u00f3dulo de visi\u00f3n env\u00eda \u201cveo un obst\u00e1culo\u201d y tu m\u00f3dulo de movimiento recibe ese mensaje y frena).</p> <p>Cuenta con cientos de paquetes que ya resuelven tareas comunes (planificar rutas, procesar im\u00e1genes, simular en ordenador\u2026), de modo que no tienes que escribir todo desde cero.</p> <p>Al dia de actualizacion de esta pagina 21 de mayo de 2025 Jazzy Jalisco es la distribucion mas moderna estable sacada en mayo 23, 2024 con soporte hasta Mayo 2029. Revisar la documentacion de ROS Para mas informacion.</p> <p>ROS es nativo a Linux, el cual deberia ser usado en proceso de alto rendimiento. Sin embargo para experimentacion o si no se quiere sacar una particion de Linux WSL2 es una mejora del Subsistema de Windows para Linux (WSL), que permite ejecutar distribuciones Linux nativas en Windows sin necesidad de m\u00e1quinas virtuales tradicionales.</p>"},{"location":"tutoriales_mods/#1-instalar-wsl2-y-ubuntu-2404","title":"1. Instalar WSL2 y Ubuntu 24.04","text":"<ul> <li>Si ya est\u00e1s en Ubuntu nativo:  Omite este Paso 1 completo (instalaci\u00f3n de WSL2 y Ubuntu)</li> <li>Si est\u00e1s en Windows 11:  Sigue todos los pasos. </li> </ul> <p>WSL2 (Windows Subsystem for Linux 2) es una mejora del Subsistema de Windows para Linux (WSL), que permite ejecutar distribuciones Linux nativas en Windows sin necesidad de m\u00e1quinas virtuales tradicionales.</p> <p>Abre powershell como administrador  <pre><code>wsl --install -d Ubuntu-24.04\n</code></pre> Este comando:</p> <ul> <li>Habilita el Subsistema de Windows para Linux (WSL) y la plataforma de maquina virtual</li> <li>Configura WSL2 comola version default</li> <li>Descarga e instala Ubuntu 24.04 LTS (Noble Numbat es el distro estable actual)</li> </ul>"},{"location":"tutoriales_mods/#2-primer-arranque-y-actualizacion-del-sistema","title":"2.  Primer arranque y actualizaci\u00f3n del sistema","text":"<p>Si estas en windows inicia Ubuntu (Desdes inicio) y crea un usuario/contrasena de UNIX(La contrasena no mostrara caracteres cuando escribes), posteriormente en el shell corre los siguientes comandos:</p> <p><pre><code>sudo apt update\nsudo apt full-upgrade -y\n</code></pre> Esto actualizara to Ubuntu</p>"},{"location":"tutoriales_mods/#3-configuracion-del-sistema-para-ros-2","title":"3. Configuraci\u00f3n del sistema para ROS 2","text":"<p>Antes de instalar ROS, debemos configurar nuestro sistema para hacerlo compatible.</p>"},{"location":"tutoriales_mods/#31-configurar-el-locale-codificacion-de-texto","title":"3.1 Configurar el locale (codificaci\u00f3n de texto)","text":"<p>Primero debemos configurar el locale que se refiere a los ajutes de un sistema para un idioma, ROS utiliza UTF-8.  Evitando problemas con caracteres especiales en ROS y otros programas.</p> <p><pre><code>sudo apt update &amp;&amp; sudo apt install locales\nsudo locale-gen en_US en_US.UTF-8\nsudo update-locale LC_ALL=en_US.UTF-8 LANG=en_US.UTF-8\nexport LANG=en_US.UTF-8\n</code></pre> Estos settings utilizan ingles estados unidos, sin embargo cualquier esta bien UTF-8 sirve.</p> <pre><code>locale # Verificamos que sea UTF-8\n</code></pre>"},{"location":"tutoriales_mods/#32-habilitar-universe-y-anadir-el-repositorio-de-ros-2","title":"3.2 Habilitar \u201cuniverse\u201d y a\u00f1adir el repositorio de ROS 2","text":"<p>Primero debemos asegurar que el repositorio de Ubuntu Universe este habilitado. </p> <pre><code>sudo apt install -y software-properties-common\nsudo add-apt-repository universe\n</code></pre> <p>Ahora agreguemos la clave GPG ROS 2 con apt.</p> <pre><code>sudo apt update\nsudo apt install -y curl\ncurl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key \\\n  | sudo tee /usr/share/keyrings/ros-archive-keyring.gpg\n</code></pre> <p>Finalmente agregemos el repositorio a tu lista de sources para instalar.</p> <pre><code>echo \"deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/ros-archive-keyring.gpg] \\\n  http://packages.ros.org/ros2/ubuntu \\\n  $(. /etc/os-release &amp;&amp; echo $UBUNTU_CODENAME) main\" \\\n  | sudo tee /etc/apt/sources.list.d/ros2.list &gt; /dev/null\n</code></pre>"},{"location":"tutoriales_mods/#4-instalar-ros-2-jazzy-desktop","title":"4. Instalar ROS 2 Jazzy Desktop","text":"<p>Primero actualiza tu repositorio de apt para tomar en cuenta los cambios que hicimos. <pre><code>sudo apt update\nsudo apt upgrade\n</code></pre></p> <p>Realizamos la instalacion completa</p> <pre><code>sudo apt install ros-jazzy-desktop\n</code></pre>"},{"location":"tutoriales_mods/#5-verifica-instalacion-con-un-ejemplo","title":"5. Verifica instalacion con un ejemplo","text":"<p>Para esta prueba necesitaras dos terminales porque lo que abre una segunda terminal.</p> <p>En una terminal vamos a correr un codigo sencillo en C++ llamado talker:</p> <pre><code>source /opt/ros/jazzy/setup.bash\nros2 run demo_nodes_cpp talker\n</code></pre> <p>En otra terminal vamos correr un codigo en python llamado Listener:</p> <pre><code>source /opt/ros/jazzy/setup.bash\nros2 run demo_nodes_py listener\n</code></pre> <p>Deberias ver que talker imprime en consola, Publishing: numbers y en la consola on listener se imprime I heard: numbers coincidiendo el mensaje. Verificando que los APIs de C++ y python funcionan.</p> <p>Felicidades has isntalado ROS.</p>"},{"location":"tutoriales_monofab/","title":"Instalaci\u00f3n de ROS 2 Jazzy Jalisco (WSL2 + WSLg)","text":""},{"location":"tutoriales_monofab/#que-es-ros","title":"\u00bfQu\u00e9 es ROS?","text":"<p>Aunque se llame \u201csistema operativo\u201d, en realidad es un conjunto de herramientas y librer\u00edas que te ayudan a conectar y coordinar los distintos bloques de tu robot.</p> <p>Define c\u00f3mo intercambian informaci\u00f3n las partes (por ejemplo, tu m\u00f3dulo de visi\u00f3n env\u00eda \u201cveo un obst\u00e1culo\u201d y tu m\u00f3dulo de movimiento recibe ese mensaje y frena).</p> <p>Cuenta con cientos de paquetes que ya resuelven tareas comunes (planificar rutas, procesar im\u00e1genes, simular en ordenador\u2026), de modo que no tienes que escribir todo desde cero.</p> <p>Al dia de actualizacion de esta pagina 21 de mayo de 2025 Jazzy Jalisco es la distribucion mas moderna estable sacada en mayo 23, 2024 con soporte hasta Mayo 2029. Revisar la documentacion de ROS Para mas informacion.</p> <p>ROS es nativo a Linux, el cual deberia ser usado en proceso de alto rendimiento. Sin embargo para experimentacion o si no se quiere sacar una particion de Linux WSL2 es una mejora del Subsistema de Windows para Linux (WSL), que permite ejecutar distribuciones Linux nativas en Windows sin necesidad de m\u00e1quinas virtuales tradicionales.</p>"},{"location":"tutoriales_monofab/#1-instalar-wsl2-y-ubuntu-2404","title":"1. Instalar WSL2 y Ubuntu 24.04","text":"<ul> <li>Si ya est\u00e1s en Ubuntu nativo:  Omite este Paso 1 completo (instalaci\u00f3n de WSL2 y Ubuntu)</li> <li>Si est\u00e1s en Windows 11:  Sigue todos los pasos. </li> </ul> <p>WSL2 (Windows Subsystem for Linux 2) es una mejora del Subsistema de Windows para Linux (WSL), que permite ejecutar distribuciones Linux nativas en Windows sin necesidad de m\u00e1quinas virtuales tradicionales.</p> <p>Abre powershell como administrador  <pre><code>wsl --install -d Ubuntu-24.04\n</code></pre> Este comando:</p> <ul> <li>Habilita el Subsistema de Windows para Linux (WSL) y la plataforma de maquina virtual</li> <li>Configura WSL2 comola version default</li> <li>Descarga e instala Ubuntu 24.04 LTS (Noble Numbat es el distro estable actual)</li> </ul>"},{"location":"tutoriales_monofab/#2-primer-arranque-y-actualizacion-del-sistema","title":"2.  Primer arranque y actualizaci\u00f3n del sistema","text":"<p>Si estas en windows inicia Ubuntu (Desdes inicio) y crea un usuario/contrasena de UNIX(La contrasena no mostrara caracteres cuando escribes), posteriormente en el shell corre los siguientes comandos:</p> <p><pre><code>sudo apt update\nsudo apt full-upgrade -y\n</code></pre> Esto actualizara to Ubuntu</p>"},{"location":"tutoriales_monofab/#3-configuracion-del-sistema-para-ros-2","title":"3. Configuraci\u00f3n del sistema para ROS 2","text":"<p>Antes de instalar ROS, debemos configurar nuestro sistema para hacerlo compatible.</p>"},{"location":"tutoriales_monofab/#31-configurar-el-locale-codificacion-de-texto","title":"3.1 Configurar el locale (codificaci\u00f3n de texto)","text":"<p>Primero debemos configurar el locale que se refiere a los ajutes de un sistema para un idioma, ROS utiliza UTF-8.  Evitando problemas con caracteres especiales en ROS y otros programas.</p> <p><pre><code>sudo apt update &amp;&amp; sudo apt install locales\nsudo locale-gen en_US en_US.UTF-8\nsudo update-locale LC_ALL=en_US.UTF-8 LANG=en_US.UTF-8\nexport LANG=en_US.UTF-8\n</code></pre> Estos settings utilizan ingles estados unidos, sin embargo cualquier esta bien UTF-8 sirve.</p> <pre><code>locale # Verificamos que sea UTF-8\n</code></pre>"},{"location":"tutoriales_monofab/#32-habilitar-universe-y-anadir-el-repositorio-de-ros-2","title":"3.2 Habilitar \u201cuniverse\u201d y a\u00f1adir el repositorio de ROS 2","text":"<p>Primero debemos asegurar que el repositorio de Ubuntu Universe este habilitado. </p> <pre><code>sudo apt install -y software-properties-common\nsudo add-apt-repository universe\n</code></pre> <p>Ahora agreguemos la clave GPG ROS 2 con apt.</p> <pre><code>sudo apt update\nsudo apt install -y curl\ncurl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key \\\n  | sudo tee /usr/share/keyrings/ros-archive-keyring.gpg\n</code></pre> <p>Finalmente agregemos el repositorio a tu lista de sources para instalar.</p> <pre><code>echo \"deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/ros-archive-keyring.gpg] \\\n  http://packages.ros.org/ros2/ubuntu \\\n  $(. /etc/os-release &amp;&amp; echo $UBUNTU_CODENAME) main\" \\\n  | sudo tee /etc/apt/sources.list.d/ros2.list &gt; /dev/null\n</code></pre>"},{"location":"tutoriales_monofab/#4-instalar-ros-2-jazzy-desktop","title":"4. Instalar ROS 2 Jazzy Desktop","text":"<p>Primero actualiza tu repositorio de apt para tomar en cuenta los cambios que hicimos. <pre><code>sudo apt update\nsudo apt upgrade\n</code></pre></p> <p>Realizamos la instalacion completa</p> <pre><code>sudo apt install ros-jazzy-desktop\n</code></pre>"},{"location":"tutoriales_monofab/#5-verifica-instalacion-con-un-ejemplo","title":"5. Verifica instalacion con un ejemplo","text":"<p>Para esta prueba necesitaras dos terminales porque lo que abre una segunda terminal.</p> <p>En una terminal vamos a correr un codigo sencillo en C++ llamado talker:</p> <pre><code>source /opt/ros/jazzy/setup.bash\nros2 run demo_nodes_cpp talker\n</code></pre> <p>En otra terminal vamos correr un codigo en python llamado Listener:</p> <pre><code>source /opt/ros/jazzy/setup.bash\nros2 run demo_nodes_py listener\n</code></pre> <p>Deberias ver que talker imprime en consola, Publishing: numbers y en la consola on listener se imprime I heard: numbers coincidiendo el mensaje. Verificando que los APIs de C++ y python funcionan.</p> <p>Felicidades has isntalado ROS.</p>"},{"location":"tutoriales_print3d/","title":"Instalaci\u00f3n de ROS 2 Jazzy Jalisco (WSL2 + WSLg)","text":""},{"location":"tutoriales_print3d/#que-es-ros","title":"\u00bfQu\u00e9 es ROS?","text":"<p>Aunque se llame \u201csistema operativo\u201d, en realidad es un conjunto de herramientas y librer\u00edas que te ayudan a conectar y coordinar los distintos bloques de tu robot.</p> <p>Define c\u00f3mo intercambian informaci\u00f3n las partes (por ejemplo, tu m\u00f3dulo de visi\u00f3n env\u00eda \u201cveo un obst\u00e1culo\u201d y tu m\u00f3dulo de movimiento recibe ese mensaje y frena).</p> <p>Cuenta con cientos de paquetes que ya resuelven tareas comunes (planificar rutas, procesar im\u00e1genes, simular en ordenador\u2026), de modo que no tienes que escribir todo desde cero.</p> <p>Al dia de actualizacion de esta pagina 21 de mayo de 2025 Jazzy Jalisco es la distribucion mas moderna estable sacada en mayo 23, 2024 con soporte hasta Mayo 2029. Revisar la documentacion de ROS Para mas informacion.</p> <p>ROS es nativo a Linux, el cual deberia ser usado en proceso de alto rendimiento. Sin embargo para experimentacion o si no se quiere sacar una particion de Linux WSL2 es una mejora del Subsistema de Windows para Linux (WSL), que permite ejecutar distribuciones Linux nativas en Windows sin necesidad de m\u00e1quinas virtuales tradicionales.</p>"},{"location":"tutoriales_print3d/#1-instalar-wsl2-y-ubuntu-2404","title":"1. Instalar WSL2 y Ubuntu 24.04","text":"<ul> <li>Si ya est\u00e1s en Ubuntu nativo:  Omite este Paso 1 completo (instalaci\u00f3n de WSL2 y Ubuntu)</li> <li>Si est\u00e1s en Windows 11:  Sigue todos los pasos. </li> </ul> <p>WSL2 (Windows Subsystem for Linux 2) es una mejora del Subsistema de Windows para Linux (WSL), que permite ejecutar distribuciones Linux nativas en Windows sin necesidad de m\u00e1quinas virtuales tradicionales.</p> <p>Abre powershell como administrador  <pre><code>wsl --install -d Ubuntu-24.04\n</code></pre> Este comando:</p> <ul> <li>Habilita el Subsistema de Windows para Linux (WSL) y la plataforma de maquina virtual</li> <li>Configura WSL2 comola version default</li> <li>Descarga e instala Ubuntu 24.04 LTS (Noble Numbat es el distro estable actual)</li> </ul>"},{"location":"tutoriales_print3d/#2-primer-arranque-y-actualizacion-del-sistema","title":"2.  Primer arranque y actualizaci\u00f3n del sistema","text":"<p>Si estas en windows inicia Ubuntu (Desdes inicio) y crea un usuario/contrasena de UNIX(La contrasena no mostrara caracteres cuando escribes), posteriormente en el shell corre los siguientes comandos:</p> <p><pre><code>sudo apt update\nsudo apt full-upgrade -y\n</code></pre> Esto actualizara to Ubuntu</p>"},{"location":"tutoriales_print3d/#3-configuracion-del-sistema-para-ros-2","title":"3. Configuraci\u00f3n del sistema para ROS 2","text":"<p>Antes de instalar ROS, debemos configurar nuestro sistema para hacerlo compatible.</p>"},{"location":"tutoriales_print3d/#31-configurar-el-locale-codificacion-de-texto","title":"3.1 Configurar el locale (codificaci\u00f3n de texto)","text":"<p>Primero debemos configurar el locale que se refiere a los ajutes de un sistema para un idioma, ROS utiliza UTF-8.  Evitando problemas con caracteres especiales en ROS y otros programas.</p> <p><pre><code>sudo apt update &amp;&amp; sudo apt install locales\nsudo locale-gen en_US en_US.UTF-8\nsudo update-locale LC_ALL=en_US.UTF-8 LANG=en_US.UTF-8\nexport LANG=en_US.UTF-8\n</code></pre> Estos settings utilizan ingles estados unidos, sin embargo cualquier esta bien UTF-8 sirve.</p> <pre><code>locale # Verificamos que sea UTF-8\n</code></pre>"},{"location":"tutoriales_print3d/#32-habilitar-universe-y-anadir-el-repositorio-de-ros-2","title":"3.2 Habilitar \u201cuniverse\u201d y a\u00f1adir el repositorio de ROS 2","text":"<p>Primero debemos asegurar que el repositorio de Ubuntu Universe este habilitado. </p> <pre><code>sudo apt install -y software-properties-common\nsudo add-apt-repository universe\n</code></pre> <p>Ahora agreguemos la clave GPG ROS 2 con apt.</p> <pre><code>sudo apt update\nsudo apt install -y curl\ncurl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key \\\n  | sudo tee /usr/share/keyrings/ros-archive-keyring.gpg\n</code></pre> <p>Finalmente agregemos el repositorio a tu lista de sources para instalar.</p> <pre><code>echo \"deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/ros-archive-keyring.gpg] \\\n  http://packages.ros.org/ros2/ubuntu \\\n  $(. /etc/os-release &amp;&amp; echo $UBUNTU_CODENAME) main\" \\\n  | sudo tee /etc/apt/sources.list.d/ros2.list &gt; /dev/null\n</code></pre>"},{"location":"tutoriales_print3d/#4-instalar-ros-2-jazzy-desktop","title":"4. Instalar ROS 2 Jazzy Desktop","text":"<p>Primero actualiza tu repositorio de apt para tomar en cuenta los cambios que hicimos. <pre><code>sudo apt update\nsudo apt upgrade\n</code></pre></p> <p>Realizamos la instalacion completa</p> <pre><code>sudo apt install ros-jazzy-desktop\n</code></pre>"},{"location":"tutoriales_print3d/#5-verifica-instalacion-con-un-ejemplo","title":"5. Verifica instalacion con un ejemplo","text":"<p>Para esta prueba necesitaras dos terminales porque lo que abre una segunda terminal.</p> <p>En una terminal vamos a correr un codigo sencillo en C++ llamado talker:</p> <pre><code>source /opt/ros/jazzy/setup.bash\nros2 run demo_nodes_cpp talker\n</code></pre> <p>En otra terminal vamos correr un codigo en python llamado Listener:</p> <pre><code>source /opt/ros/jazzy/setup.bash\nros2 run demo_nodes_py listener\n</code></pre> <p>Deberias ver que talker imprime en consola, Publishing: numbers y en la consola on listener se imprime I heard: numbers coincidiendo el mensaje. Verificando que los APIs de C++ y python funcionan.</p> <p>Felicidades has isntalado ROS.</p>"},{"location":"tutoriales_pslicer/","title":"Instalaci\u00f3n de ROS 2 Jazzy Jalisco (WSL2 + WSLg)","text":""},{"location":"tutoriales_pslicer/#que-es-ros","title":"\u00bfQu\u00e9 es ROS?","text":"<p>Aunque se llame \u201csistema operativo\u201d, en realidad es un conjunto de herramientas y librer\u00edas que te ayudan a conectar y coordinar los distintos bloques de tu robot.</p> <p>Define c\u00f3mo intercambian informaci\u00f3n las partes (por ejemplo, tu m\u00f3dulo de visi\u00f3n env\u00eda \u201cveo un obst\u00e1culo\u201d y tu m\u00f3dulo de movimiento recibe ese mensaje y frena).</p> <p>Cuenta con cientos de paquetes que ya resuelven tareas comunes (planificar rutas, procesar im\u00e1genes, simular en ordenador\u2026), de modo que no tienes que escribir todo desde cero.</p> <p>Al dia de actualizacion de esta pagina 21 de mayo de 2025 Jazzy Jalisco es la distribucion mas moderna estable sacada en mayo 23, 2024 con soporte hasta Mayo 2029. Revisar la documentacion de ROS Para mas informacion.</p> <p>ROS es nativo a Linux, el cual deberia ser usado en proceso de alto rendimiento. Sin embargo para experimentacion o si no se quiere sacar una particion de Linux WSL2 es una mejora del Subsistema de Windows para Linux (WSL), que permite ejecutar distribuciones Linux nativas en Windows sin necesidad de m\u00e1quinas virtuales tradicionales.</p>"},{"location":"tutoriales_pslicer/#1-instalar-wsl2-y-ubuntu-2404","title":"1. Instalar WSL2 y Ubuntu 24.04","text":"<ul> <li>Si ya est\u00e1s en Ubuntu nativo:  Omite este Paso 1 completo (instalaci\u00f3n de WSL2 y Ubuntu)</li> <li>Si est\u00e1s en Windows 11:  Sigue todos los pasos. </li> </ul> <p>WSL2 (Windows Subsystem for Linux 2) es una mejora del Subsistema de Windows para Linux (WSL), que permite ejecutar distribuciones Linux nativas en Windows sin necesidad de m\u00e1quinas virtuales tradicionales.</p> <p>Abre powershell como administrador  <pre><code>wsl --install -d Ubuntu-24.04\n</code></pre> Este comando:</p> <ul> <li>Habilita el Subsistema de Windows para Linux (WSL) y la plataforma de maquina virtual</li> <li>Configura WSL2 comola version default</li> <li>Descarga e instala Ubuntu 24.04 LTS (Noble Numbat es el distro estable actual)</li> </ul>"},{"location":"tutoriales_pslicer/#2-primer-arranque-y-actualizacion-del-sistema","title":"2.  Primer arranque y actualizaci\u00f3n del sistema","text":"<p>Si estas en windows inicia Ubuntu (Desdes inicio) y crea un usuario/contrasena de UNIX(La contrasena no mostrara caracteres cuando escribes), posteriormente en el shell corre los siguientes comandos:</p> <p><pre><code>sudo apt update\nsudo apt full-upgrade -y\n</code></pre> Esto actualizara to Ubuntu</p>"},{"location":"tutoriales_pslicer/#3-configuracion-del-sistema-para-ros-2","title":"3. Configuraci\u00f3n del sistema para ROS 2","text":"<p>Antes de instalar ROS, debemos configurar nuestro sistema para hacerlo compatible.</p>"},{"location":"tutoriales_pslicer/#31-configurar-el-locale-codificacion-de-texto","title":"3.1 Configurar el locale (codificaci\u00f3n de texto)","text":"<p>Primero debemos configurar el locale que se refiere a los ajutes de un sistema para un idioma, ROS utiliza UTF-8.  Evitando problemas con caracteres especiales en ROS y otros programas.</p> <p><pre><code>sudo apt update &amp;&amp; sudo apt install locales\nsudo locale-gen en_US en_US.UTF-8\nsudo update-locale LC_ALL=en_US.UTF-8 LANG=en_US.UTF-8\nexport LANG=en_US.UTF-8\n</code></pre> Estos settings utilizan ingles estados unidos, sin embargo cualquier esta bien UTF-8 sirve.</p> <pre><code>locale # Verificamos que sea UTF-8\n</code></pre>"},{"location":"tutoriales_pslicer/#32-habilitar-universe-y-anadir-el-repositorio-de-ros-2","title":"3.2 Habilitar \u201cuniverse\u201d y a\u00f1adir el repositorio de ROS 2","text":"<p>Primero debemos asegurar que el repositorio de Ubuntu Universe este habilitado. </p> <pre><code>sudo apt install -y software-properties-common\nsudo add-apt-repository universe\n</code></pre> <p>Ahora agreguemos la clave GPG ROS 2 con apt.</p> <pre><code>sudo apt update\nsudo apt install -y curl\ncurl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key \\\n  | sudo tee /usr/share/keyrings/ros-archive-keyring.gpg\n</code></pre> <p>Finalmente agregemos el repositorio a tu lista de sources para instalar.</p> <pre><code>echo \"deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/ros-archive-keyring.gpg] \\\n  http://packages.ros.org/ros2/ubuntu \\\n  $(. /etc/os-release &amp;&amp; echo $UBUNTU_CODENAME) main\" \\\n  | sudo tee /etc/apt/sources.list.d/ros2.list &gt; /dev/null\n</code></pre>"},{"location":"tutoriales_pslicer/#4-instalar-ros-2-jazzy-desktop","title":"4. Instalar ROS 2 Jazzy Desktop","text":"<p>Primero actualiza tu repositorio de apt para tomar en cuenta los cambios que hicimos. <pre><code>sudo apt update\nsudo apt upgrade\n</code></pre></p> <p>Realizamos la instalacion completa</p> <pre><code>sudo apt install ros-jazzy-desktop\n</code></pre>"},{"location":"tutoriales_pslicer/#5-verifica-instalacion-con-un-ejemplo","title":"5. Verifica instalacion con un ejemplo","text":"<p>Para esta prueba necesitaras dos terminales porque lo que abre una segunda terminal.</p> <p>En una terminal vamos a correr un codigo sencillo en C++ llamado talker:</p> <pre><code>source /opt/ros/jazzy/setup.bash\nros2 run demo_nodes_cpp talker\n</code></pre> <p>En otra terminal vamos correr un codigo en python llamado Listener:</p> <pre><code>source /opt/ros/jazzy/setup.bash\nros2 run demo_nodes_py listener\n</code></pre> <p>Deberias ver que talker imprime en consola, Publishing: numbers y en la consola on listener se imprime I heard: numbers coincidiendo el mensaje. Verificando que los APIs de C++ y python funcionan.</p> <p>Felicidades has isntalado ROS.</p>"},{"location":"clases/fab-academy/tema1/","title":"Tema 1","text":"<p>Puedes incluir diagramas de bloques, esquemas de conexi\u00f3n o capturas de pantalla.</p>"},{"location":"clases/fab-academy/tema1/#recursos-adicionales","title":"Recursos Adicionales","text":"<ul> <li>[Enlace a la p </li> </ul>"},{"location":"clases/fab-academy/tema1/#titulo-de-la-asignatura","title":"{{T\u00edtulo de la Asignatura}}","text":"<p>Prerrequisitos: Listar aqu\u00ed las materias, conocimientos o herramientas necesarias.</p> <p>Duraci\u00f3n: X semanas / Y horas.</p>"},{"location":"clases/fab-academy/tema1/#descripcion","title":"Descripci\u00f3n","text":"<p>Breve resumen de la asignatura, su enfoque y aplicaci\u00f3n pr\u00e1ctica.</p>"},{"location":"clases/fab-academy/tema1/#objetivos-de-aprendizaje","title":"Objetivos de Aprendizaje","text":"<ul> <li>Objetivo 1.</li> <li>Objetivo 2.</li> <li>Objetivo 3.</li> </ul>"},{"location":"clases/fab-academy/tema1/#contenido","title":"Contenido","text":"<ol> <li>Tema 1: Breve descripci\u00f3n de contenido.</li> <li>Tema 2: Breve descripci\u00f3n de contenido.</li> <li>Tema 3: Breve descripci\u00f3n de contenido.</li> </ol> <p>[!tip] Puedes adaptar esta lista conforme avances con los estudiantes.</p>"},{"location":"clases/fab-academy/tema1/#videos-tutoriales","title":"Videos Tutoriales","text":""},{"location":"clases/fab-academy/tema1/#video-1-introduccion-al-curso","title":"Video 1: Introducci\u00f3n al curso","text":""},{"location":"clases/fab-academy/tema1/#video-2-demo-practica-de-tema-x","title":"Video 2: Demo pr\u00e1ctica de [Tema X]","text":""},{"location":"clases/fab-academy/tema1/#ejemplos-de-codigo","title":"Ejemplos de C\u00f3digo","text":"<pre><code># Ejemplo en Python\nprint(\"\u00a1Hola, mundo de {{T\u00edtulo de la Asignatura}}!\")\n</code></pre> <pre><code>// Ejemplo en C++\n#include &lt;iostream&gt;\nint main() {\n    std::cout &lt;&lt; \"Ejemplo base\" &lt;&lt; std::endl;\n    return 0;\n}\n</code></pre> <p>[!warning] Recuerda cambiar las rutas de importaci\u00f3n o librer\u00edas seg\u00fan tu entorno.</p>"},{"location":"clases/fab-academy/tema1/#imagenes-y-diagramas","title":"Im\u00e1genes y Diagramas","text":"<ul> <li>Documentaci\u00f3n oficial</li> <li>Repositorio GitHub</li> </ul>"},{"location":"clases/fab-academy/tema1/#notas-y-observaciones","title":"Notas y Observaciones","text":"<ul> <li>Anotar aqu\u00ed cualquier detalle importante o tarea.</li> <li>Fecha de \u00faltima actualizaci\u00f3n: <code>YYYY-MM-DD</code>.</li> </ul>"},{"location":"clases/introduccion-mecatronica/tema1/","title":"Instalaci\u00f3n de ROS 2 Jazzy Jalisco (WSL2 + WSLg)","text":""},{"location":"clases/introduccion-mecatronica/tema1/#que-es-ros","title":"\u00bfQu\u00e9 es ROS?","text":"<p>Aunque se llame \u201csistema operativo\u201d, en realidad es un conjunto de herramientas y librer\u00edas que te ayudan a conectar y coordinar los distintos bloques de tu robot.</p> <p>Define c\u00f3mo intercambian informaci\u00f3n las partes (por ejemplo, tu m\u00f3dulo de visi\u00f3n env\u00eda \u201cveo un obst\u00e1culo\u201d y tu m\u00f3dulo de movimiento recibe ese mensaje y frena).</p> <p>Cuenta con cientos de paquetes que ya resuelven tareas comunes (planificar rutas, procesar im\u00e1genes, simular en ordenador\u2026), de modo que no tienes que escribir todo desde cero.</p> <p>Al dia de actualizacion de esta pagina 21 de mayo de 2025 Jazzy Jalisco es la distribucion mas moderna estable sacada en mayo 23, 2024 con soporte hasta Mayo 2029. Revisar la documentacion de ROS Para mas informacion.</p> <p>ROS es nativo a Linux, el cual deberia ser usado en proceso de alto rendimiento. Sin embargo para experimentacion o si no se quiere sacar una particion de Linux WSL2 es una mejora del Subsistema de Windows para Linux (WSL), que permite ejecutar distribuciones Linux nativas en Windows sin necesidad de m\u00e1quinas virtuales tradicionales.</p>"},{"location":"clases/introduccion-mecatronica/tema1/#1-instalar-wsl2-y-ubuntu-2404","title":"1. Instalar WSL2 y Ubuntu 24.04","text":"<ul> <li>Si ya est\u00e1s en Ubuntu nativo:  Omite este Paso 1 completo (instalaci\u00f3n de WSL2 y Ubuntu)</li> <li>Si est\u00e1s en Windows 11:  Sigue todos los pasos. </li> </ul> <p>WSL2 (Windows Subsystem for Linux 2) es una mejora del Subsistema de Windows para Linux (WSL), que permite ejecutar distribuciones Linux nativas en Windows sin necesidad de m\u00e1quinas virtuales tradicionales.</p> <p>Abre powershell como administrador  <pre><code>wsl --install -d Ubuntu-24.04\n</code></pre> Este comando:</p> <ul> <li>Habilita el Subsistema de Windows para Linux (WSL) y la plataforma de maquina virtual</li> <li>Configura WSL2 comola version default</li> <li>Descarga e instala Ubuntu 24.04 LTS (Noble Numbat es el distro estable actual)</li> </ul>"},{"location":"clases/introduccion-mecatronica/tema1/#2-primer-arranque-y-actualizacion-del-sistema","title":"2.  Primer arranque y actualizaci\u00f3n del sistema","text":"<p>Si estas en windows inicia Ubuntu (Desdes inicio) y crea un usuario/contrasena de UNIX(La contrasena no mostrara caracteres cuando escribes), posteriormente en el shell corre los siguientes comandos:</p> <p><pre><code>sudo apt update\nsudo apt full-upgrade -y\n</code></pre> Esto actualizara to Ubuntu</p>"},{"location":"clases/introduccion-mecatronica/tema1/#3-configuracion-del-sistema-para-ros-2","title":"3. Configuraci\u00f3n del sistema para ROS 2","text":"<p>Antes de instalar ROS, debemos configurar nuestro sistema para hacerlo compatible.</p>"},{"location":"clases/introduccion-mecatronica/tema1/#31-configurar-el-locale-codificacion-de-texto","title":"3.1 Configurar el locale (codificaci\u00f3n de texto)","text":"<p>Primero debemos configurar el locale que se refiere a los ajutes de un sistema para un idioma, ROS utiliza UTF-8.  Evitando problemas con caracteres especiales en ROS y otros programas.</p> <p><pre><code>sudo apt update &amp;&amp; sudo apt install locales\nsudo locale-gen en_US en_US.UTF-8\nsudo update-locale LC_ALL=en_US.UTF-8 LANG=en_US.UTF-8\nexport LANG=en_US.UTF-8\n</code></pre> Estos settings utilizan ingles estados unidos, sin embargo cualquier esta bien UTF-8 sirve.</p> <pre><code>locale # Verificamos que sea UTF-8\n</code></pre>"},{"location":"clases/introduccion-mecatronica/tema1/#32-habilitar-universe-y-anadir-el-repositorio-de-ros-2","title":"3.2 Habilitar \u201cuniverse\u201d y a\u00f1adir el repositorio de ROS 2","text":"<p>Primero debemos asegurar que el repositorio de Ubuntu Universe este habilitado. </p> <pre><code>sudo apt install -y software-properties-common\nsudo add-apt-repository universe\n</code></pre> <p>Ahora agreguemos la clave GPG ROS 2 con apt.</p> <pre><code>sudo apt update\nsudo apt install -y curl\ncurl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key \\\n  | sudo tee /usr/share/keyrings/ros-archive-keyring.gpg\n</code></pre> <p>Finalmente agregemos el repositorio a tu lista de sources para instalar.</p> <pre><code>echo \"deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/ros-archive-keyring.gpg] \\\n  http://packages.ros.org/ros2/ubuntu \\\n  $(. /etc/os-release &amp;&amp; echo $UBUNTU_CODENAME) main\" \\\n  | sudo tee /etc/apt/sources.list.d/ros2.list &gt; /dev/null\n</code></pre>"},{"location":"clases/introduccion-mecatronica/tema1/#4-instalar-ros-2-jazzy-desktop","title":"4. Instalar ROS 2 Jazzy Desktop","text":"<p>Primero actualiza tu repositorio de apt para tomar en cuenta los cambios que hicimos. <pre><code>sudo apt update\nsudo apt upgrade\n</code></pre></p> <p>Realizamos la instalacion completa</p> <pre><code>sudo apt install ros-jazzy-desktop\n</code></pre>"},{"location":"clases/introduccion-mecatronica/tema1/#5-verifica-instalacion-con-un-ejemplo","title":"5. Verifica instalacion con un ejemplo","text":"<p>Para esta prueba necesitaras dos terminales porque lo que abre una segunda terminal.</p> <p>En una terminal vamos a correr un codigo sencillo en C++ llamado talker:</p> <pre><code>source /opt/ros/jazzy/setup.bash\nros2 run demo_nodes_cpp talker\n</code></pre> <p>En otra terminal vamos correr un codigo en python llamado Listener:</p> <pre><code>source /opt/ros/jazzy/setup.bash\nros2 run demo_nodes_py listener\n</code></pre> <p>Deberias ver que talker imprime en consola, Publishing: numbers y en la consola on listener se imprime I heard: numbers coincidiendo el mensaje. Verificando que los APIs de C++ y python funcionan.</p> <p>Felicidades has isntalado ROS.</p>"},{"location":"clases/produccion-electronica/tema1/","title":"Instalaci\u00f3n de ROS 2 Jazzy Jalisco (WSL2 + WSLg)","text":""},{"location":"clases/produccion-electronica/tema1/#que-es-ros","title":"\u00bfQu\u00e9 es ROS?","text":"<p>Aunque se llame \u201csistema operativo\u201d, en realidad es un conjunto de herramientas y librer\u00edas que te ayudan a conectar y coordinar los distintos bloques de tu robot.</p> <p>Define c\u00f3mo intercambian informaci\u00f3n las partes (por ejemplo, tu m\u00f3dulo de visi\u00f3n env\u00eda \u201cveo un obst\u00e1culo\u201d y tu m\u00f3dulo de movimiento recibe ese mensaje y frena).</p> <p>Cuenta con cientos de paquetes que ya resuelven tareas comunes (planificar rutas, procesar im\u00e1genes, simular en ordenador\u2026), de modo que no tienes que escribir todo desde cero.</p> <p>Al dia de actualizacion de esta pagina 21 de mayo de 2025 Jazzy Jalisco es la distribucion mas moderna estable sacada en mayo 23, 2024 con soporte hasta Mayo 2029. Revisar la documentacion de ROS Para mas informacion.</p> <p>ROS es nativo a Linux, el cual deberia ser usado en proceso de alto rendimiento. Sin embargo para experimentacion o si no se quiere sacar una particion de Linux WSL2 es una mejora del Subsistema de Windows para Linux (WSL), que permite ejecutar distribuciones Linux nativas en Windows sin necesidad de m\u00e1quinas virtuales tradicionales.</p>"},{"location":"clases/produccion-electronica/tema1/#1-instalar-wsl2-y-ubuntu-2404","title":"1. Instalar WSL2 y Ubuntu 24.04","text":"<ul> <li>Si ya est\u00e1s en Ubuntu nativo:  Omite este Paso 1 completo (instalaci\u00f3n de WSL2 y Ubuntu)</li> <li>Si est\u00e1s en Windows 11:  Sigue todos los pasos. </li> </ul> <p>WSL2 (Windows Subsystem for Linux 2) es una mejora del Subsistema de Windows para Linux (WSL), que permite ejecutar distribuciones Linux nativas en Windows sin necesidad de m\u00e1quinas virtuales tradicionales.</p> <p>Abre powershell como administrador  <pre><code>wsl --install -d Ubuntu-24.04\n</code></pre> Este comando:</p> <ul> <li>Habilita el Subsistema de Windows para Linux (WSL) y la plataforma de maquina virtual</li> <li>Configura WSL2 comola version default</li> <li>Descarga e instala Ubuntu 24.04 LTS (Noble Numbat es el distro estable actual)</li> </ul>"},{"location":"clases/produccion-electronica/tema1/#2-primer-arranque-y-actualizacion-del-sistema","title":"2.  Primer arranque y actualizaci\u00f3n del sistema","text":"<p>Si estas en windows inicia Ubuntu (Desdes inicio) y crea un usuario/contrasena de UNIX(La contrasena no mostrara caracteres cuando escribes), posteriormente en el shell corre los siguientes comandos:</p> <p><pre><code>sudo apt update\nsudo apt full-upgrade -y\n</code></pre> Esto actualizara to Ubuntu</p>"},{"location":"clases/produccion-electronica/tema1/#3-configuracion-del-sistema-para-ros-2","title":"3. Configuraci\u00f3n del sistema para ROS 2","text":"<p>Antes de instalar ROS, debemos configurar nuestro sistema para hacerlo compatible.</p>"},{"location":"clases/produccion-electronica/tema1/#31-configurar-el-locale-codificacion-de-texto","title":"3.1 Configurar el locale (codificaci\u00f3n de texto)","text":"<p>Primero debemos configurar el locale que se refiere a los ajutes de un sistema para un idioma, ROS utiliza UTF-8.  Evitando problemas con caracteres especiales en ROS y otros programas.</p> <p><pre><code>sudo apt update &amp;&amp; sudo apt install locales\nsudo locale-gen en_US en_US.UTF-8\nsudo update-locale LC_ALL=en_US.UTF-8 LANG=en_US.UTF-8\nexport LANG=en_US.UTF-8\n</code></pre> Estos settings utilizan ingles estados unidos, sin embargo cualquier esta bien UTF-8 sirve.</p> <pre><code>locale # Verificamos que sea UTF-8\n</code></pre>"},{"location":"clases/produccion-electronica/tema1/#32-habilitar-universe-y-anadir-el-repositorio-de-ros-2","title":"3.2 Habilitar \u201cuniverse\u201d y a\u00f1adir el repositorio de ROS 2","text":"<p>Primero debemos asegurar que el repositorio de Ubuntu Universe este habilitado. </p> <pre><code>sudo apt install -y software-properties-common\nsudo add-apt-repository universe\n</code></pre> <p>Ahora agreguemos la clave GPG ROS 2 con apt.</p> <pre><code>sudo apt update\nsudo apt install -y curl\ncurl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key \\\n  | sudo tee /usr/share/keyrings/ros-archive-keyring.gpg\n</code></pre> <p>Finalmente agregemos el repositorio a tu lista de sources para instalar.</p> <pre><code>echo \"deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/ros-archive-keyring.gpg] \\\n  http://packages.ros.org/ros2/ubuntu \\\n  $(. /etc/os-release &amp;&amp; echo $UBUNTU_CODENAME) main\" \\\n  | sudo tee /etc/apt/sources.list.d/ros2.list &gt; /dev/null\n</code></pre>"},{"location":"clases/produccion-electronica/tema1/#4-instalar-ros-2-jazzy-desktop","title":"4. Instalar ROS 2 Jazzy Desktop","text":"<p>Primero actualiza tu repositorio de apt para tomar en cuenta los cambios que hicimos. <pre><code>sudo apt update\nsudo apt upgrade\n</code></pre></p> <p>Realizamos la instalacion completa</p> <pre><code>sudo apt install ros-jazzy-desktop\n</code></pre>"},{"location":"clases/produccion-electronica/tema1/#5-verifica-instalacion-con-un-ejemplo","title":"5. Verifica instalacion con un ejemplo","text":"<p>Para esta prueba necesitaras dos terminales porque lo que abre una segunda terminal.</p> <p>En una terminal vamos a correr un codigo sencillo en C++ llamado talker:</p> <pre><code>source /opt/ros/jazzy/setup.bash\nros2 run demo_nodes_cpp talker\n</code></pre> <p>En otra terminal vamos correr un codigo en python llamado Listener:</p> <pre><code>source /opt/ros/jazzy/setup.bash\nros2 run demo_nodes_py listener\n</code></pre> <p>Deberias ver que talker imprime en consola, Publishing: numbers y en la consola on listener se imprime I heard: numbers coincidiendo el mensaje. Verificando que los APIs de C++ y python funcionan.</p> <p>Felicidades has isntalado ROS.</p>"},{"location":"clases/proyectos-ingenieria-1/tema1/","title":"Instalaci\u00f3n de ROS 2 Jazzy Jalisco (WSL2 + WSLg)","text":""},{"location":"clases/proyectos-ingenieria-1/tema1/#que-es-ros","title":"\u00bfQu\u00e9 es ROS?","text":"<p>Aunque se llame \u201csistema operativo\u201d, en realidad es un conjunto de herramientas y librer\u00edas que te ayudan a conectar y coordinar los distintos bloques de tu robot.</p> <p>Define c\u00f3mo intercambian informaci\u00f3n las partes (por ejemplo, tu m\u00f3dulo de visi\u00f3n env\u00eda \u201cveo un obst\u00e1culo\u201d y tu m\u00f3dulo de movimiento recibe ese mensaje y frena).</p> <p>Cuenta con cientos de paquetes que ya resuelven tareas comunes (planificar rutas, procesar im\u00e1genes, simular en ordenador\u2026), de modo que no tienes que escribir todo desde cero.</p> <p>Al dia de actualizacion de esta pagina 21 de mayo de 2025 Jazzy Jalisco es la distribucion mas moderna estable sacada en mayo 23, 2024 con soporte hasta Mayo 2029. Revisar la documentacion de ROS Para mas informacion.</p> <p>ROS es nativo a Linux, el cual deberia ser usado en proceso de alto rendimiento. Sin embargo para experimentacion o si no se quiere sacar una particion de Linux WSL2 es una mejora del Subsistema de Windows para Linux (WSL), que permite ejecutar distribuciones Linux nativas en Windows sin necesidad de m\u00e1quinas virtuales tradicionales.</p>"},{"location":"clases/proyectos-ingenieria-1/tema1/#1-instalar-wsl2-y-ubuntu-2404","title":"1. Instalar WSL2 y Ubuntu 24.04","text":"<ul> <li>Si ya est\u00e1s en Ubuntu nativo:  Omite este Paso 1 completo (instalaci\u00f3n de WSL2 y Ubuntu)</li> <li>Si est\u00e1s en Windows 11:  Sigue todos los pasos. </li> </ul> <p>WSL2 (Windows Subsystem for Linux 2) es una mejora del Subsistema de Windows para Linux (WSL), que permite ejecutar distribuciones Linux nativas en Windows sin necesidad de m\u00e1quinas virtuales tradicionales.</p> <p>Abre powershell como administrador  <pre><code>wsl --install -d Ubuntu-24.04\n</code></pre> Este comando:</p> <ul> <li>Habilita el Subsistema de Windows para Linux (WSL) y la plataforma de maquina virtual</li> <li>Configura WSL2 comola version default</li> <li>Descarga e instala Ubuntu 24.04 LTS (Noble Numbat es el distro estable actual)</li> </ul>"},{"location":"clases/proyectos-ingenieria-1/tema1/#2-primer-arranque-y-actualizacion-del-sistema","title":"2.  Primer arranque y actualizaci\u00f3n del sistema","text":"<p>Si estas en windows inicia Ubuntu (Desdes inicio) y crea un usuario/contrasena de UNIX(La contrasena no mostrara caracteres cuando escribes), posteriormente en el shell corre los siguientes comandos:</p> <p><pre><code>sudo apt update\nsudo apt full-upgrade -y\n</code></pre> Esto actualizara to Ubuntu</p>"},{"location":"clases/proyectos-ingenieria-1/tema1/#3-configuracion-del-sistema-para-ros-2","title":"3. Configuraci\u00f3n del sistema para ROS 2","text":"<p>Antes de instalar ROS, debemos configurar nuestro sistema para hacerlo compatible.</p>"},{"location":"clases/proyectos-ingenieria-1/tema1/#31-configurar-el-locale-codificacion-de-texto","title":"3.1 Configurar el locale (codificaci\u00f3n de texto)","text":"<p>Primero debemos configurar el locale que se refiere a los ajutes de un sistema para un idioma, ROS utiliza UTF-8.  Evitando problemas con caracteres especiales en ROS y otros programas.</p> <p><pre><code>sudo apt update &amp;&amp; sudo apt install locales\nsudo locale-gen en_US en_US.UTF-8\nsudo update-locale LC_ALL=en_US.UTF-8 LANG=en_US.UTF-8\nexport LANG=en_US.UTF-8\n</code></pre> Estos settings utilizan ingles estados unidos, sin embargo cualquier esta bien UTF-8 sirve.</p> <pre><code>locale # Verificamos que sea UTF-8\n</code></pre>"},{"location":"clases/proyectos-ingenieria-1/tema1/#32-habilitar-universe-y-anadir-el-repositorio-de-ros-2","title":"3.2 Habilitar \u201cuniverse\u201d y a\u00f1adir el repositorio de ROS 2","text":"<p>Primero debemos asegurar que el repositorio de Ubuntu Universe este habilitado. </p> <pre><code>sudo apt install -y software-properties-common\nsudo add-apt-repository universe\n</code></pre> <p>Ahora agreguemos la clave GPG ROS 2 con apt.</p> <pre><code>sudo apt update\nsudo apt install -y curl\ncurl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key \\\n  | sudo tee /usr/share/keyrings/ros-archive-keyring.gpg\n</code></pre> <p>Finalmente agregemos el repositorio a tu lista de sources para instalar.</p> <pre><code>echo \"deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/ros-archive-keyring.gpg] \\\n  http://packages.ros.org/ros2/ubuntu \\\n  $(. /etc/os-release &amp;&amp; echo $UBUNTU_CODENAME) main\" \\\n  | sudo tee /etc/apt/sources.list.d/ros2.list &gt; /dev/null\n</code></pre>"},{"location":"clases/proyectos-ingenieria-1/tema1/#4-instalar-ros-2-jazzy-desktop","title":"4. Instalar ROS 2 Jazzy Desktop","text":"<p>Primero actualiza tu repositorio de apt para tomar en cuenta los cambios que hicimos. <pre><code>sudo apt update\nsudo apt upgrade\n</code></pre></p> <p>Realizamos la instalacion completa</p> <pre><code>sudo apt install ros-jazzy-desktop\n</code></pre>"},{"location":"clases/proyectos-ingenieria-1/tema1/#5-verifica-instalacion-con-un-ejemplo","title":"5. Verifica instalacion con un ejemplo","text":"<p>Para esta prueba necesitaras dos terminales porque lo que abre una segunda terminal.</p> <p>En una terminal vamos a correr un codigo sencillo en C++ llamado talker:</p> <pre><code>source /opt/ros/jazzy/setup.bash\nros2 run demo_nodes_cpp talker\n</code></pre> <p>En otra terminal vamos correr un codigo en python llamado Listener:</p> <pre><code>source /opt/ros/jazzy/setup.bash\nros2 run demo_nodes_py listener\n</code></pre> <p>Deberias ver que talker imprime en consola, Publishing: numbers y en la consola on listener se imprime I heard: numbers coincidiendo el mensaje. Verificando que los APIs de C++ y python funcionan.</p> <p>Felicidades has isntalado ROS.</p>"},{"location":"clases/robotica-articulada/tema1/","title":"Instalaci\u00f3n de ROS 2 Jazzy Jalisco (WSL2 + WSLg)","text":""},{"location":"clases/robotica-articulada/tema1/#que-es-ros","title":"\u00bfQu\u00e9 es ROS?","text":"<p>Aunque se llame \u201csistema operativo\u201d, en realidad es un conjunto de herramientas y librer\u00edas que te ayudan a conectar y coordinar los distintos bloques de tu robot.</p> <p>Define c\u00f3mo intercambian informaci\u00f3n las partes (por ejemplo, tu m\u00f3dulo de visi\u00f3n env\u00eda \u201cveo un obst\u00e1culo\u201d y tu m\u00f3dulo de movimiento recibe ese mensaje y frena).</p> <p>Cuenta con cientos de paquetes que ya resuelven tareas comunes (planificar rutas, procesar im\u00e1genes, simular en ordenador\u2026), de modo que no tienes que escribir todo desde cero.</p> <p>Al dia de actualizacion de esta pagina 21 de mayo de 2025 Jazzy Jalisco es la distribucion mas moderna estable sacada en mayo 23, 2024 con soporte hasta Mayo 2029. Revisar la documentacion de ROS Para mas informacion.</p> <p>ROS es nativo a Linux, el cual deberia ser usado en proceso de alto rendimiento. Sin embargo para experimentacion o si no se quiere sacar una particion de Linux WSL2 es una mejora del Subsistema de Windows para Linux (WSL), que permite ejecutar distribuciones Linux nativas en Windows sin necesidad de m\u00e1quinas virtuales tradicionales.</p>"},{"location":"clases/robotica-articulada/tema1/#1-instalar-wsl2-y-ubuntu-2404","title":"1. Instalar WSL2 y Ubuntu 24.04","text":"<ul> <li>Si ya est\u00e1s en Ubuntu nativo:  Omite este Paso 1 completo (instalaci\u00f3n de WSL2 y Ubuntu)</li> <li>Si est\u00e1s en Windows 11:  Sigue todos los pasos. </li> </ul> <p>WSL2 (Windows Subsystem for Linux 2) es una mejora del Subsistema de Windows para Linux (WSL), que permite ejecutar distribuciones Linux nativas en Windows sin necesidad de m\u00e1quinas virtuales tradicionales.</p> <p>Abre powershell como administrador  <pre><code>wsl --install -d Ubuntu-24.04\n</code></pre> Este comando:</p> <ul> <li>Habilita el Subsistema de Windows para Linux (WSL) y la plataforma de maquina virtual</li> <li>Configura WSL2 comola version default</li> <li>Descarga e instala Ubuntu 24.04 LTS (Noble Numbat es el distro estable actual)</li> </ul>"},{"location":"clases/robotica-articulada/tema1/#2-primer-arranque-y-actualizacion-del-sistema","title":"2.  Primer arranque y actualizaci\u00f3n del sistema","text":"<p>Si estas en windows inicia Ubuntu (Desdes inicio) y crea un usuario/contrasena de UNIX(La contrasena no mostrara caracteres cuando escribes), posteriormente en el shell corre los siguientes comandos:</p> <p><pre><code>sudo apt update\nsudo apt full-upgrade -y\n</code></pre> Esto actualizara to Ubuntu</p>"},{"location":"clases/robotica-articulada/tema1/#3-configuracion-del-sistema-para-ros-2","title":"3. Configuraci\u00f3n del sistema para ROS 2","text":"<p>Antes de instalar ROS, debemos configurar nuestro sistema para hacerlo compatible.</p>"},{"location":"clases/robotica-articulada/tema1/#31-configurar-el-locale-codificacion-de-texto","title":"3.1 Configurar el locale (codificaci\u00f3n de texto)","text":"<p>Primero debemos configurar el locale que se refiere a los ajutes de un sistema para un idioma, ROS utiliza UTF-8.  Evitando problemas con caracteres especiales en ROS y otros programas.</p> <p><pre><code>sudo apt update &amp;&amp; sudo apt install locales\nsudo locale-gen en_US en_US.UTF-8\nsudo update-locale LC_ALL=en_US.UTF-8 LANG=en_US.UTF-8\nexport LANG=en_US.UTF-8\n</code></pre> Estos settings utilizan ingles estados unidos, sin embargo cualquier esta bien UTF-8 sirve.</p> <pre><code>locale # Verificamos que sea UTF-8\n</code></pre>"},{"location":"clases/robotica-articulada/tema1/#32-habilitar-universe-y-anadir-el-repositorio-de-ros-2","title":"3.2 Habilitar \u201cuniverse\u201d y a\u00f1adir el repositorio de ROS 2","text":"<p>Primero debemos asegurar que el repositorio de Ubuntu Universe este habilitado. </p> <pre><code>sudo apt install -y software-properties-common\nsudo add-apt-repository universe\n</code></pre> <p>Ahora agreguemos la clave GPG ROS 2 con apt.</p> <pre><code>sudo apt update\nsudo apt install -y curl\ncurl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key \\\n  | sudo tee /usr/share/keyrings/ros-archive-keyring.gpg\n</code></pre> <p>Finalmente agregemos el repositorio a tu lista de sources para instalar.</p> <pre><code>echo \"deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/ros-archive-keyring.gpg] \\\n  http://packages.ros.org/ros2/ubuntu \\\n  $(. /etc/os-release &amp;&amp; echo $UBUNTU_CODENAME) main\" \\\n  | sudo tee /etc/apt/sources.list.d/ros2.list &gt; /dev/null\n</code></pre>"},{"location":"clases/robotica-articulada/tema1/#4-instalar-ros-2-jazzy-desktop","title":"4. Instalar ROS 2 Jazzy Desktop","text":"<p>Primero actualiza tu repositorio de apt para tomar en cuenta los cambios que hicimos. <pre><code>sudo apt update\nsudo apt upgrade\n</code></pre></p> <p>Realizamos la instalacion completa</p> <pre><code>sudo apt install ros-jazzy-desktop\n</code></pre>"},{"location":"clases/robotica-articulada/tema1/#5-verifica-instalacion-con-un-ejemplo","title":"5. Verifica instalacion con un ejemplo","text":"<p>Para esta prueba necesitaras dos terminales porque lo que abre una segunda terminal.</p> <p>En una terminal vamos a correr un codigo sencillo en C++ llamado talker:</p> <pre><code>source /opt/ros/jazzy/setup.bash\nros2 run demo_nodes_cpp talker\n</code></pre> <p>En otra terminal vamos correr un codigo en python llamado Listener:</p> <pre><code>source /opt/ros/jazzy/setup.bash\nros2 run demo_nodes_py listener\n</code></pre> <p>Deberias ver que talker imprime en consola, Publishing: numbers y en la consola on listener se imprime I heard: numbers coincidiendo el mensaje. Verificando que los APIs de C++ y python funcionan.</p> <p>Felicidades has isntalado ROS.</p>"},{"location":"clases/robotica-movil/tema1/","title":"Instalaci\u00f3n de ROS 2 Jazzy Jalisco (WSL2 + WSLg)","text":""},{"location":"clases/robotica-movil/tema1/#que-es-ros","title":"\u00bfQu\u00e9 es ROS?","text":"<p>Aunque se llame \u201csistema operativo\u201d, en realidad es un conjunto de herramientas y librer\u00edas que te ayudan a conectar y coordinar los distintos bloques de tu robot.</p> <p>Define c\u00f3mo intercambian informaci\u00f3n las partes (por ejemplo, tu m\u00f3dulo de visi\u00f3n env\u00eda \u201cveo un obst\u00e1culo\u201d y tu m\u00f3dulo de movimiento recibe ese mensaje y frena).</p> <p>Cuenta con cientos de paquetes que ya resuelven tareas comunes (planificar rutas, procesar im\u00e1genes, simular en ordenador\u2026), de modo que no tienes que escribir todo desde cero.</p> <p>Al dia de actualizacion de esta pagina 21 de mayo de 2025 Jazzy Jalisco es la distribucion mas moderna estable sacada en mayo 23, 2024 con soporte hasta Mayo 2029. Revisar la documentacion de ROS Para mas informacion.</p> <p>ROS es nativo a Linux, el cual deberia ser usado en proceso de alto rendimiento. Sin embargo para experimentacion o si no se quiere sacar una particion de Linux WSL2 es una mejora del Subsistema de Windows para Linux (WSL), que permite ejecutar distribuciones Linux nativas en Windows sin necesidad de m\u00e1quinas virtuales tradicionales.</p>"},{"location":"clases/robotica-movil/tema1/#1-instalar-wsl2-y-ubuntu-2404","title":"1. Instalar WSL2 y Ubuntu 24.04","text":"<ul> <li>Si ya est\u00e1s en Ubuntu nativo:  Omite este Paso 1 completo (instalaci\u00f3n de WSL2 y Ubuntu)</li> <li>Si est\u00e1s en Windows 11:  Sigue todos los pasos. </li> </ul> <p>WSL2 (Windows Subsystem for Linux 2) es una mejora del Subsistema de Windows para Linux (WSL), que permite ejecutar distribuciones Linux nativas en Windows sin necesidad de m\u00e1quinas virtuales tradicionales.</p> <p>Abre powershell como administrador  <pre><code>wsl --install -d Ubuntu-24.04\n</code></pre> Este comando:</p> <ul> <li>Habilita el Subsistema de Windows para Linux (WSL) y la plataforma de maquina virtual</li> <li>Configura WSL2 comola version default</li> <li>Descarga e instala Ubuntu 24.04 LTS (Noble Numbat es el distro estable actual)</li> </ul>"},{"location":"clases/robotica-movil/tema1/#2-primer-arranque-y-actualizacion-del-sistema","title":"2.  Primer arranque y actualizaci\u00f3n del sistema","text":"<p>Si estas en windows inicia Ubuntu (Desdes inicio) y crea un usuario/contrasena de UNIX(La contrasena no mostrara caracteres cuando escribes), posteriormente en el shell corre los siguientes comandos:</p> <p><pre><code>sudo apt update\nsudo apt full-upgrade -y\n</code></pre> Esto actualizara to Ubuntu</p>"},{"location":"clases/robotica-movil/tema1/#3-configuracion-del-sistema-para-ros-2","title":"3. Configuraci\u00f3n del sistema para ROS 2","text":"<p>Antes de instalar ROS, debemos configurar nuestro sistema para hacerlo compatible.</p>"},{"location":"clases/robotica-movil/tema1/#31-configurar-el-locale-codificacion-de-texto","title":"3.1 Configurar el locale (codificaci\u00f3n de texto)","text":"<p>Primero debemos configurar el locale que se refiere a los ajutes de un sistema para un idioma, ROS utiliza UTF-8.  Evitando problemas con caracteres especiales en ROS y otros programas.</p> <p><pre><code>sudo apt update &amp;&amp; sudo apt install locales\nsudo locale-gen en_US en_US.UTF-8\nsudo update-locale LC_ALL=en_US.UTF-8 LANG=en_US.UTF-8\nexport LANG=en_US.UTF-8\n</code></pre> Estos settings utilizan ingles estados unidos, sin embargo cualquier esta bien UTF-8 sirve.</p> <pre><code>locale # Verificamos que sea UTF-8\n</code></pre>"},{"location":"clases/robotica-movil/tema1/#32-habilitar-universe-y-anadir-el-repositorio-de-ros-2","title":"3.2 Habilitar \u201cuniverse\u201d y a\u00f1adir el repositorio de ROS 2","text":"<p>Primero debemos asegurar que el repositorio de Ubuntu Universe este habilitado. </p> <pre><code>sudo apt install -y software-properties-common\nsudo add-apt-repository universe\n</code></pre> <p>Ahora agreguemos la clave GPG ROS 2 con apt.</p> <pre><code>sudo apt update\nsudo apt install -y curl\ncurl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key \\\n  | sudo tee /usr/share/keyrings/ros-archive-keyring.gpg\n</code></pre> <p>Finalmente agregemos el repositorio a tu lista de sources para instalar.</p> <pre><code>echo \"deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/ros-archive-keyring.gpg] \\\n  http://packages.ros.org/ros2/ubuntu \\\n  $(. /etc/os-release &amp;&amp; echo $UBUNTU_CODENAME) main\" \\\n  | sudo tee /etc/apt/sources.list.d/ros2.list &gt; /dev/null\n</code></pre>"},{"location":"clases/robotica-movil/tema1/#4-instalar-ros-2-jazzy-desktop","title":"4. Instalar ROS 2 Jazzy Desktop","text":"<p>Primero actualiza tu repositorio de apt para tomar en cuenta los cambios que hicimos. <pre><code>sudo apt update\nsudo apt upgrade\n</code></pre></p> <p>Realizamos la instalacion completa</p> <pre><code>sudo apt install ros-jazzy-desktop\n</code></pre>"},{"location":"clases/robotica-movil/tema1/#5-verifica-instalacion-con-un-ejemplo","title":"5. Verifica instalacion con un ejemplo","text":"<p>Para esta prueba necesitaras dos terminales porque lo que abre una segunda terminal.</p> <p>En una terminal vamos a correr un codigo sencillo en C++ llamado talker:</p> <pre><code>source /opt/ros/jazzy/setup.bash\nros2 run demo_nodes_cpp talker\n</code></pre> <p>En otra terminal vamos correr un codigo en python llamado Listener:</p> <pre><code>source /opt/ros/jazzy/setup.bash\nros2 run demo_nodes_py listener\n</code></pre> <p>Deberias ver que talker imprime en consola, Publishing: numbers y en la consola on listener se imprime I heard: numbers coincidiendo el mensaje. Verificando que los APIs de C++ y python funcionan.</p> <p>Felicidades has isntalado ROS.</p>"},{"location":"clases/robotica-movil/tema2/","title":"Crear paqueteria ROS","text":"<p>En ROS (Robot Operating System), la paqueter\u00eda es el conjunto de convenciones y herramientas que te permiten organizar, construir y distribuir tu software rob\u00f3tico en unidades llamadas paquetes.</p> <p>Los paquetes son la unidad m\u00ednima de c\u00f3digo que agrupa todo lo necesario para una funci\u00f3n concreta:</p> <ul> <li> <p>Nodos (programas ejecutables)</p> </li> <li> <p>Librer\u00edas compartidas</p> </li> <li> <p>Definiciones de mensajes (.msg) y servicios (.srv)</p> </li> <li> <p>Archivos de configuraci\u00f3n (por ejemplo, par\u00e1metros YAML, launch files)</p> </li> <li> <p>Recursos varios (im\u00e1genes, datos, scripts, etc.)</p> </li> </ul> <p>Cada paquete tiene su propia carpeta, con los siguientes dos archivos minimos:</p> <ul> <li> <p>package.xml, que declara metadatos (nombre, versi\u00f3n, mantenedor, dependencias\u2026)</p> </li> <li> <p>CMakeLists.txt, que indica c\u00f3mo compilarlo (o instala sus componentes) usando CMake/Catkin (ROS 1) o ament (ROS 2).</p> </li> </ul> <p>Las herramientas basicas para trabajar los paquetes son:</p> <ul> <li><code>colcon build</code> Detecta paquetes (CMake, Python, etc.) en src/ y compila en orden de dependencias.</li> <li><code>--symlink-install</code> para enlace simb\u00f3lico de paquetes Python</li> <li><code>--packages-select</code> paquete para compilar s\u00f3lo uno o varios paquetes concretos</li> <li><code>rosdep install</code> Instala en el SO todas las dependencias listadas en los package.xml de tu workspace.</li> <li><code>ros2 run &lt;paquete&gt; &lt;nombre_de_nodo&gt;</code> Ejecuta un nodo</li> <li><code>ros2 launch &lt;paquete&gt; &lt;archivo.launch.py&gt;</code> Lanza Nodos</li> </ul>"},{"location":"clases/robotica-movil/tema2/#1-clonar-repositorio","title":"1. Clonar repositorio","text":"<p>La implementacion final de un robot se debe montar en un sistema de computo portatil, como lo puede ser una raspberry Pi, jetson Nano, etc. Por lo que vamos a desarrollar todo en un repositorio.</p> <p>Vamos a ocupar una paqueteria base para no escribirla de cero. Para esto debemos tener una cuenta en github, y entrar al siguiente repositorio</p> <p></p> <p>Dentro del repositorio seleccionaremos el boton verde de usar la plantilla y crear nuevo repositorio. El nuevo repositorio debera tener el nombre de su paquete, la convencion es usar letras minusculas, sin numeros, sin espacios. Aunque puede usarse el mismo nombre del repositorio base.</p> <p> </p> <p> </p> <p>Si no es el mismo nombre En el repositorio utilizando la tecla . entraremos al editor de github, posteriormente utilizando Ctrl+Shift+F entraremos al buscador. </p> <p>Debemos reemplazar el nombre original con el nombre de tu repositorio. Se encuentra en 4 archivos mostrados en la imagen lateral.</p> <p>Una vez realizado esto vamos a clonar el repositorio.</p> <p> </p> <p>Dentro de la terminal de nuestro Ubuntu crearemos la carpeta de nuestro proyecto</p> <p><pre><code>mkdir dev_ws\ncd dev_ws/\nmkdir src\ncd src/\n</code></pre> dentro de nuestra carpeta src clonaremos nuestro repositorio.</p> <p><pre><code>git clone &lt;repo_URL&gt;\n</code></pre> regresaremos a nuestra carpeta dev_ws utilizando <code>cd ..</code> y compilaremos nuestro paquete.</p> <pre><code>colcon build --symlink-install\n</code></pre> <p>De esta manera hemos construido nuestro primer paquete.</p>"},{"location":"clases/sistemas-embebidos-i/tema1/","title":"Tema 1","text":""},{"location":"clases/sistemas-embebidos-i/tema1/#recursos-adicionales","title":"Recursos Adicionales","text":"<ul> <li>[Enlace a la p </li> </ul>"},{"location":"clases/sistemas-embebidos-i/tema1/#titulo-de-la-asignatura","title":"{{T\u00edtulo de la Asignatura}}","text":"<p>Prerrequisitos: Listar aqu\u00ed las materias, conocimientos o herramientas necesarias.</p> <p>Duraci\u00f3n: X semanas / Y horas.</p>"},{"location":"clases/sistemas-embebidos-i/tema1/#descripcion","title":"Descripci\u00f3n","text":"<p>Breve resumen de la asignatura, su enfoque y aplicaci\u00f3n pr\u00e1ctica.</p>"},{"location":"clases/sistemas-embebidos-i/tema1/#objetivos-de-aprendizaje","title":"Objetivos de Aprendizaje","text":"<ul> <li>Objetivo 1.</li> <li>Objetivo 2.</li> <li>Objetivo 3.</li> </ul>"},{"location":"clases/sistemas-embebidos-i/tema1/#contenido","title":"Contenido","text":"<ol> <li>Tema 1: Breve descripci\u00f3n de contenido.</li> <li>Tema 2: Breve descripci\u00f3n de contenido.</li> <li>Tema 3: Breve descripci\u00f3n de contenido.</li> </ol> <p>[!tip] Puedes adaptar esta lista conforme avances con los estudiantes.</p>"},{"location":"clases/sistemas-embebidos-i/tema1/#videos-tutoriales","title":"Videos Tutoriales","text":""},{"location":"clases/sistemas-embebidos-i/tema1/#video-1-introduccion-al-curso","title":"Video 1: Introducci\u00f3n al curso","text":""},{"location":"clases/sistemas-embebidos-i/tema1/#video-2-demo-practica-de-tema-x","title":"Video 2: Demo pr\u00e1ctica de [Tema X]","text":""},{"location":"clases/sistemas-embebidos-i/tema1/#ejemplos-de-codigo","title":"Ejemplos de C\u00f3digo","text":"<pre><code># Ejemplo en Python\nprint(\"\u00a1Hola, mundo de {{T\u00edtulo de la Asignatura}}!\")\n</code></pre> <pre><code>// Ejemplo en C++\n#include &lt;iostream&gt;\nint main() {\n    std::cout &lt;&lt; \"Ejemplo base\" &lt;&lt; std::endl;\n    return 0;\n}\n</code></pre> <p>[!warning] Recuerda cambiar las rutas de importaci\u00f3n o librer\u00edas seg\u00fan tu entorno.</p>"},{"location":"clases/sistemas-embebidos-i/tema1/#imagenes-y-diagramas","title":"Im\u00e1genes y Diagramas","text":""},{"location":"clases/sistemas-embebidos-i/tema1/#notas-y-observaciones","title":"Notas y Observaciones","text":"<ul> <li>Anotar aqu\u00ed cualquier detalle importante o tarea.</li> <li>Fecha de \u00faltima actualizaci\u00f3n: <code>YYYY-MM-DD</code>.</li> </ul>"},{"location":"clases/sistemas-embebidos-i/tema2/","title":"Tema 2","text":""},{"location":"clases/sistemas-embebidos-i/tema2/#recursos-adicionales","title":"Recursos Adicionales","text":"<ul> <li>[Enlace a la p </li> </ul>"},{"location":"clases/sistemas-embebidos-i/tema2/#titulo-de-la-asignatura","title":"{{T\u00edtulo de la Asignatura}}","text":"<p>Prerrequisitos: Listar aqu\u00ed las materias, conocimientos o herramientas necesarias.</p> <p>Duraci\u00f3n: X semanas / Y horas.</p>"},{"location":"clases/sistemas-embebidos-i/tema2/#descripcion","title":"Descripci\u00f3n","text":"<p>Breve resumen de la asignatura, su enfoque y aplicaci\u00f3n pr\u00e1ctica.</p>"},{"location":"clases/sistemas-embebidos-i/tema2/#objetivos-de-aprendizaje","title":"Objetivos de Aprendizaje","text":"<ul> <li>Objetivo 1.</li> <li>Objetivo 2.</li> <li>Objetivo 3.</li> </ul>"},{"location":"clases/sistemas-embebidos-i/tema2/#contenido","title":"Contenido","text":"<ol> <li>Tema 1: Breve descripci\u00f3n de contenido.</li> <li>Tema 2: Breve descripci\u00f3n de contenido.</li> <li>Tema 3: Breve descripci\u00f3n de contenido.</li> </ol> <p>[!tip] Puedes adaptar esta lista conforme avances con los estudiantes.</p>"},{"location":"clases/sistemas-embebidos-i/tema2/#videos-tutoriales","title":"Videos Tutoriales","text":""},{"location":"clases/sistemas-embebidos-i/tema2/#video-1-introduccion-al-curso","title":"Video 1: Introducci\u00f3n al curso","text":""},{"location":"clases/sistemas-embebidos-i/tema2/#video-2-demo-practica-de-tema-x","title":"Video 2: Demo pr\u00e1ctica de [Tema X]","text":""},{"location":"clases/sistemas-embebidos-i/tema2/#ejemplos-de-codigo","title":"Ejemplos de C\u00f3digo","text":"<pre><code># Ejemplo en Python\nprint(\"\u00a1Hola, mundo de {{T\u00edtulo de la Asignatura}}!\")\n</code></pre> <pre><code>// Ejemplo en C++\n#include &lt;iostream&gt;\nint main() {\n    std::cout &lt;&lt; \"Ejemplo base\" &lt;&lt; std::endl;\n    return 0;\n}\n</code></pre> <p>[!warning] Recuerda cambiar las rutas de importaci\u00f3n o librer\u00edas seg\u00fan tu entorno.</p>"},{"location":"clases/sistemas-embebidos-i/tema2/#imagenes-y-diagramas","title":"Im\u00e1genes y Diagramas","text":""},{"location":"clases/sistemas-embebidos-i/tema2/#notas-y-observaciones","title":"Notas y Observaciones","text":"<ul> <li>Anotar aqu\u00ed cualquier detalle importante o tarea.</li> <li>Fecha de \u00faltima actualizaci\u00f3n: <code>YYYY-MM-DD</code>.</li> </ul>"},{"location":"clases/sistemas-embebidos-ii/tema1/","title":"Tema 1","text":""},{"location":"clases/sistemas-embebidos-ii/tema1/#recursos-adicionales","title":"Recursos Adicionales","text":"<ul> <li>[Enlace a la p </li> </ul>"},{"location":"clases/sistemas-embebidos-ii/tema1/#titulo-de-la-asignatura","title":"{{T\u00edtulo de la Asignatura}}","text":"<p>Prerrequisitos: Listar aqu\u00ed las materias, conocimientos o herramientas necesarias.</p> <p>Duraci\u00f3n: X semanas / Y horas.</p>"},{"location":"clases/sistemas-embebidos-ii/tema1/#descripcion","title":"Descripci\u00f3n","text":"<p>Breve resumen de la asignatura, su enfoque y aplicaci\u00f3n pr\u00e1ctica.</p>"},{"location":"clases/sistemas-embebidos-ii/tema1/#objetivos-de-aprendizaje","title":"Objetivos de Aprendizaje","text":"<ul> <li>Objetivo 1.</li> <li>Objetivo 2.</li> <li>Objetivo 3.</li> </ul>"},{"location":"clases/sistemas-embebidos-ii/tema1/#contenido","title":"Contenido","text":"<ol> <li>Tema 1: Breve descripci\u00f3n de contenido.</li> <li>Tema 2: Breve descripci\u00f3n de contenido.</li> <li>Tema 3: Breve descripci\u00f3n de contenido.</li> </ol> <p>[!tip] Puedes adaptar esta lista conforme avances con los estudiantes.</p>"},{"location":"clases/sistemas-embebidos-ii/tema1/#videos-tutoriales","title":"Videos Tutoriales","text":""},{"location":"clases/sistemas-embebidos-ii/tema1/#video-1-introduccion-al-curso","title":"Video 1: Introducci\u00f3n al curso","text":""},{"location":"clases/sistemas-embebidos-ii/tema1/#video-2-demo-practica-de-tema-x","title":"Video 2: Demo pr\u00e1ctica de [Tema X]","text":""},{"location":"clases/sistemas-embebidos-ii/tema1/#ejemplos-de-codigo","title":"Ejemplos de C\u00f3digo","text":"<pre><code># Ejemplo en Python\nprint(\"\u00a1Hola, mundo de {{T\u00edtulo de la Asignatura}}!\")\n</code></pre> <pre><code>// Ejemplo en C++\n#include &lt;iostream&gt;\nint main() {\n    std::cout &lt;&lt; \"Ejemplo base\" &lt;&lt; std::endl;\n    return 0;\n}\n</code></pre> <p>[!warning] Recuerda cambiar las rutas de importaci\u00f3n o librer\u00edas seg\u00fan tu entorno.</p>"},{"location":"clases/sistemas-embebidos-ii/tema1/#imagenes-y-diagramas","title":"Im\u00e1genes y Diagramas","text":""},{"location":"clases/sistemas-embebidos-ii/tema1/#notas-y-observaciones","title":"Notas y Observaciones","text":"<ul> <li>Anotar aqu\u00ed cualquier detalle importante o tarea.</li> <li>Fecha de \u00faltima actualizaci\u00f3n: <code>YYYY-MM-DD</code>.</li> </ul>"},{"location":"clases/temas-selectos-im/tema1/","title":"Instalaci\u00f3n de ROS 2 Jazzy Jalisco (WSL2 + WSLg)","text":""},{"location":"clases/temas-selectos-im/tema1/#que-es-ros","title":"\u00bfQu\u00e9 es ROS?","text":"<p>Aunque se llame \u201csistema operativo\u201d, en realidad es un conjunto de herramientas y librer\u00edas que te ayudan a conectar y coordinar los distintos bloques de tu robot.</p> <p>Define c\u00f3mo intercambian informaci\u00f3n las partes (por ejemplo, tu m\u00f3dulo de visi\u00f3n env\u00eda \u201cveo un obst\u00e1culo\u201d y tu m\u00f3dulo de movimiento recibe ese mensaje y frena).</p> <p>Cuenta con cientos de paquetes que ya resuelven tareas comunes (planificar rutas, procesar im\u00e1genes, simular en ordenador\u2026), de modo que no tienes que escribir todo desde cero.</p> <p>Al dia de actualizacion de esta pagina 21 de mayo de 2025 Jazzy Jalisco es la distribucion mas moderna estable sacada en mayo 23, 2024 con soporte hasta Mayo 2029. Revisar la documentacion de ROS Para mas informacion.</p> <p>ROS es nativo a Linux, el cual deberia ser usado en proceso de alto rendimiento. Sin embargo para experimentacion o si no se quiere sacar una particion de Linux WSL2 es una mejora del Subsistema de Windows para Linux (WSL), que permite ejecutar distribuciones Linux nativas en Windows sin necesidad de m\u00e1quinas virtuales tradicionales.</p>"},{"location":"clases/temas-selectos-im/tema1/#1-instalar-wsl2-y-ubuntu-2404","title":"1. Instalar WSL2 y Ubuntu 24.04","text":"<ul> <li>Si ya est\u00e1s en Ubuntu nativo:  Omite este Paso 1 completo (instalaci\u00f3n de WSL2 y Ubuntu)</li> <li>Si est\u00e1s en Windows 11:  Sigue todos los pasos. </li> </ul> <p>WSL2 (Windows Subsystem for Linux 2) es una mejora del Subsistema de Windows para Linux (WSL), que permite ejecutar distribuciones Linux nativas en Windows sin necesidad de m\u00e1quinas virtuales tradicionales.</p> <p>Abre powershell como administrador  <pre><code>wsl --install -d Ubuntu-24.04\n</code></pre> Este comando:</p> <ul> <li>Habilita el Subsistema de Windows para Linux (WSL) y la plataforma de maquina virtual</li> <li>Configura WSL2 comola version default</li> <li>Descarga e instala Ubuntu 24.04 LTS (Noble Numbat es el distro estable actual)</li> </ul>"},{"location":"clases/temas-selectos-im/tema1/#2-primer-arranque-y-actualizacion-del-sistema","title":"2.  Primer arranque y actualizaci\u00f3n del sistema","text":"<p>Si estas en windows inicia Ubuntu (Desdes inicio) y crea un usuario/contrasena de UNIX(La contrasena no mostrara caracteres cuando escribes), posteriormente en el shell corre los siguientes comandos:</p> <p><pre><code>sudo apt update\nsudo apt full-upgrade -y\n</code></pre> Esto actualizara to Ubuntu</p>"},{"location":"clases/temas-selectos-im/tema1/#3-configuracion-del-sistema-para-ros-2","title":"3. Configuraci\u00f3n del sistema para ROS 2","text":"<p>Antes de instalar ROS, debemos configurar nuestro sistema para hacerlo compatible.</p>"},{"location":"clases/temas-selectos-im/tema1/#31-configurar-el-locale-codificacion-de-texto","title":"3.1 Configurar el locale (codificaci\u00f3n de texto)","text":"<p>Primero debemos configurar el locale que se refiere a los ajutes de un sistema para un idioma, ROS utiliza UTF-8.  Evitando problemas con caracteres especiales en ROS y otros programas.</p> <p><pre><code>sudo apt update &amp;&amp; sudo apt install locales\nsudo locale-gen en_US en_US.UTF-8\nsudo update-locale LC_ALL=en_US.UTF-8 LANG=en_US.UTF-8\nexport LANG=en_US.UTF-8\n</code></pre> Estos settings utilizan ingles estados unidos, sin embargo cualquier esta bien UTF-8 sirve.</p> <pre><code>locale # Verificamos que sea UTF-8\n</code></pre>"},{"location":"clases/temas-selectos-im/tema1/#32-habilitar-universe-y-anadir-el-repositorio-de-ros-2","title":"3.2 Habilitar \u201cuniverse\u201d y a\u00f1adir el repositorio de ROS 2","text":"<p>Primero debemos asegurar que el repositorio de Ubuntu Universe este habilitado. </p> <pre><code>sudo apt install -y software-properties-common\nsudo add-apt-repository universe\n</code></pre> <p>Ahora agreguemos la clave GPG ROS 2 con apt.</p> <pre><code>sudo apt update\nsudo apt install -y curl\ncurl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key \\\n  | sudo tee /usr/share/keyrings/ros-archive-keyring.gpg\n</code></pre> <p>Finalmente agregemos el repositorio a tu lista de sources para instalar.</p> <pre><code>echo \"deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/ros-archive-keyring.gpg] \\\n  http://packages.ros.org/ros2/ubuntu \\\n  $(. /etc/os-release &amp;&amp; echo $UBUNTU_CODENAME) main\" \\\n  | sudo tee /etc/apt/sources.list.d/ros2.list &gt; /dev/null\n</code></pre>"},{"location":"clases/temas-selectos-im/tema1/#4-instalar-ros-2-jazzy-desktop","title":"4. Instalar ROS 2 Jazzy Desktop","text":"<p>Primero actualiza tu repositorio de apt para tomar en cuenta los cambios que hicimos. <pre><code>sudo apt update\nsudo apt upgrade\n</code></pre></p> <p>Realizamos la instalacion completa</p> <pre><code>sudo apt install ros-jazzy-desktop\n</code></pre>"},{"location":"clases/temas-selectos-im/tema1/#5-verifica-instalacion-con-un-ejemplo","title":"5. Verifica instalacion con un ejemplo","text":"<p>Para esta prueba necesitaras dos terminales porque lo que abre una segunda terminal.</p> <p>En una terminal vamos a correr un codigo sencillo en C++ llamado talker:</p> <pre><code>source /opt/ros/jazzy/setup.bash\nros2 run demo_nodes_cpp talker\n</code></pre> <p>En otra terminal vamos correr un codigo en python llamado Listener:</p> <pre><code>source /opt/ros/jazzy/setup.bash\nros2 run demo_nodes_py listener\n</code></pre> <p>Deberias ver que talker imprime en consola, Publishing: numbers y en la consola on listener se imprime I heard: numbers coincidiendo el mensaje. Verificando que los APIs de C++ y python funcionan.</p> <p>Felicidades has isntalado ROS.</p>"},{"location":"proyectos/amr/contacto/","title":"Instalaci\u00f3n de ROS 2 Jazzy Jalisco (WSL2 + WSLg)","text":""},{"location":"proyectos/amr/contacto/#que-es-ros","title":"\u00bfQu\u00e9 es ROS?","text":"<p>Aunque se llame \u201csistema operativo\u201d, en realidad es un conjunto de herramientas y librer\u00edas que te ayudan a conectar y coordinar los distintos bloques de tu robot.</p> <p>Define c\u00f3mo intercambian informaci\u00f3n las partes (por ejemplo, tu m\u00f3dulo de visi\u00f3n env\u00eda \u201cveo un obst\u00e1culo\u201d y tu m\u00f3dulo de movimiento recibe ese mensaje y frena).</p> <p>Cuenta con cientos de paquetes que ya resuelven tareas comunes (planificar rutas, procesar im\u00e1genes, simular en ordenador\u2026), de modo que no tienes que escribir todo desde cero.</p> <p>Al dia de actualizacion de esta pagina 21 de mayo de 2025 Jazzy Jalisco es la distribucion mas moderna estable sacada en mayo 23, 2024 con soporte hasta Mayo 2029. Revisar la documentacion de ROS Para mas informacion.</p> <p>ROS es nativo a Linux, el cual deberia ser usado en proceso de alto rendimiento. Sin embargo para experimentacion o si no se quiere sacar una particion de Linux WSL2 es una mejora del Subsistema de Windows para Linux (WSL), que permite ejecutar distribuciones Linux nativas en Windows sin necesidad de m\u00e1quinas virtuales tradicionales.</p>"},{"location":"proyectos/amr/contacto/#1-instalar-wsl2-y-ubuntu-2404","title":"1. Instalar WSL2 y Ubuntu 24.04","text":"<ul> <li>Si ya est\u00e1s en Ubuntu nativo:  Omite este Paso 1 completo (instalaci\u00f3n de WSL2 y Ubuntu)</li> <li>Si est\u00e1s en Windows 11:  Sigue todos los pasos. </li> </ul> <p>WSL2 (Windows Subsystem for Linux 2) es una mejora del Subsistema de Windows para Linux (WSL), que permite ejecutar distribuciones Linux nativas en Windows sin necesidad de m\u00e1quinas virtuales tradicionales.</p> <p>Abre powershell como administrador  <pre><code>wsl --install -d Ubuntu-24.04\n</code></pre> Este comando:</p> <ul> <li>Habilita el Subsistema de Windows para Linux (WSL) y la plataforma de maquina virtual</li> <li>Configura WSL2 comola version default</li> <li>Descarga e instala Ubuntu 24.04 LTS (Noble Numbat es el distro estable actual)</li> </ul>"},{"location":"proyectos/amr/contacto/#2-primer-arranque-y-actualizacion-del-sistema","title":"2.  Primer arranque y actualizaci\u00f3n del sistema","text":"<p>Si estas en windows inicia Ubuntu (Desdes inicio) y crea un usuario/contrasena de UNIX(La contrasena no mostrara caracteres cuando escribes), posteriormente en el shell corre los siguientes comandos:</p> <p><pre><code>sudo apt update\nsudo apt full-upgrade -y\n</code></pre> Esto actualizara to Ubuntu</p>"},{"location":"proyectos/amr/contacto/#3-configuracion-del-sistema-para-ros-2","title":"3. Configuraci\u00f3n del sistema para ROS 2","text":"<p>Antes de instalar ROS, debemos configurar nuestro sistema para hacerlo compatible.</p>"},{"location":"proyectos/amr/contacto/#31-configurar-el-locale-codificacion-de-texto","title":"3.1 Configurar el locale (codificaci\u00f3n de texto)","text":"<p>Primero debemos configurar el locale que se refiere a los ajutes de un sistema para un idioma, ROS utiliza UTF-8.  Evitando problemas con caracteres especiales en ROS y otros programas.</p> <p><pre><code>sudo apt update &amp;&amp; sudo apt install locales\nsudo locale-gen en_US en_US.UTF-8\nsudo update-locale LC_ALL=en_US.UTF-8 LANG=en_US.UTF-8\nexport LANG=en_US.UTF-8\n</code></pre> Estos settings utilizan ingles estados unidos, sin embargo cualquier esta bien UTF-8 sirve.</p> <pre><code>locale # Verificamos que sea UTF-8\n</code></pre>"},{"location":"proyectos/amr/contacto/#32-habilitar-universe-y-anadir-el-repositorio-de-ros-2","title":"3.2 Habilitar \u201cuniverse\u201d y a\u00f1adir el repositorio de ROS 2","text":"<p>Primero debemos asegurar que el repositorio de Ubuntu Universe este habilitado. </p> <pre><code>sudo apt install -y software-properties-common\nsudo add-apt-repository universe\n</code></pre> <p>Ahora agreguemos la clave GPG ROS 2 con apt.</p> <pre><code>sudo apt update\nsudo apt install -y curl\ncurl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key \\\n  | sudo tee /usr/share/keyrings/ros-archive-keyring.gpg\n</code></pre> <p>Finalmente agregemos el repositorio a tu lista de sources para instalar.</p> <pre><code>echo \"deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/ros-archive-keyring.gpg] \\\n  http://packages.ros.org/ros2/ubuntu \\\n  $(. /etc/os-release &amp;&amp; echo $UBUNTU_CODENAME) main\" \\\n  | sudo tee /etc/apt/sources.list.d/ros2.list &gt; /dev/null\n</code></pre>"},{"location":"proyectos/amr/contacto/#4-instalar-ros-2-jazzy-desktop","title":"4. Instalar ROS 2 Jazzy Desktop","text":"<p>Primero actualiza tu repositorio de apt para tomar en cuenta los cambios que hicimos. <pre><code>sudo apt update\nsudo apt upgrade\n</code></pre></p> <p>Realizamos la instalacion completa</p> <pre><code>sudo apt install ros-jazzy-desktop\n</code></pre>"},{"location":"proyectos/amr/contacto/#5-verifica-instalacion-con-un-ejemplo","title":"5. Verifica instalacion con un ejemplo","text":"<p>Para esta prueba necesitaras dos terminales porque lo que abre una segunda terminal.</p> <p>En una terminal vamos a correr un codigo sencillo en C++ llamado talker:</p> <pre><code>source /opt/ros/jazzy/setup.bash\nros2 run demo_nodes_cpp talker\n</code></pre> <p>En otra terminal vamos correr un codigo en python llamado Listener:</p> <pre><code>source /opt/ros/jazzy/setup.bash\nros2 run demo_nodes_py listener\n</code></pre> <p>Deberias ver que talker imprime en consola, Publishing: numbers y en la consola on listener se imprime I heard: numbers coincidiendo el mensaje. Verificando que los APIs de C++ y python funcionan.</p> <p>Felicidades has isntalado ROS.</p>"},{"location":"proyectos/amr/diseno/","title":"Instalaci\u00f3n de ROS 2 Jazzy Jalisco (WSL2 + WSLg)","text":""},{"location":"proyectos/amr/diseno/#que-es-ros","title":"\u00bfQu\u00e9 es ROS?","text":"<p>Aunque se llame \u201csistema operativo\u201d, en realidad es un conjunto de herramientas y librer\u00edas que te ayudan a conectar y coordinar los distintos bloques de tu robot.</p> <p>Define c\u00f3mo intercambian informaci\u00f3n las partes (por ejemplo, tu m\u00f3dulo de visi\u00f3n env\u00eda \u201cveo un obst\u00e1culo\u201d y tu m\u00f3dulo de movimiento recibe ese mensaje y frena).</p> <p>Cuenta con cientos de paquetes que ya resuelven tareas comunes (planificar rutas, procesar im\u00e1genes, simular en ordenador\u2026), de modo que no tienes que escribir todo desde cero.</p> <p>Al dia de actualizacion de esta pagina 21 de mayo de 2025 Jazzy Jalisco es la distribucion mas moderna estable sacada en mayo 23, 2024 con soporte hasta Mayo 2029. Revisar la documentacion de ROS Para mas informacion.</p> <p>ROS es nativo a Linux, el cual deberia ser usado en proceso de alto rendimiento. Sin embargo para experimentacion o si no se quiere sacar una particion de Linux WSL2 es una mejora del Subsistema de Windows para Linux (WSL), que permite ejecutar distribuciones Linux nativas en Windows sin necesidad de m\u00e1quinas virtuales tradicionales.</p>"},{"location":"proyectos/amr/diseno/#1-instalar-wsl2-y-ubuntu-2404","title":"1. Instalar WSL2 y Ubuntu 24.04","text":"<ul> <li>Si ya est\u00e1s en Ubuntu nativo:  Omite este Paso 1 completo (instalaci\u00f3n de WSL2 y Ubuntu)</li> <li>Si est\u00e1s en Windows 11:  Sigue todos los pasos. </li> </ul> <p>WSL2 (Windows Subsystem for Linux 2) es una mejora del Subsistema de Windows para Linux (WSL), que permite ejecutar distribuciones Linux nativas en Windows sin necesidad de m\u00e1quinas virtuales tradicionales.</p> <p>Abre powershell como administrador  <pre><code>wsl --install -d Ubuntu-24.04\n</code></pre> Este comando:</p> <ul> <li>Habilita el Subsistema de Windows para Linux (WSL) y la plataforma de maquina virtual</li> <li>Configura WSL2 comola version default</li> <li>Descarga e instala Ubuntu 24.04 LTS (Noble Numbat es el distro estable actual)</li> </ul>"},{"location":"proyectos/amr/diseno/#2-primer-arranque-y-actualizacion-del-sistema","title":"2.  Primer arranque y actualizaci\u00f3n del sistema","text":"<p>Si estas en windows inicia Ubuntu (Desdes inicio) y crea un usuario/contrasena de UNIX(La contrasena no mostrara caracteres cuando escribes), posteriormente en el shell corre los siguientes comandos:</p> <p><pre><code>sudo apt update\nsudo apt full-upgrade -y\n</code></pre> Esto actualizara to Ubuntu</p>"},{"location":"proyectos/amr/diseno/#3-configuracion-del-sistema-para-ros-2","title":"3. Configuraci\u00f3n del sistema para ROS 2","text":"<p>Antes de instalar ROS, debemos configurar nuestro sistema para hacerlo compatible.</p>"},{"location":"proyectos/amr/diseno/#31-configurar-el-locale-codificacion-de-texto","title":"3.1 Configurar el locale (codificaci\u00f3n de texto)","text":"<p>Primero debemos configurar el locale que se refiere a los ajutes de un sistema para un idioma, ROS utiliza UTF-8.  Evitando problemas con caracteres especiales en ROS y otros programas.</p> <p><pre><code>sudo apt update &amp;&amp; sudo apt install locales\nsudo locale-gen en_US en_US.UTF-8\nsudo update-locale LC_ALL=en_US.UTF-8 LANG=en_US.UTF-8\nexport LANG=en_US.UTF-8\n</code></pre> Estos settings utilizan ingles estados unidos, sin embargo cualquier esta bien UTF-8 sirve.</p> <pre><code>locale # Verificamos que sea UTF-8\n</code></pre>"},{"location":"proyectos/amr/diseno/#32-habilitar-universe-y-anadir-el-repositorio-de-ros-2","title":"3.2 Habilitar \u201cuniverse\u201d y a\u00f1adir el repositorio de ROS 2","text":"<p>Primero debemos asegurar que el repositorio de Ubuntu Universe este habilitado. </p> <pre><code>sudo apt install -y software-properties-common\nsudo add-apt-repository universe\n</code></pre> <p>Ahora agreguemos la clave GPG ROS 2 con apt.</p> <pre><code>sudo apt update\nsudo apt install -y curl\ncurl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key \\\n  | sudo tee /usr/share/keyrings/ros-archive-keyring.gpg\n</code></pre> <p>Finalmente agregemos el repositorio a tu lista de sources para instalar.</p> <pre><code>echo \"deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/ros-archive-keyring.gpg] \\\n  http://packages.ros.org/ros2/ubuntu \\\n  $(. /etc/os-release &amp;&amp; echo $UBUNTU_CODENAME) main\" \\\n  | sudo tee /etc/apt/sources.list.d/ros2.list &gt; /dev/null\n</code></pre>"},{"location":"proyectos/amr/diseno/#4-instalar-ros-2-jazzy-desktop","title":"4. Instalar ROS 2 Jazzy Desktop","text":"<p>Primero actualiza tu repositorio de apt para tomar en cuenta los cambios que hicimos. <pre><code>sudo apt update\nsudo apt upgrade\n</code></pre></p> <p>Realizamos la instalacion completa</p> <pre><code>sudo apt install ros-jazzy-desktop\n</code></pre>"},{"location":"proyectos/amr/diseno/#5-verifica-instalacion-con-un-ejemplo","title":"5. Verifica instalacion con un ejemplo","text":"<p>Para esta prueba necesitaras dos terminales porque lo que abre una segunda terminal.</p> <p>En una terminal vamos a correr un codigo sencillo en C++ llamado talker:</p> <pre><code>source /opt/ros/jazzy/setup.bash\nros2 run demo_nodes_cpp talker\n</code></pre> <p>En otra terminal vamos correr un codigo en python llamado Listener:</p> <pre><code>source /opt/ros/jazzy/setup.bash\nros2 run demo_nodes_py listener\n</code></pre> <p>Deberias ver que talker imprime en consola, Publishing: numbers y en la consola on listener se imprime I heard: numbers coincidiendo el mensaje. Verificando que los APIs de C++ y python funcionan.</p> <p>Felicidades has isntalado ROS.</p>"},{"location":"proyectos/amr/programacion/","title":"Instalaci\u00f3n de ROS 2 Jazzy Jalisco (WSL2 + WSLg)","text":""},{"location":"proyectos/amr/programacion/#que-es-ros","title":"\u00bfQu\u00e9 es ROS?","text":"<p>Aunque se llame \u201csistema operativo\u201d, en realidad es un conjunto de herramientas y librer\u00edas que te ayudan a conectar y coordinar los distintos bloques de tu robot.</p> <p>Define c\u00f3mo intercambian informaci\u00f3n las partes (por ejemplo, tu m\u00f3dulo de visi\u00f3n env\u00eda \u201cveo un obst\u00e1culo\u201d y tu m\u00f3dulo de movimiento recibe ese mensaje y frena).</p> <p>Cuenta con cientos de paquetes que ya resuelven tareas comunes (planificar rutas, procesar im\u00e1genes, simular en ordenador\u2026), de modo que no tienes que escribir todo desde cero.</p> <p>Al dia de actualizacion de esta pagina 21 de mayo de 2025 Jazzy Jalisco es la distribucion mas moderna estable sacada en mayo 23, 2024 con soporte hasta Mayo 2029. Revisar la documentacion de ROS Para mas informacion.</p> <p>ROS es nativo a Linux, el cual deberia ser usado en proceso de alto rendimiento. Sin embargo para experimentacion o si no se quiere sacar una particion de Linux WSL2 es una mejora del Subsistema de Windows para Linux (WSL), que permite ejecutar distribuciones Linux nativas en Windows sin necesidad de m\u00e1quinas virtuales tradicionales.</p>"},{"location":"proyectos/amr/programacion/#1-instalar-wsl2-y-ubuntu-2404","title":"1. Instalar WSL2 y Ubuntu 24.04","text":"<ul> <li>Si ya est\u00e1s en Ubuntu nativo:  Omite este Paso 1 completo (instalaci\u00f3n de WSL2 y Ubuntu)</li> <li>Si est\u00e1s en Windows 11:  Sigue todos los pasos. </li> </ul> <p>WSL2 (Windows Subsystem for Linux 2) es una mejora del Subsistema de Windows para Linux (WSL), que permite ejecutar distribuciones Linux nativas en Windows sin necesidad de m\u00e1quinas virtuales tradicionales.</p> <p>Abre powershell como administrador  <pre><code>wsl --install -d Ubuntu-24.04\n</code></pre> Este comando:</p> <ul> <li>Habilita el Subsistema de Windows para Linux (WSL) y la plataforma de maquina virtual</li> <li>Configura WSL2 comola version default</li> <li>Descarga e instala Ubuntu 24.04 LTS (Noble Numbat es el distro estable actual)</li> </ul>"},{"location":"proyectos/amr/programacion/#2-primer-arranque-y-actualizacion-del-sistema","title":"2.  Primer arranque y actualizaci\u00f3n del sistema","text":"<p>Si estas en windows inicia Ubuntu (Desdes inicio) y crea un usuario/contrasena de UNIX(La contrasena no mostrara caracteres cuando escribes), posteriormente en el shell corre los siguientes comandos:</p> <p><pre><code>sudo apt update\nsudo apt full-upgrade -y\n</code></pre> Esto actualizara to Ubuntu</p>"},{"location":"proyectos/amr/programacion/#3-configuracion-del-sistema-para-ros-2","title":"3. Configuraci\u00f3n del sistema para ROS 2","text":"<p>Antes de instalar ROS, debemos configurar nuestro sistema para hacerlo compatible.</p>"},{"location":"proyectos/amr/programacion/#31-configurar-el-locale-codificacion-de-texto","title":"3.1 Configurar el locale (codificaci\u00f3n de texto)","text":"<p>Primero debemos configurar el locale que se refiere a los ajutes de un sistema para un idioma, ROS utiliza UTF-8.  Evitando problemas con caracteres especiales en ROS y otros programas.</p> <p><pre><code>sudo apt update &amp;&amp; sudo apt install locales\nsudo locale-gen en_US en_US.UTF-8\nsudo update-locale LC_ALL=en_US.UTF-8 LANG=en_US.UTF-8\nexport LANG=en_US.UTF-8\n</code></pre> Estos settings utilizan ingles estados unidos, sin embargo cualquier esta bien UTF-8 sirve.</p> <pre><code>locale # Verificamos que sea UTF-8\n</code></pre>"},{"location":"proyectos/amr/programacion/#32-habilitar-universe-y-anadir-el-repositorio-de-ros-2","title":"3.2 Habilitar \u201cuniverse\u201d y a\u00f1adir el repositorio de ROS 2","text":"<p>Primero debemos asegurar que el repositorio de Ubuntu Universe este habilitado. </p> <pre><code>sudo apt install -y software-properties-common\nsudo add-apt-repository universe\n</code></pre> <p>Ahora agreguemos la clave GPG ROS 2 con apt.</p> <pre><code>sudo apt update\nsudo apt install -y curl\ncurl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key \\\n  | sudo tee /usr/share/keyrings/ros-archive-keyring.gpg\n</code></pre> <p>Finalmente agregemos el repositorio a tu lista de sources para instalar.</p> <pre><code>echo \"deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/ros-archive-keyring.gpg] \\\n  http://packages.ros.org/ros2/ubuntu \\\n  $(. /etc/os-release &amp;&amp; echo $UBUNTU_CODENAME) main\" \\\n  | sudo tee /etc/apt/sources.list.d/ros2.list &gt; /dev/null\n</code></pre>"},{"location":"proyectos/amr/programacion/#4-instalar-ros-2-jazzy-desktop","title":"4. Instalar ROS 2 Jazzy Desktop","text":"<p>Primero actualiza tu repositorio de apt para tomar en cuenta los cambios que hicimos. <pre><code>sudo apt update\nsudo apt upgrade\n</code></pre></p> <p>Realizamos la instalacion completa</p> <pre><code>sudo apt install ros-jazzy-desktop\n</code></pre>"},{"location":"proyectos/amr/programacion/#5-verifica-instalacion-con-un-ejemplo","title":"5. Verifica instalacion con un ejemplo","text":"<p>Para esta prueba necesitaras dos terminales porque lo que abre una segunda terminal.</p> <p>En una terminal vamos a correr un codigo sencillo en C++ llamado talker:</p> <pre><code>source /opt/ros/jazzy/setup.bash\nros2 run demo_nodes_cpp talker\n</code></pre> <p>En otra terminal vamos correr un codigo en python llamado Listener:</p> <pre><code>source /opt/ros/jazzy/setup.bash\nros2 run demo_nodes_py listener\n</code></pre> <p>Deberias ver que talker imprime en consola, Publishing: numbers y en la consola on listener se imprime I heard: numbers coincidiendo el mensaje. Verificando que los APIs de C++ y python funcionan.</p> <p>Felicidades has isntalado ROS.</p>"},{"location":"proyectos/scada/contacto/","title":"Instalaci\u00f3n de ROS 2 Jazzy Jalisco (WSL2 + WSLg)","text":""},{"location":"proyectos/scada/contacto/#que-es-ros","title":"\u00bfQu\u00e9 es ROS?","text":"<p>Aunque se llame \u201csistema operativo\u201d, en realidad es un conjunto de herramientas y librer\u00edas que te ayudan a conectar y coordinar los distintos bloques de tu robot.</p> <p>Define c\u00f3mo intercambian informaci\u00f3n las partes (por ejemplo, tu m\u00f3dulo de visi\u00f3n env\u00eda \u201cveo un obst\u00e1culo\u201d y tu m\u00f3dulo de movimiento recibe ese mensaje y frena).</p> <p>Cuenta con cientos de paquetes que ya resuelven tareas comunes (planificar rutas, procesar im\u00e1genes, simular en ordenador\u2026), de modo que no tienes que escribir todo desde cero.</p> <p>Al dia de actualizacion de esta pagina 21 de mayo de 2025 Jazzy Jalisco es la distribucion mas moderna estable sacada en mayo 23, 2024 con soporte hasta Mayo 2029. Revisar la documentacion de ROS Para mas informacion.</p> <p>ROS es nativo a Linux, el cual deberia ser usado en proceso de alto rendimiento. Sin embargo para experimentacion o si no se quiere sacar una particion de Linux WSL2 es una mejora del Subsistema de Windows para Linux (WSL), que permite ejecutar distribuciones Linux nativas en Windows sin necesidad de m\u00e1quinas virtuales tradicionales.</p>"},{"location":"proyectos/scada/contacto/#1-instalar-wsl2-y-ubuntu-2404","title":"1. Instalar WSL2 y Ubuntu 24.04","text":"<ul> <li>Si ya est\u00e1s en Ubuntu nativo:  Omite este Paso 1 completo (instalaci\u00f3n de WSL2 y Ubuntu)</li> <li>Si est\u00e1s en Windows 11:  Sigue todos los pasos. </li> </ul> <p>WSL2 (Windows Subsystem for Linux 2) es una mejora del Subsistema de Windows para Linux (WSL), que permite ejecutar distribuciones Linux nativas en Windows sin necesidad de m\u00e1quinas virtuales tradicionales.</p> <p>Abre powershell como administrador  <pre><code>wsl --install -d Ubuntu-24.04\n</code></pre> Este comando:</p> <ul> <li>Habilita el Subsistema de Windows para Linux (WSL) y la plataforma de maquina virtual</li> <li>Configura WSL2 comola version default</li> <li>Descarga e instala Ubuntu 24.04 LTS (Noble Numbat es el distro estable actual)</li> </ul>"},{"location":"proyectos/scada/contacto/#2-primer-arranque-y-actualizacion-del-sistema","title":"2.  Primer arranque y actualizaci\u00f3n del sistema","text":"<p>Si estas en windows inicia Ubuntu (Desdes inicio) y crea un usuario/contrasena de UNIX(La contrasena no mostrara caracteres cuando escribes), posteriormente en el shell corre los siguientes comandos:</p> <p><pre><code>sudo apt update\nsudo apt full-upgrade -y\n</code></pre> Esto actualizara to Ubuntu</p>"},{"location":"proyectos/scada/contacto/#3-configuracion-del-sistema-para-ros-2","title":"3. Configuraci\u00f3n del sistema para ROS 2","text":"<p>Antes de instalar ROS, debemos configurar nuestro sistema para hacerlo compatible.</p>"},{"location":"proyectos/scada/contacto/#31-configurar-el-locale-codificacion-de-texto","title":"3.1 Configurar el locale (codificaci\u00f3n de texto)","text":"<p>Primero debemos configurar el locale que se refiere a los ajutes de un sistema para un idioma, ROS utiliza UTF-8.  Evitando problemas con caracteres especiales en ROS y otros programas.</p> <p><pre><code>sudo apt update &amp;&amp; sudo apt install locales\nsudo locale-gen en_US en_US.UTF-8\nsudo update-locale LC_ALL=en_US.UTF-8 LANG=en_US.UTF-8\nexport LANG=en_US.UTF-8\n</code></pre> Estos settings utilizan ingles estados unidos, sin embargo cualquier esta bien UTF-8 sirve.</p> <pre><code>locale # Verificamos que sea UTF-8\n</code></pre>"},{"location":"proyectos/scada/contacto/#32-habilitar-universe-y-anadir-el-repositorio-de-ros-2","title":"3.2 Habilitar \u201cuniverse\u201d y a\u00f1adir el repositorio de ROS 2","text":"<p>Primero debemos asegurar que el repositorio de Ubuntu Universe este habilitado. </p> <pre><code>sudo apt install -y software-properties-common\nsudo add-apt-repository universe\n</code></pre> <p>Ahora agreguemos la clave GPG ROS 2 con apt.</p> <pre><code>sudo apt update\nsudo apt install -y curl\ncurl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key \\\n  | sudo tee /usr/share/keyrings/ros-archive-keyring.gpg\n</code></pre> <p>Finalmente agregemos el repositorio a tu lista de sources para instalar.</p> <pre><code>echo \"deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/ros-archive-keyring.gpg] \\\n  http://packages.ros.org/ros2/ubuntu \\\n  $(. /etc/os-release &amp;&amp; echo $UBUNTU_CODENAME) main\" \\\n  | sudo tee /etc/apt/sources.list.d/ros2.list &gt; /dev/null\n</code></pre>"},{"location":"proyectos/scada/contacto/#4-instalar-ros-2-jazzy-desktop","title":"4. Instalar ROS 2 Jazzy Desktop","text":"<p>Primero actualiza tu repositorio de apt para tomar en cuenta los cambios que hicimos. <pre><code>sudo apt update\nsudo apt upgrade\n</code></pre></p> <p>Realizamos la instalacion completa</p> <pre><code>sudo apt install ros-jazzy-desktop\n</code></pre>"},{"location":"proyectos/scada/contacto/#5-verifica-instalacion-con-un-ejemplo","title":"5. Verifica instalacion con un ejemplo","text":"<p>Para esta prueba necesitaras dos terminales porque lo que abre una segunda terminal.</p> <p>En una terminal vamos a correr un codigo sencillo en C++ llamado talker:</p> <pre><code>source /opt/ros/jazzy/setup.bash\nros2 run demo_nodes_cpp talker\n</code></pre> <p>En otra terminal vamos correr un codigo en python llamado Listener:</p> <pre><code>source /opt/ros/jazzy/setup.bash\nros2 run demo_nodes_py listener\n</code></pre> <p>Deberias ver que talker imprime en consola, Publishing: numbers y en la consola on listener se imprime I heard: numbers coincidiendo el mensaje. Verificando que los APIs de C++ y python funcionan.</p> <p>Felicidades has isntalado ROS.</p>"},{"location":"proyectos/scada/diseno/","title":"Instalaci\u00f3n de ROS 2 Jazzy Jalisco (WSL2 + WSLg)","text":""},{"location":"proyectos/scada/diseno/#que-es-ros","title":"\u00bfQu\u00e9 es ROS?","text":"<p>Aunque se llame \u201csistema operativo\u201d, en realidad es un conjunto de herramientas y librer\u00edas que te ayudan a conectar y coordinar los distintos bloques de tu robot.</p> <p>Define c\u00f3mo intercambian informaci\u00f3n las partes (por ejemplo, tu m\u00f3dulo de visi\u00f3n env\u00eda \u201cveo un obst\u00e1culo\u201d y tu m\u00f3dulo de movimiento recibe ese mensaje y frena).</p> <p>Cuenta con cientos de paquetes que ya resuelven tareas comunes (planificar rutas, procesar im\u00e1genes, simular en ordenador\u2026), de modo que no tienes que escribir todo desde cero.</p> <p>Al dia de actualizacion de esta pagina 21 de mayo de 2025 Jazzy Jalisco es la distribucion mas moderna estable sacada en mayo 23, 2024 con soporte hasta Mayo 2029. Revisar la documentacion de ROS Para mas informacion.</p> <p>ROS es nativo a Linux, el cual deberia ser usado en proceso de alto rendimiento. Sin embargo para experimentacion o si no se quiere sacar una particion de Linux WSL2 es una mejora del Subsistema de Windows para Linux (WSL), que permite ejecutar distribuciones Linux nativas en Windows sin necesidad de m\u00e1quinas virtuales tradicionales.</p>"},{"location":"proyectos/scada/diseno/#1-instalar-wsl2-y-ubuntu-2404","title":"1. Instalar WSL2 y Ubuntu 24.04","text":"<ul> <li>Si ya est\u00e1s en Ubuntu nativo:  Omite este Paso 1 completo (instalaci\u00f3n de WSL2 y Ubuntu)</li> <li>Si est\u00e1s en Windows 11:  Sigue todos los pasos. </li> </ul> <p>WSL2 (Windows Subsystem for Linux 2) es una mejora del Subsistema de Windows para Linux (WSL), que permite ejecutar distribuciones Linux nativas en Windows sin necesidad de m\u00e1quinas virtuales tradicionales.</p> <p>Abre powershell como administrador  <pre><code>wsl --install -d Ubuntu-24.04\n</code></pre> Este comando:</p> <ul> <li>Habilita el Subsistema de Windows para Linux (WSL) y la plataforma de maquina virtual</li> <li>Configura WSL2 comola version default</li> <li>Descarga e instala Ubuntu 24.04 LTS (Noble Numbat es el distro estable actual)</li> </ul>"},{"location":"proyectos/scada/diseno/#2-primer-arranque-y-actualizacion-del-sistema","title":"2.  Primer arranque y actualizaci\u00f3n del sistema","text":"<p>Si estas en windows inicia Ubuntu (Desdes inicio) y crea un usuario/contrasena de UNIX(La contrasena no mostrara caracteres cuando escribes), posteriormente en el shell corre los siguientes comandos:</p> <p><pre><code>sudo apt update\nsudo apt full-upgrade -y\n</code></pre> Esto actualizara to Ubuntu</p>"},{"location":"proyectos/scada/diseno/#3-configuracion-del-sistema-para-ros-2","title":"3. Configuraci\u00f3n del sistema para ROS 2","text":"<p>Antes de instalar ROS, debemos configurar nuestro sistema para hacerlo compatible.</p>"},{"location":"proyectos/scada/diseno/#31-configurar-el-locale-codificacion-de-texto","title":"3.1 Configurar el locale (codificaci\u00f3n de texto)","text":"<p>Primero debemos configurar el locale que se refiere a los ajutes de un sistema para un idioma, ROS utiliza UTF-8.  Evitando problemas con caracteres especiales en ROS y otros programas.</p> <p><pre><code>sudo apt update &amp;&amp; sudo apt install locales\nsudo locale-gen en_US en_US.UTF-8\nsudo update-locale LC_ALL=en_US.UTF-8 LANG=en_US.UTF-8\nexport LANG=en_US.UTF-8\n</code></pre> Estos settings utilizan ingles estados unidos, sin embargo cualquier esta bien UTF-8 sirve.</p> <pre><code>locale # Verificamos que sea UTF-8\n</code></pre>"},{"location":"proyectos/scada/diseno/#32-habilitar-universe-y-anadir-el-repositorio-de-ros-2","title":"3.2 Habilitar \u201cuniverse\u201d y a\u00f1adir el repositorio de ROS 2","text":"<p>Primero debemos asegurar que el repositorio de Ubuntu Universe este habilitado. </p> <pre><code>sudo apt install -y software-properties-common\nsudo add-apt-repository universe\n</code></pre> <p>Ahora agreguemos la clave GPG ROS 2 con apt.</p> <pre><code>sudo apt update\nsudo apt install -y curl\ncurl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key \\\n  | sudo tee /usr/share/keyrings/ros-archive-keyring.gpg\n</code></pre> <p>Finalmente agregemos el repositorio a tu lista de sources para instalar.</p> <pre><code>echo \"deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/ros-archive-keyring.gpg] \\\n  http://packages.ros.org/ros2/ubuntu \\\n  $(. /etc/os-release &amp;&amp; echo $UBUNTU_CODENAME) main\" \\\n  | sudo tee /etc/apt/sources.list.d/ros2.list &gt; /dev/null\n</code></pre>"},{"location":"proyectos/scada/diseno/#4-instalar-ros-2-jazzy-desktop","title":"4. Instalar ROS 2 Jazzy Desktop","text":"<p>Primero actualiza tu repositorio de apt para tomar en cuenta los cambios que hicimos. <pre><code>sudo apt update\nsudo apt upgrade\n</code></pre></p> <p>Realizamos la instalacion completa</p> <pre><code>sudo apt install ros-jazzy-desktop\n</code></pre>"},{"location":"proyectos/scada/diseno/#5-verifica-instalacion-con-un-ejemplo","title":"5. Verifica instalacion con un ejemplo","text":"<p>Para esta prueba necesitaras dos terminales porque lo que abre una segunda terminal.</p> <p>En una terminal vamos a correr un codigo sencillo en C++ llamado talker:</p> <pre><code>source /opt/ros/jazzy/setup.bash\nros2 run demo_nodes_cpp talker\n</code></pre> <p>En otra terminal vamos correr un codigo en python llamado Listener:</p> <pre><code>source /opt/ros/jazzy/setup.bash\nros2 run demo_nodes_py listener\n</code></pre> <p>Deberias ver que talker imprime en consola, Publishing: numbers y en la consola on listener se imprime I heard: numbers coincidiendo el mensaje. Verificando que los APIs de C++ y python funcionan.</p> <p>Felicidades has isntalado ROS.</p>"},{"location":"proyectos/scada/programacion/","title":"Instalaci\u00f3n de ROS 2 Jazzy Jalisco (WSL2 + WSLg)","text":""},{"location":"proyectos/scada/programacion/#que-es-ros","title":"\u00bfQu\u00e9 es ROS?","text":"<p>Aunque se llame \u201csistema operativo\u201d, en realidad es un conjunto de herramientas y librer\u00edas que te ayudan a conectar y coordinar los distintos bloques de tu robot.</p> <p>Define c\u00f3mo intercambian informaci\u00f3n las partes (por ejemplo, tu m\u00f3dulo de visi\u00f3n env\u00eda \u201cveo un obst\u00e1culo\u201d y tu m\u00f3dulo de movimiento recibe ese mensaje y frena).</p> <p>Cuenta con cientos de paquetes que ya resuelven tareas comunes (planificar rutas, procesar im\u00e1genes, simular en ordenador\u2026), de modo que no tienes que escribir todo desde cero.</p> <p>Al dia de actualizacion de esta pagina 21 de mayo de 2025 Jazzy Jalisco es la distribucion mas moderna estable sacada en mayo 23, 2024 con soporte hasta Mayo 2029. Revisar la documentacion de ROS Para mas informacion.</p> <p>ROS es nativo a Linux, el cual deberia ser usado en proceso de alto rendimiento. Sin embargo para experimentacion o si no se quiere sacar una particion de Linux WSL2 es una mejora del Subsistema de Windows para Linux (WSL), que permite ejecutar distribuciones Linux nativas en Windows sin necesidad de m\u00e1quinas virtuales tradicionales.</p>"},{"location":"proyectos/scada/programacion/#1-instalar-wsl2-y-ubuntu-2404","title":"1. Instalar WSL2 y Ubuntu 24.04","text":"<ul> <li>Si ya est\u00e1s en Ubuntu nativo:  Omite este Paso 1 completo (instalaci\u00f3n de WSL2 y Ubuntu)</li> <li>Si est\u00e1s en Windows 11:  Sigue todos los pasos. </li> </ul> <p>WSL2 (Windows Subsystem for Linux 2) es una mejora del Subsistema de Windows para Linux (WSL), que permite ejecutar distribuciones Linux nativas en Windows sin necesidad de m\u00e1quinas virtuales tradicionales.</p> <p>Abre powershell como administrador  <pre><code>wsl --install -d Ubuntu-24.04\n</code></pre> Este comando:</p> <ul> <li>Habilita el Subsistema de Windows para Linux (WSL) y la plataforma de maquina virtual</li> <li>Configura WSL2 comola version default</li> <li>Descarga e instala Ubuntu 24.04 LTS (Noble Numbat es el distro estable actual)</li> </ul>"},{"location":"proyectos/scada/programacion/#2-primer-arranque-y-actualizacion-del-sistema","title":"2.  Primer arranque y actualizaci\u00f3n del sistema","text":"<p>Si estas en windows inicia Ubuntu (Desdes inicio) y crea un usuario/contrasena de UNIX(La contrasena no mostrara caracteres cuando escribes), posteriormente en el shell corre los siguientes comandos:</p> <p><pre><code>sudo apt update\nsudo apt full-upgrade -y\n</code></pre> Esto actualizara to Ubuntu</p>"},{"location":"proyectos/scada/programacion/#3-configuracion-del-sistema-para-ros-2","title":"3. Configuraci\u00f3n del sistema para ROS 2","text":"<p>Antes de instalar ROS, debemos configurar nuestro sistema para hacerlo compatible.</p>"},{"location":"proyectos/scada/programacion/#31-configurar-el-locale-codificacion-de-texto","title":"3.1 Configurar el locale (codificaci\u00f3n de texto)","text":"<p>Primero debemos configurar el locale que se refiere a los ajutes de un sistema para un idioma, ROS utiliza UTF-8.  Evitando problemas con caracteres especiales en ROS y otros programas.</p> <p><pre><code>sudo apt update &amp;&amp; sudo apt install locales\nsudo locale-gen en_US en_US.UTF-8\nsudo update-locale LC_ALL=en_US.UTF-8 LANG=en_US.UTF-8\nexport LANG=en_US.UTF-8\n</code></pre> Estos settings utilizan ingles estados unidos, sin embargo cualquier esta bien UTF-8 sirve.</p> <pre><code>locale # Verificamos que sea UTF-8\n</code></pre>"},{"location":"proyectos/scada/programacion/#32-habilitar-universe-y-anadir-el-repositorio-de-ros-2","title":"3.2 Habilitar \u201cuniverse\u201d y a\u00f1adir el repositorio de ROS 2","text":"<p>Primero debemos asegurar que el repositorio de Ubuntu Universe este habilitado. </p> <pre><code>sudo apt install -y software-properties-common\nsudo add-apt-repository universe\n</code></pre> <p>Ahora agreguemos la clave GPG ROS 2 con apt.</p> <pre><code>sudo apt update\nsudo apt install -y curl\ncurl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key \\\n  | sudo tee /usr/share/keyrings/ros-archive-keyring.gpg\n</code></pre> <p>Finalmente agregemos el repositorio a tu lista de sources para instalar.</p> <pre><code>echo \"deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/ros-archive-keyring.gpg] \\\n  http://packages.ros.org/ros2/ubuntu \\\n  $(. /etc/os-release &amp;&amp; echo $UBUNTU_CODENAME) main\" \\\n  | sudo tee /etc/apt/sources.list.d/ros2.list &gt; /dev/null\n</code></pre>"},{"location":"proyectos/scada/programacion/#4-instalar-ros-2-jazzy-desktop","title":"4. Instalar ROS 2 Jazzy Desktop","text":"<p>Primero actualiza tu repositorio de apt para tomar en cuenta los cambios que hicimos. <pre><code>sudo apt update\nsudo apt upgrade\n</code></pre></p> <p>Realizamos la instalacion completa</p> <pre><code>sudo apt install ros-jazzy-desktop\n</code></pre>"},{"location":"proyectos/scada/programacion/#5-verifica-instalacion-con-un-ejemplo","title":"5. Verifica instalacion con un ejemplo","text":"<p>Para esta prueba necesitaras dos terminales porque lo que abre una segunda terminal.</p> <p>En una terminal vamos a correr un codigo sencillo en C++ llamado talker:</p> <pre><code>source /opt/ros/jazzy/setup.bash\nros2 run demo_nodes_cpp talker\n</code></pre> <p>En otra terminal vamos correr un codigo en python llamado Listener:</p> <pre><code>source /opt/ros/jazzy/setup.bash\nros2 run demo_nodes_py listener\n</code></pre> <p>Deberias ver que talker imprime en consola, Publishing: numbers y en la consola on listener se imprime I heard: numbers coincidiendo el mensaje. Verificando que los APIs de C++ y python funcionan.</p> <p>Felicidades has isntalado ROS.</p>"}]}