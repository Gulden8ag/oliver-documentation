{"config": {"lang": ["en"], "separator": "[\\s\\-]+", "pipeline": ["stopWordFilter"]}, "docs": [{"location": "", "title": "Home", "text": "<p>Bienvenido a la coordinacion de Mecatronica y Electronica </p> <p>Aqui encontraras informacion relevante para tu carrera, tutoriales para equipos, proyectos de investigacion y contacto de personal de la universidad.</p> <p>UNETE AL GRUPO DE WHATSAPP DE TU CARRERA</p>"}, {"location": "#mecatronica", "title": "MECATRONICA", "text": ""}, {"location": "#electronica", "title": "ELECTRONICA", "text": ""}, {"location": "Contactos/departamento/", "title": "Departamento de Ciencias e Ingenierias", "text": ""}, {"location": "Contactos/departamento/#mtro-enrique-villa-alvarez", "title": "Mtro. Enrique Villa \u00c1lvarez", "text": "<p>Director del Departamento de Ciencias e Ingenier\u00edas</p> Contacto <ul> <li>\ud83d\udccd Oficina: G-225  </li> <li>\ud83d\udd57 Horario: Lun 08:00\u201315:00 / 16:00\u201318:00; Mar 08:00\u201315:00 / 16:00\u201318:00; Mie 08:00\u201315:00 / 16:00\u201318:00; Jue 08:00\u201315:00 / 16:00\u201318:00; Vie 08:00\u201314:00 / 15:00\u201317:00  </li> <li>\u260e\ufe0f N\u00famero: 2223723005 Ext. 12701  </li> <li>\ud83d\udce7 Correo: enrique.villa2@iberopuebla.mx</li> </ul>"}, {"location": "Contactos/departamento/#mtro-victor-hernandez-reyes", "title": "Mtro. V\u00edctor Hern\u00e1ndez Reyes", "text": "<p>Coordinador de las Licenciaturas en Ingenier\u00eda Industrial, Ingenier\u00eda Log\u00edstica e Ingenier\u00eda Industrial y de Sistemas</p> Contacto <ul> <li>\ud83d\udccd Oficina: G-219  </li> <li>\ud83d\udd57 Horario: 08:00\u201314:00 / 15:00\u201317:00  </li> <li>\u260e\ufe0f N\u00famero: Ext. 12704  </li> <li>\ud83d\udce7 Correo: victor.hernandez2@iberopuebla.mx</li> </ul>"}, {"location": "Contactos/departamento/#mtra-maria-del-carmen-carrion-gomez", "title": "Mtra. Mar\u00eda del Carmen Carri\u00f3n G\u00f3mez", "text": "<p>Jefa Administrativa</p> Contacto <ul> <li>\ud83d\udccd Oficina: G-218  </li> <li>\ud83d\udd57 Horario: 08:00\u201314:00 / 15:00\u201317:00  </li> <li>\u260e\ufe0f N\u00famero: 2223723050 Ext. 12702  </li> <li>\ud83d\udce7 Correo: maricarmen.carrion@iberopuebla.mx</li> </ul>"}, {"location": "Contactos/departamento/#lic-alma-nallely-tirado-garcia", "title": "Lic. Alma Nallely Tirado Garc\u00eda", "text": "<p>Jefa Administrativa</p> Contacto <ul> <li>\ud83d\udccd Oficina: G-225  </li> <li>\ud83d\udd57 Horario: 08:00\u201313:00 / 14:00\u201317:00  </li> <li>\u260e\ufe0f N\u00famero: Ext. 12700  </li> <li>\ud83d\udce7 Correo: alma.tirado@iberopuebla.mx</li> </ul>"}, {"location": "Contactos/departamento/#dr-dario-edwin-gomez-garcia", "title": "Dr. Dar\u00edo Edwin G\u00f3mez Garc\u00eda", "text": "<p>Coordinador de las Licenciaturas en Ingenier\u00eda Automotriz e Ingenier\u00eda Mec\u00e1nica</p> Contacto <ul> <li>\ud83d\udccd Oficina: G-209  </li> <li>\ud83d\udd57 Horario: 08:00\u201314:00 / 15:00\u201317:00  </li> <li>\u260e\ufe0f N\u00famero: Ext. 12703  </li> <li>\ud83d\udce7 Correo: edwin.gomez@iberopuebla.mx</li> </ul>"}, {"location": "Contactos/departamento/#mtro-miguel-angel-figueras-corte", "title": "Mtro. Miguel \u00c1ngel Figueras Corte", "text": "<p>Coordinador de la Licenciatura en Ingenier\u00eda Civil</p> Contacto <ul> <li>\ud83d\udccd Oficina: G-208  </li> <li>\ud83d\udd57 Horario: 08:00\u201314:00 / 15:00\u201317:00  </li> <li>\u260e\ufe0f N\u00famero: Ext. 12709  </li> <li>\ud83d\udce7 Correo: miguelangel.figueras@iberopuebla.mx</li> </ul>"}, {"location": "Contactos/departamento/#dr-gabriel-atristain-suarez", "title": "Dr. Gabriel Atristain Su\u00e1rez", "text": "<p>Coordinador de la Licenciatura en Ingenier\u00eda Mec\u00e1nica Industrial</p> Contacto <ul> <li>\ud83d\udccd Oficina: G-210  </li> <li>\ud83d\udd57 Horario: \u2014  </li> <li>\u260e\ufe0f N\u00famero: Ext. 12718  </li> <li>\ud83d\udce7 Correo: gabriel.atristain.suarez@iberopuebla.mx</li> </ul>"}, {"location": "Contactos/departamento/#dr-manuel-francisco-acevedo-escalante", "title": "Dr. Manuel Francisco Acevedo Escalante", "text": "<p>Coordinador de la Licenciatura en Ingenier\u00eda F\u00edsica</p> Contacto <ul> <li>\ud83d\udccd Oficina: G-211  </li> <li>\ud83d\udd57 Horario: Lun\u2013Jue 08:00\u201314:00 / 15:00\u201317:00; Vie 08:00\u201315:00  </li> <li>\u260e\ufe0f N\u00famero: Ext. 12706  </li> <li>\ud83d\udce7 Correo: manuel.acevedo@iberopuebla.mx</li> </ul>"}, {"location": "Contactos/departamento/#mtra-ana-moreno-hernandez", "title": "Mtra. Ana Moreno Hern\u00e1ndez", "text": "<p>Coordinadora de la Licenciatura en Ingenier\u00eda Biom\u00e9dica</p> Contacto <ul> <li>\ud83d\udccd Oficina: G-220  </li> <li>\ud83d\udd57 Horario: 08:00\u201314:00 / 15:00\u201317:00  </li> <li>\u260e\ufe0f N\u00famero: Ext. 12711  </li> <li>\ud83d\udce7 Correo: ana.moreno.hernandez@iberopuebla.mx</li> </ul>"}, {"location": "Contactos/departamento/#dr-cesar-augusto-barrales-cortes", "title": "Dr. C\u00e9sar Augusto Barrales Cort\u00e9s", "text": "<p>Coordinador de las Licenciaturas en Ingenier\u00eda Qu\u00edmica e Ingenier\u00eda en Biotecnolog\u00eda</p> Contacto <ul> <li>\ud83d\udccd Oficina: G-206  </li> <li>\ud83d\udd57 Horario: 08:00\u201314:00 / 15:00\u201317:00  </li> <li>\u260e\ufe0f N\u00famero: Ext. 12719  </li> <li>\ud83d\udce7 Correo: cesar.barrales@iberopuebla.mx</li> </ul>"}, {"location": "Contactos/departamento/#dra-yvonne-lomas-montaudon", "title": "Dra. Yvonne Lomas Montaudon", "text": "<p>Coordinadora de la Licenciatura en Ingenier\u00eda de Negocios</p> Contacto <ul> <li>\ud83d\udccd Oficina: G-204  </li> <li>\ud83d\udd57 Horario: 08:00\u201314:00 / 15:00\u201317:00  </li> <li>\u260e\ufe0f N\u00famero: Ext. 12717  </li> <li>\ud83d\udce7 Correo: yvonne.lomas2@iberopuebla.mx</li> </ul>"}, {"location": "Contactos/departamento/#dr-antonio-benitez-ruiz", "title": "Dr. Antonio Ben\u00edtez Ruiz", "text": "<p>Coordinador de las Maestr\u00edas en Innovaci\u00f3n y Desarrollo Tecnol\u00f3gico y en Ingenier\u00eda en Manufactura Avanzada; Coordinador de la Licenciatura en Ingenier\u00eda en Sistemas Computacionales</p> Contacto <ul> <li>\ud83d\udccd Oficina: G-215  </li> <li>\ud83d\udd57 Horario: 08:00\u201314:00 / 15:00\u201317:00  </li> <li>\u260e\ufe0f N\u00famero: Ext. 12713  </li> <li>\ud83d\udce7 Correo: antonio.benitez.ruiz@iberopuebla.mx</li> </ul>"}, {"location": "Contactos/departamento/#dr-alfredo-loranca-santos", "title": "Dr. Alfredo Loranca Santos", "text": "<p>Coordinador de Ciencias B\u00e1sicas</p> Contacto <ul> <li>\ud83d\udccd Oficina: G-205  </li> <li>\ud83d\udd57 Horario: 08:00\u201316:00  </li> <li>\u260e\ufe0f N\u00famero: Ext. 12715  </li> <li>\ud83d\udce7 Correo: alfredo.loranca@iberopuebla.mx</li> </ul>"}, {"location": "Contactos/departamento/#mtra-laura-figueroa-rios", "title": "Mtra. Laura Figueroa R\u00edos", "text": "<p>Acad\u00e9mica de Tiempo</p> Contacto <ul> <li>\ud83d\udccd Oficina: G-207  </li> <li>\ud83d\udd57 Horario: 08:00\u201314:00 / 15:00\u201317:00  </li> <li>\u260e\ufe0f N\u00famero: Ext. 12721  </li> <li>\ud83d\udce7 Correo: laura.figueroa.rios@iberopuebla.mx</li> </ul>"}, {"location": "Contactos/departamento/#ing-rafael-perez-aguirre", "title": "Ing. Rafael P\u00e9rez Aguirre", "text": "<p>Acad\u00e9mico de Tiempo</p> Contacto <ul> <li>\ud83d\udccd Oficina: G-210 / IDIT J-003  </li> <li>\ud83d\udd57 Horario: 08:00\u201314:00 / 15:00\u201317:00  </li> <li>\u260e\ufe0f N\u00famero: Ext. 12720  </li> <li>\ud83d\udce7 Correo: rafael.perez2@iberopuebla.mx</li> </ul>"}, {"location": "Contactos/departamento/#dra-maria-jose-rivas-arreola", "title": "Dra. Mar\u00eda Jos\u00e9 Rivas Arreola", "text": "<p>Acad\u00e9mica de Tiempo</p> Contacto <ul> <li>\ud83d\udccd Oficina: G-212 / IDIT J-016  </li> <li>\ud83d\udd57 Horario: 08:00\u201314:00 / 15:00\u201317:00  </li> <li>\u260e\ufe0f N\u00famero: Ext. 12712  </li> <li>\ud83d\udce7 Correo: mariajose.rivas@iberopuebla.mx</li> </ul>"}, {"location": "Contactos/departamento/#mtra-ingrid-silva-zamora", "title": "Mtra. Ingrid Silva Zamora", "text": "<p>Acad\u00e9mica de Tiempo</p> Contacto <ul> <li>\ud83d\udccd Oficina: G-221  </li> <li>\ud83d\udd57 Horario: 08:00\u201314:00 / 15:00\u201317:00  </li> <li>\u260e\ufe0f N\u00famero: Ext. 12710  </li> <li>\ud83d\udce7 Correo: ingrid.silva2@iberopuebla.mx</li> </ul>"}, {"location": "Contactos/departamento/#dra-maria-guadalupe-lopez-molina", "title": "Dra. Mar\u00eda Guadalupe L\u00f3pez Molina", "text": "<p>Acad\u00e9mica de Tiempo</p> Contacto <ul> <li>\ud83d\udccd Oficina: G-213  </li> <li>\ud83d\udd57 Horario: 08:00\u201314:00 / 15:00\u201317:00  </li> <li>\u260e\ufe0f N\u00famero: Ext. 12705  </li> <li>\ud83d\udce7 Correo: musi.lopez@iberopuebla.mx</li> </ul>"}, {"location": "Contactos/departamento/#lic-oliver-ochoa-garcia", "title": "Lic. Oliver Ochoa Garc\u00eda", "text": "<p>Coordinador de la Licenciatura en Ingenier\u00eda en Comunicaciones y Electr\u00f3nica y Licenciatura en Ingenier\u00eda Mecatr\u00f3nica</p> Contacto <ul> <li>\ud83d\udccd Oficina: IDIT J-146  </li> <li>\ud83d\udd57 Horario: 08:00\u201314:00 / 15:00\u201317:00  </li> <li>\u260e\ufe0f N\u00famero: Ext. 12708  </li> <li>\ud83d\udce7 Correo: oliver.ochoa2@iberopuebla.mx</li> </ul>"}, {"location": "Contactos/departamento/#mtra-rocio-ramirez-rodriguez", "title": "Mtra. Roc\u00edo Ram\u00edrez Rodr\u00edguez", "text": "<p>Acad\u00e9mica de Tiempo</p> Contacto <ul> <li>\ud83d\udccd Oficina: G-217 / IDIT J-011-A  </li> <li>\ud83d\udd57 Horario: 08:00\u201314:00 / 15:00\u201317:00  </li> <li>\u260e\ufe0f N\u00famero: Ext. 12714  </li> <li>\ud83d\udce7 Correo: rocio.ramirez.rodriguez@iberopuebla.mx</li> </ul>"}, {"location": "Contactos/departamento/#dra-belinka-gonzalez-fernandez", "title": "Dra. Belinka Gonz\u00e1lez Fern\u00e1ndez", "text": "<p>Acad\u00e9mica de Tiempo</p> Contacto <ul> <li>\ud83d\udccd Oficina: G-216  </li> <li>\ud83d\udd57 Horario: 10:00\u201319:00  </li> <li>\u260e\ufe0f N\u00famero: Ext. 12707  </li> <li>\ud83d\udce7 Correo: belinka.gonzalez.fernandez@iberopuebla.mx</li> </ul>"}, {"location": "Contactos/fablab/", "title": "Departamento de Ciencias e Ingenierias", "text": ""}, {"location": "Contactos/fablab/#mtro-aristarco-adalberto-cortes-martin", "title": "Mtro. Aristarco Adalberto Cort\u00e9s Mart\u00edn", "text": "<p>Subdirector Comercial y de Proyectos Tecnol\u00f3gicos del Idit</p> Contacto <ul> <li>\ud83d\udccd Oficina: IDIT J-007-D </li> <li>\ud83d\udd57 Horario: Lun 08:00\u201313:00 / 14:00\u201317:00; Mar 08:00\u201313:00 / 14:00\u201317:00; Mie 08:00\u201313:00 / 14:00\u201317:00; Jue 08:00\u201313:00 / 14:00\u201317:00; Vie 08:00\u201313:00 / 14:00\u201317:00  </li> <li>\u260e\ufe0f N\u00famero: 2223723005 Ext. 12910  </li> <li>\ud83d\udce7 Correo: aristarco.cortes@iberopuebla.mx</li> </ul>"}, {"location": "Contactos/fablab/#lic-jose-alberto-blanco-lara", "title": "Lic. Jos\u00e9 Alberto Blanco Lara", "text": "<p>Jefe de Fab Lab</p> Contacto <ul> <li>\ud83d\udccd Oficina: IDIT IDIT J-148 </li> <li>\ud83d\udd57 Horario: Lun 08:00\u201313:00 / 14:00\u201317:00; Mar 08:00\u201313:00 / 14:00\u201317:00; Mie 08:00\u201313:00 / 14:00\u201317:00; Jue 08:00\u201313:00 / 14:00\u201317:00; Vie 08:00\u201313:00 / 14:00\u201317:00  </li> <li>\u260e\ufe0f N\u00famero: 2223723005 Ext. 12914  </li> <li>\ud83d\udce7 Correo: jose.blanco@iberopuebla.mx</li> </ul>"}, {"location": "Contactos/fablab/#lic-maricruz-chavez-garcia", "title": "Lic. Maricruz Ch\u00e1vez Garc\u00eda", "text": "<p>Acad\u00e9mica de Tiempo Operativo</p> Contacto <ul> <li>\ud83d\udccd Oficina: IDIT IDIT J-148 </li> <li>\ud83d\udd57 Horario: Lun 08:00\u201313:00 / 14:00\u201317:00; Mar 08:00\u201313:00 / 14:00\u201317:00; Mie 08:00\u201313:00 / 14:00\u201317:00; Jue 08:00\u201313:00 / 14:00\u201317:00; Vie 08:00\u201313:00 / 14:00\u201317:00  </li> <li>\u260e\ufe0f N\u00famero: 2223723005 Ext. 12921  </li> <li>\ud83d\udce7 Correo: maricruz.chavez.garcia@iberopuebla.mx</li> </ul>"}, {"location": "Contactos/fablab/#lic-carlos-perez-ramirez", "title": "Lic. Carlos P\u00e9rez Ram\u00edrez", "text": "<p>Jefe de Prototipado de Mec\u00e1nica</p> Contacto <ul> <li>\ud83d\udccd Oficina: IDIT IDIT J-028 </li> <li>\ud83d\udd57 Horario: Lun 08:00\u201313:00 / 14:00\u201317:00; Mar 08:00\u201313:00 / 14:00\u201317:00; Mie 08:00\u201313:00 / 14:00\u201317:00; Jue 08:00\u201313:00 / 14:00\u201317:00; Vie 08:00\u201313:00 / 14:00\u201317:00  </li> <li>\u260e\ufe0f N\u00famero: 2223723005 Ext. 12922  </li> <li>\ud83d\udce7 Correo: carlos.perez.ramirez@iberopuebla.mx</li> </ul>"}, {"location": "Contactos/oliver/", "title": "Academicos de Mecatronica", "text": ""}, {"location": "Contactos/oliver/#mtro-oliver-ochoa-garcia", "title": "Mtro. Oliver Ochoa Garc\u00eda", "text": "<p>Coordinador de Ing. Mecatr\u00f3nica y Electr\u00f3nica</p> Contacto <p> <p>\ud83d\udccd Oficina: J-146</p> <p>\ud83d\udd57 Horario: 8:00\u201317:00</p> <p>\u260e\ufe0f N\u00famero: 3723000 Ext. 12708</p> <p>\ud83d\udce7 Correo: oliver.ochoa2@iberopuebla.mx</p> </p> <p> Leyenda: Docencia Gesti\u00f3n Atenci\u00f3n a alumnos Comida Circundocencia </p> Hora Lunes Martes Mi\u00e9rcoles Jueves Viernes 08:00\u201309:00 Gesti\u00f3n de lo acad\u00e9mico Gesti\u00f3n de lo acad\u00e9mico Gesti\u00f3n de lo acad\u00e9mico Gesti\u00f3n de lo acad\u00e9mico Gesti\u00f3n de lo acad\u00e9mico 09:00\u201310:00 Atenci\u00f3n a alumnos y profesores Gesti\u00f3n de lo acad\u00e9mico Atenci\u00f3n a alumnos y profesores Gesti\u00f3n de lo acad\u00e9mico Docencia 10:00\u201311:00 Atenci\u00f3n a alumnos y profesores Gesti\u00f3n de lo acad\u00e9mico Atenci\u00f3n a alumnos y profesores Gesti\u00f3n de lo acad\u00e9mico Docencia 11:00\u201312:00 Atenci\u00f3n a alumnos y profesores Atenci\u00f3n a alumnos y profesores Atenci\u00f3n a alumnos y profesores Atenci\u00f3n a alumnos y profesores Docencia 12:00\u201313:00 Atenci\u00f3n a alumnos y profesores Atenci\u00f3n a alumnos y profesores Atenci\u00f3n a alumnos y profesores Atenci\u00f3n a alumnos y profesores Docencia 13:00\u201314:00 Comida Comida Comida Comida Comida 14:00\u201315:00 Circundocencia Circundocencia Circundocencia Circundocencia Circundocencia 15:00\u201316:00 Atenci\u00f3n a alumnos y profesores Atenci\u00f3n a alumnos y profesores Atenci\u00f3n a alumnos y profesores Atenci\u00f3n a alumnos y profesores Docencia 16:00\u201317:00 Atenci\u00f3n a alumnos y profesores Atenci\u00f3n a alumnos y profesores Atenci\u00f3n a alumnos y profesores Atenci\u00f3n a alumnos y profesores Docencia 17:00\u201318:00 Docencia \u2014 Docencia \u2014 \u2014 18:00\u201319:00 Docencia \u2014 Docencia \u2014 \u2014 19:00\u201320:00 Docencia \u2014 Docencia \u2014 \u2014 20:00\u201321:00 Docencia \u2014 Docencia \u2014 \u2014"}, {"location": "Contactos/oliver/#mtro-rafael-perez-aguirre", "title": "Mtro. Rafael Perez Aguirre", "text": "<p>Academico de Tiempo Completo de Sistemas Computacionales</p> Contacto <ul> <li>\ud83d\udccd Oficina: J-003  </li> <li>\ud83d\udd57 Horario: 8:00\u201317:00  </li> <li>\u260e\ufe0f N\u00famero: 3723000 Ext. 12720  </li> <li>\ud83d\udce7 Correo: rafael.perez2@iberopuebla.mx  </li> </ul> <p> Leyenda: Docencia Gesti\u00f3n Atenci\u00f3n a alumnos Comida Circundocencia </p> Hora Lunes Martes Mi\u00e9rcoles Jueves Viernes 08:00\u201309:00 Gesti\u00f3n de lo acad\u00e9mico Gesti\u00f3n de lo acad\u00e9mico Gesti\u00f3n de lo acad\u00e9mico Gesti\u00f3n de lo acad\u00e9mico Gesti\u00f3n de lo acad\u00e9mico 09:00\u201310:00 Atenci\u00f3n a alumnos y profesores Gesti\u00f3n de lo acad\u00e9mico Atenci\u00f3n a alumnos y profesores Gesti\u00f3n de lo acad\u00e9mico Docencia 10:00\u201311:00 Atenci\u00f3n a alumnos y profesores Gesti\u00f3n de lo acad\u00e9mico Atenci\u00f3n a alumnos y profesores Gesti\u00f3n de lo acad\u00e9mico Docencia 11:00\u201312:00 Atenci\u00f3n a alumnos y profesores Atenci\u00f3n a alumnos y profesores Atenci\u00f3n a alumnos y profesores Atenci\u00f3n a alumnos y profesores Docencia 12:00\u201313:00 Atenci\u00f3n a alumnos y profesores Atenci\u00f3n a alumnos y profesores Atenci\u00f3n a alumnos y profesores Atenci\u00f3n a alumnos y profesores Docencia 13:00\u201314:00 Comida Comida Comida Comida Comida 14:00\u201315:00 Circundocencia Circundocencia Circundocencia Circundocencia Circundocencia 15:00\u201316:00 Atenci\u00f3n a alumnos y profesores Atenci\u00f3n a alumnos y profesores Atenci\u00f3n a alumnos y profesores Atenci\u00f3n a alumnos y profesores Docencia 16:00\u201317:00 Atenci\u00f3n a alumnos y profesores Atenci\u00f3n a alumnos y profesores Atenci\u00f3n a alumnos y profesores Atenci\u00f3n a alumnos y profesores Docencia 17:00\u201318:00 Docencia \u2014 Docencia \u2014 \u2014 18:00\u201319:00 Docencia \u2014 Docencia \u2014 \u2014 19:00\u201320:00 Docencia \u2014 Docencia \u2014 \u2014 20:00\u201321:00 Docencia \u2014 Docencia \u2014 \u2014"}, {"location": "Contactos/oliver/#mtro-javier-osorio", "title": "Mtro. Javier Osorio", "text": "<ul> <li>\ud83d\udce7 Correo: javier.osorio.figueroa@iberopuebla.mx</li> </ul> HoraLunesMartesMi\u00e9rcolesJuevesViernes 07:00\u201309:00DocenciaDocencia 09:00\u201311:00DocenciaDocenciaDocenciaDocenciaDocencia 11:00\u201313:00DocenciaDocenciaDocenciaDocenciaDocencia 13:00\u201315:00DocenciaDocenciaDocenciaDocenciaDocencia"}, {"location": "Contactos/oliver/#dr-renan-contreras", "title": "Dr. Renan Contreras", "text": "<ul> <li>\ud83d\udce7 Correo: isiing@prodigy.net.mx</li> </ul> HoraLunesMartesMi\u00e9rcolesJuevesViernes 13:00\u201315:00DocenciaDocencia 15:00\u201317:00DocenciaDocencia"}, {"location": "Contactos/oliver/#dra-daniela-diaz", "title": "Dra. Daniela Diaz", "text": "<ul> <li>\ud83d\udce7 Correo: daniela.diaz.alonso@iberopuebla.mx</li> </ul> HoraLunesMartesMi\u00e9rcolesJuevesViernes 09:00\u201311:00DocenciaDocenciaDocenciaDocencia 11:00\u201313:00DocenciaDocenciaDocenciaDocencia"}, {"location": "Contactos/oliver/#dr-ignacio-zaldivar", "title": "Dr. Ignacio Zaldivar", "text": "<ul> <li>\ud83d\udce7 Correo: ignacio.zaldivar@iberopuebla.mx </li> </ul> HoraLunesMartesMi\u00e9rcolesJuevesViernesS\u00e1bado 09:00\u201311:00Docencia 11:00\u201313:00Docencia 13:00\u201315:00Docencia 15:00\u201317:00Docencia"}, {"location": "Contactos/oliver/#dr-franco-galvan", "title": "Dr. Franco Galvan", "text": "<ul> <li>\ud83d\udce7 Correo: carlosangel.franco@iberopuebla.mx  </li> </ul> HoraLunesMartesMi\u00e9rcolesJuevesViernes 17:00\u201319:00DocenciaDocenciaDocencia"}, {"location": "Contactos/oliver/#dra-gisela-de-la-fuente", "title": "Dra. Gisela de la Fuente", "text": "<ul> <li>\ud83d\udce7 Correo: gisela.delafuente.cortes@iberopuebla.mx</li> </ul> HoraLunesMartesMi\u00e9rcolesJuevesViernes 07:00\u201309:00DocenciaDocenciaDocencia"}, {"location": "Contactos/oliver/#mtro-cesar-ortega", "title": "Mtro. Cesar Ortega", "text": "<p>COORDINADOR DE OPERACIONES Y SERVICIOS ACAD\u00c9MICOS IDIT</p> <ul> <li>\ud83d\udccd Oficina: J-130  </li> <li>\ud83d\udd57 Horario: 8:00\u201317:00  </li> <li>\u260e\ufe0f N\u00famero: 3723000 Ext. 12193  </li> <li>\ud83d\udce7 Correo: cesar.ortega@iberopuebla.mx </li> </ul> HoraLunesMartesMi\u00e9rcolesJuevesViernes 07:00\u201309:00DocenciaDocenciaDocenciaDocencia"}, {"location": "Contactos/oliver/#mtro-luis-arenas", "title": "Mtro. Luis Arenas", "text": "<ul> <li>\ud83d\udce7 Correo: luis.arenas@iberopuebla.mx</li> </ul> HoraLunesMartesMi\u00e9rcolesJuevesViernes 11:00\u201313:00Docencia 15:00\u201317:00DocenciaDocenciaDocenciaDocencia 17:00\u201319:00DocenciaDocencia"}, {"location": "Contactos/oliver/#mtro-carlos-merino", "title": "Mtro. Carlos Merino", "text": "<ul> <li>\ud83d\udce7 Correo: carlos.merino@iberopuebla.mx </li> </ul> HoraLunesMartesMi\u00e9rcolesJuevesViernes 17:00\u201319:00DocenciaDocencia"}, {"location": "Contactos/oliver/#mtro-oscar-martinez", "title": "Mtro. Oscar Martinez", "text": "<ul> <li>\ud83d\udce7 Correo: oscar.martinez.fuentes@iberopuebla.mx </li> </ul> HoraLunesMartesMi\u00e9rcolesJuevesViernes 07:00\u201309:00DocenciaDocenciaDocencia 09:00\u201311:00DocenciaDocenciaDocencia"}, {"location": "Contactos/oliver/#mtro-alfredo-noyola", "title": "Mtro. Alfredo Noyola", "text": "<ul> <li>\ud83d\udce7 Correo: alfredo.noyola@iberopuebla.mx</li> </ul> HoraLunesMartesMi\u00e9rcolesJuevesViernes 13:00\u201315:00Docencia 15:00\u201317:00DocenciaDocenciaDocenciaDocencia"}, {"location": "Recursos_Carrera/Plan_Electronica/", "title": "Plan Electronica", "text": "<p>Leyenda de coordinaciones</p>  Sistemas Computacionales     Mec\u00e1nica     Electr\u00f3nica     Negocios     Ciencias B\u00e1sicas     Ingenier\u00eda Industrial     Reflexi\u00f3n Universitaria / Otros    Semestre 1Semestre 2Semestre 3Semestre 4Semestre 5Semestre 6Semestre 7Semestre 8Optativas / \u00c1rea Menor \u222b C\u00e1lculo I LICB1203 <p>Cr\u00e9ditos: 10 Horas/semana con acad\u00e9mico: 8 Instalaci\u00f3n: A  </p> \ud83d\udccc Recomendaciones <ul> <li>Refuerza el manejo de funciones, l\u00edmites y derivadas b\u00e1sicas.  </li> <li>Asiste a asesor\u00edas para resolver dudas desde el inicio.  </li> </ul> \ud83d\udcbb Software y equipo <ul> <li>MATLAB (MathWorks, licencia OAT)  </li> <li>Alternativa libre: GeoGebra.  </li> </ul> \u2b50 Coordinaci\u00f3n <ul> <li>Dr. Alfredo Loranca (Ciencias B\u00e1sicas)</li> </ul> \ud83d\udcd0 Dibujo por Computadora LICB1227 <p>Cr\u00e9ditos: 8 Horas/semana con acad\u00e9mico: 4 Instalaci\u00f3n: L  </p> \ud83d\udccc Recomendaciones <ul> <li>Familiar\u00edzate con normas de dibujo t\u00e9cnico y capas.  </li> <li>Guarda tus archivos en un respaldo externo.  </li> </ul> \ud83d\udcbb Software y equipo <ul> <li>Autodesk (AutoCAD / Inventor) (licencia OAT)  </li> <li>Alternativa libre: FreeCAD.  </li> </ul> \u2b50 Coordinaci\u00f3n <ul> <li>Dr. Dar\u00edo G\u00f3mez (Mec\u00e1nica)</li> </ul> \u2699\ufe0f Est\u00e1tica LICB1210 <p>Cr\u00e9ditos: 6 Horas/semana con acad\u00e9mico: 4 Instalaci\u00f3n: A  </p> \ud83d\udccc Recomendaciones <ul> <li>Practica diagramas de cuerpo libre y equilibrio de fuerzas.  </li> <li>Lleva calculadora cient\u00edfica siempre.  </li> </ul> \ud83d\udcbb Software y equipo <ul> <li>MATLAB (MathWorks, licencia OAT)  </li> </ul> \u2b50 Coordinaci\u00f3n <ul> <li>Dr. Alfredo Loranca (Ciencias B\u00e1sicas)</li> </ul> \ud83d\udce1 Introducci\u00f3n a la Ingenier\u00eda en Comunicaciones y Electr\u00f3nica LICB1213 <p>Cr\u00e9ditos: 4 Horas/semana con acad\u00e9mico: 2 Instalaci\u00f3n: A/L  </p> \ud83d\udccc Recomendaciones <ul> <li>Conoce las \u00e1reas clave de la electr\u00f3nica y las telecomunicaciones.  </li> <li>Identifica componentes b\u00e1sicos y su funci\u00f3n.  </li> </ul> \ud83d\udcbb Software y equipo <ul> <li>Arduino IDE (gratuito)  </li> <li>Multisim (licencia OAT)  </li> </ul> \u2b50 Coordinaci\u00f3n <ul> <li>Mtro. Oliver Ochoa (Electr\u00f3nica / Mecatr\u00f3nica)</li> </ul> \ud83e\uddea Laboratorio de Est\u00e1tica LICB1217 <p>Cr\u00e9ditos: 2 Horas/semana con acad\u00e9mico: 2 Instalaci\u00f3n: L  </p> \ud83d\udccc Recomendaciones <ul> <li>Lleva bata y cuaderno de pr\u00e1cticas.  </li> <li>Documenta mediciones con claridad.  </li> </ul> \u2b50 Coordinaci\u00f3n <ul> <li>Dr. Alfredo Loranca (Ciencias B\u00e1sicas)</li> </ul> \u2697\ufe0f Laboratorio de Qu\u00edmica General LICB1219 <p>Cr\u00e9ditos: 2 Horas/semana con acad\u00e9mico: 2 Instalaci\u00f3n: L  </p> \ud83d\udccc Recomendaciones <ul> <li>Usa bata y protecci\u00f3n ocular; sigue protocolos de seguridad.  </li> </ul> \ud83d\udcbb Software y equipo <ul> <li>Microsoft Excel (Office 365, licencia OAT)  </li> <li>Alternativa libre: Avogadro.  </li> </ul> \u2b50 Coordinaci\u00f3n <ul> <li>Dr. Alfredo Loranca (Ciencias B\u00e1sicas)</li> </ul> \ud83d\udcbb Programaci\u00f3n LISI1202 <p>Cr\u00e9ditos: 6 Horas/semana con acad\u00e9mico: 4 Instalaci\u00f3n: L  </p> \ud83d\udccc Recomendaciones <ul> <li>Practica l\u00f3gica de programaci\u00f3n y estructuras de control.  </li> <li>Mant\u00e9n copias de tus c\u00f3digos en repositorios.  </li> </ul> \ud83d\udcbb Software y equipo <ul> <li>Microsoft Visual Studio (licencia OAT)  </li> <li>Alternativa libre: Visual Studio Code, Python.  </li> </ul> \u2b50 Coordinaci\u00f3n <ul> <li>Dr. Antonio Ben\u00edtez (Sistemas Computacionales)</li> </ul> \ud83d\udcd6 Qu\u00edmica General LICB1224 <p>Cr\u00e9ditos: 6 Horas/semana con acad\u00e9mico: 4 Instalaci\u00f3n: A  </p> \ud83d\udccc Recomendaciones <ul> <li>Relaciona la teor\u00eda con las pr\u00e1cticas de laboratorio.  </li> </ul> \ud83d\udcbb Software y equipo <ul> <li>COMSOL Multiphysics (licencia OAT)  </li> <li>Alternativa libre: Avogadro.  </li> </ul> \u2b50 Coordinaci\u00f3n <ul> <li>Dr. Alfredo Loranca (Ciencias B\u00e1sicas)</li> </ul> \u2797 \u00c1lgebra Lineal LICB1202 <p>Cr\u00e9ditos: 6 Horas/semana con acad\u00e9mico: 4 Instalaci\u00f3n: A  </p> \ud83d\udccc Recomendaciones <ul> <li>Refuerza vectores, matrices y determinantes.  </li> </ul> \ud83d\udcbb Software y equipo <ul> <li>MATLAB (MathWorks, licencia OAT)  </li> <li>Alternativa libre: GeoGebra.  </li> </ul> \u2b50 Coordinaci\u00f3n <ul> <li>Dr. Alfredo Loranca (Ciencias B\u00e1sicas)</li> </ul> \u222b C\u00e1lculo II LICB1204 <p>Cr\u00e9ditos: 10 Horas/semana con acad\u00e9mico: 6 Instalaci\u00f3n: A  </p> \ud83d\udccb Prerrequisito <ul> <li>C\u00e1lculo I (LICB1203)  </li> </ul> \ud83d\udccc Recomendaciones <ul> <li>Domina t\u00e9cnicas de integraci\u00f3n y series.  </li> </ul> \ud83d\udcbb Software y equipo <ul> <li>MATLAB (MathWorks, licencia OAT)  </li> <li>Alternativa libre: GeoGebra.  </li> </ul> \u2b50 Coordinaci\u00f3n <ul> <li>Dr. Alfredo Loranca (Ciencias B\u00e1sicas)</li> </ul> \u2699\ufe0f Din\u00e1mica LICB1207 <p>Cr\u00e9ditos: 8 Horas/semana con acad\u00e9mico: 4 Instalaci\u00f3n: A  </p> \ud83d\udccb Prerrequisito <ul> <li>Est\u00e1tica (LICB1210) y C\u00e1lculo I (LICB1203)  </li> </ul> \ud83d\udccc Recomendaciones <ul> <li>Analiza problemas de movimiento y fuerzas.  </li> </ul> \ud83d\udcbb Software y equipo <ul> <li>MATLAB (MathWorks, licencia OAT)  </li> </ul> \u2b50 Coordinaci\u00f3n <ul> <li>Dr. Alfredo Loranca (Ciencias B\u00e1sicas)</li> </ul> \ud83d\udd2d Fundamentos de F\u00edsica LICB1212 <p>Cr\u00e9ditos: 4 Horas/semana con acad\u00e9mico: 2 Instalaci\u00f3n: A  </p> \ud83d\udccc Recomendaciones <ul> <li>Refuerza conceptos b\u00e1sicos de cinem\u00e1tica, din\u00e1mica y ondas.  </li> </ul> \u2b50 Coordinaci\u00f3n <ul> <li>Dr. Alfredo Loranca (Ciencias B\u00e1sicas)</li> </ul> \ud83e\uddea Laboratorio de Din\u00e1mica LICB1215 <p>Cr\u00e9ditos: 2 Horas/semana con acad\u00e9mico: 2 Instalaci\u00f3n: L  </p> \ud83d\udccb Prerrequisito <ul> <li>Est\u00e1tica (LICB1210) y C\u00e1lculo I (LICB1203)  </li> </ul> \ud83d\udccc Recomendaciones <ul> <li>Registra datos experimentales con precisi\u00f3n.  </li> </ul> \u2b50 Coordinaci\u00f3n <ul> <li>Dr. Alfredo Loranca (Ciencias B\u00e1sicas)</li> </ul> \u270d\ufe0f Lectura y Expresi\u00f3n Acad\u00e9mica LHLF1201 <p>Cr\u00e9ditos: 6 Horas/semana con acad\u00e9mico: 4 Instalaci\u00f3n: A  </p> \ud83d\udccc Recomendaciones <ul> <li>Mejora tu redacci\u00f3n t\u00e9cnica y acad\u00e9mica.  </li> </ul> \u2b50 Coordinaci\u00f3n <ul> <li>\u00c1rea de Literatura y Filosof\u00eda</li> </ul> \u222b C\u00e1lculo III LICB1205 <p>Cr\u00e9ditos: 8 Horas/semana con acad\u00e9mico: 4 Instalaci\u00f3n: A  </p> \ud83d\udccb Prerrequisito <ul> <li>C\u00e1lculo II (LICB1204)  </li> </ul> \ud83d\udccc Recomendaciones <ul> <li>Refuerza c\u00e1lculo multivariable y ecuaciones diferenciales.  </li> </ul> \ud83d\udcbb Software y equipo <ul> <li>MATLAB (MathWorks, licencia OAT)  </li> <li>Alternativa libre: GeoGebra.  </li> </ul> \u2b50 Coordinaci\u00f3n <ul> <li>Dr. Alfredo Loranca (Ciencias B\u00e1sicas)</li> </ul> \u26a1 Electricidad y Magnetismo LICB1208 <p>Cr\u00e9ditos: 8 Horas/semana con acad\u00e9mico: 4 Instalaci\u00f3n: A  </p> \ud83d\udccb Prerrequisito <ul> <li>C\u00e1lculo II (LICB1204) y Est\u00e1tica (LICB1210)  </li> </ul> \ud83d\udccc Recomendaciones <ul> <li>Revisa leyes de Ohm, Kirchhoff y electromagnetismo b\u00e1sico.  </li> </ul> \ud83d\udcbb Software y equipo <ul> <li>Multisim (licencia OAT)  </li> <li>MATLAB (MathWorks, licencia OAT)  </li> </ul> \u2b50 Coordinaci\u00f3n <ul> <li>Dr. Alfredo Loranca (Ciencias B\u00e1sicas)</li> </ul> \ud83d\udcca Probabilidad y Estad\u00edstica Aplicada LICB1221 <p>Cr\u00e9ditos: 8 Horas/semana con acad\u00e9mico: 4 Instalaci\u00f3n: A  </p> \ud83d\udccc Recomendaciones <ul> <li>Practica an\u00e1lisis de datos y uso de distribuciones estad\u00edsticas.  </li> </ul> \ud83d\udcbb Software y equipo <ul> <li>Microsoft Excel (Office 365, licencia OAT)  </li> <li>MATLAB (MathWorks, licencia OAT)  </li> </ul> \u2b50 Coordinaci\u00f3n <ul> <li>Dr. Alfredo Loranca (Ciencias B\u00e1sicas)</li> </ul> \ud83d\udcac Ser Persona LYRU1201 <p>Cr\u00e9ditos: 6 Horas/semana con acad\u00e9mico: 4 Instalaci\u00f3n: A  </p> \ud83d\udccc Recomendaciones <ul> <li>Reflexiona sobre tu desarrollo personal y \u00e9tico.  </li> </ul> \u2b50 Coordinaci\u00f3n <ul> <li>\u00c1rea de Reflexi\u00f3n Universitaria</li> </ul> \ud83d\udcc8 Formulaci\u00f3n de Proyectos LICB0423 <p>Cr\u00e9ditos: 8 Horas/semana con acad\u00e9mico: 4 Instalaci\u00f3n: A  </p> \ud83d\udccc Recomendaciones <ul> <li>Aprende metodolog\u00edas para definir, planear y evaluar proyectos.  </li> </ul> \ud83d\udcbb Software y equipo <ul> <li>Microsoft Project (Office 365, licencia OAT)  </li> <li>Canva (licencia OAT)  </li> </ul> \u2b50 Coordinaci\u00f3n <ul> <li>Dra. Yvonne Lomas (Ingenier\u00eda de Negocios)</li> </ul> \ud83d\udd0c Dise\u00f1o Digital LIIE1212 <p>Cr\u00e9ditos: 4 Horas/semana con acad\u00e9mico: 2 Instalaci\u00f3n: A/L  </p> \ud83d\udccb Prerrequisito <ul> <li>Programaci\u00f3n (LISI1202)  </li> </ul> \ud83d\udccc Recomendaciones <ul> <li>Domina compuertas l\u00f3gicas y dise\u00f1o de circuitos combinacionales.  </li> </ul> \ud83d\udcbb Software y equipo <ul> <li>Altium Student (licencia OAT)  </li> <li>Multisim (licencia OAT)  </li> </ul> \u2b50 Coordinaci\u00f3n <ul> <li>Mtro. Oliver Ochoa (Electr\u00f3nica / Mecatr\u00f3nica)</li> </ul> \ud83e\uddea Laboratorio de Dise\u00f1o Digital LIIE1225 <p>Cr\u00e9ditos: 2 Horas/semana con acad\u00e9mico: 2 Instalaci\u00f3n: L  </p> \ud83d\udccc Recomendaciones <ul> <li>Lleva todos los componentes y prototipos listos para pruebas.  </li> </ul> \ud83d\udcbb Software y equipo <ul> <li>Arduino IDE (gratuito)  </li> <li>Multisim (licencia OAT)  </li> </ul> \u2b50 Coordinaci\u00f3n <ul> <li>Mtro. Oliver Ochoa (Electr\u00f3nica / Mecatr\u00f3nica)</li> </ul> \ud83e\uddea Laboratorio de Electricidad y Magnetismo LICB1216 <p>Cr\u00e9ditos: 2 Horas/semana con acad\u00e9mico: 2 Instalaci\u00f3n: L  </p> \ud83d\udccb Prerrequisito <ul> <li>C\u00e1lculo II (LICB1204) y Est\u00e1tica (LICB1210)  </li> </ul> \ud83d\udccc Recomendaciones <ul> <li>Documenta mediciones y gr\u00e1ficas de campo el\u00e9ctrico y magn\u00e9tico.  </li> </ul> \u2b50 Coordinaci\u00f3n <ul> <li>Dr. Alfredo Loranca (Ciencias B\u00e1sicas)</li> </ul> \u222b C\u00e1lculo IV LICB1206 <p>Cr\u00e9ditos: 8 Horas/semana con acad\u00e9mico: 4 Instalaci\u00f3n: A  </p> \ud83d\udccb Prerrequisito <ul> <li>\u00c1lgebra Lineal (LICB1202) y C\u00e1lculo III (LICB1205)  </li> </ul> \ud83d\udccc Recomendaciones <ul> <li>Profundiza en ecuaciones diferenciales y transformadas.  </li> </ul> \ud83d\udcbb Software y equipo <ul> <li>MATLAB (MathWorks, licencia OAT)  </li> </ul> \u2b50 Coordinaci\u00f3n <ul> <li>Dr. Alfredo Loranca (Ciencias B\u00e1sicas)</li> </ul> \u269b\ufe0f F\u00edsica Moderna LICB1211 <p>Cr\u00e9ditos: 8 Horas/semana con acad\u00e9mico: 4 Instalaci\u00f3n: A  </p> \ud83d\udccb Prerrequisito <ul> <li>Din\u00e1mica (LICB1207)  </li> </ul> \ud83d\udccc Recomendaciones <ul> <li>Refuerza conceptos de relatividad, f\u00edsica cu\u00e1ntica y nuclear.  </li> </ul> \u2b50 Coordinaci\u00f3n <ul> <li>Dr. Alfredo Loranca (Ciencias B\u00e1sicas)</li> </ul> \ud83c\udfdb\ufe0f Canon Est\u00e9tico y Consumo en Occidente LYRU1207 <p>Cr\u00e9ditos: 6 Horas/semana con acad\u00e9mico: 4 Instalaci\u00f3n: A  </p> \ud83d\udccb Prerrequisito <ul> <li>Ser Persona (LYRU1201)  </li> </ul> \ud83d\udccc Recomendaciones <ul> <li>Analiza cr\u00edticamente las influencias culturales y art\u00edsticas.  </li> </ul> \u2b50 Coordinaci\u00f3n <ul> <li>\u00c1rea de Reflexi\u00f3n Universitaria</li> </ul> \ud83d\udcc9 An\u00e1lisis de Circuitos LIIE1201 <p>Cr\u00e9ditos: 8 Horas/semana con acad\u00e9mico: 4 Instalaci\u00f3n: A/L  </p> \ud83d\udccb Prerrequisito <ul> <li>C\u00e1lculo II (LICB1204) y Electricidad y Magnetismo (LICB1208)  </li> </ul> \ud83d\udccc Recomendaciones <ul> <li>Aplica leyes y teoremas el\u00e9ctricos a circuitos reales.  </li> </ul> \ud83d\udcbb Software y equipo <ul> <li>Multisim (licencia OAT)  </li> <li>MATLAB (MathWorks, licencia OAT)  </li> </ul> \u2b50 Coordinaci\u00f3n <ul> <li>Mtro. Oliver Ochoa (Electr\u00f3nica / Mecatr\u00f3nica)</li> </ul> \ud83e\udd16 Elementos Programables I LIIE1214 <p>Cr\u00e9ditos: 6 Horas/semana con acad\u00e9mico: 4 Instalaci\u00f3n: A/L  </p> \ud83d\udccb Prerrequisito <ul> <li>Dise\u00f1o Digital (LIIE1212)  </li> </ul> \ud83d\udccc Recomendaciones <ul> <li>Aprende el uso de FPGAs y microcontroladores.  </li> </ul> \ud83d\udcbb Software y equipo <ul> <li>Arduino IDE (gratuito)  </li> <li>Vivado (Xilinx, gratuito para estudiantes)  </li> </ul> \u2b50 Coordinaci\u00f3n <ul> <li>Mtro. Oliver Ochoa (Electr\u00f3nica / Mecatr\u00f3nica)</li> </ul> \ud83e\uddea Laboratorio de An\u00e1lisis de Circuitos LIIE1217 <p>Cr\u00e9ditos: 2 Horas/semana con acad\u00e9mico: 2 Instalaci\u00f3n: L  </p> \ud83d\udccc Recomendaciones <ul> <li>Verifica conexiones y polaridades antes de energizar.  </li> </ul> \ud83d\udcbb Software y equipo <ul> <li>Multisim (licencia OAT)  </li> </ul> \u2b50 Coordinaci\u00f3n <ul> <li>Mtro. Oliver Ochoa (Electr\u00f3nica / Mecatr\u00f3nica)</li> </ul> \ud83e\uddea Laboratorio de Elementos Programables I LIIE1227 <p>Cr\u00e9ditos: 2 Horas/semana con acad\u00e9mico: 2 Instalaci\u00f3n: L  </p> \ud83d\udccc Recomendaciones <ul> <li>Lleva configuraciones y bitstreams listos para cargar en clase.  </li> </ul> \u2b50 Coordinaci\u00f3n <ul> <li>Mtro. Oliver Ochoa (Electr\u00f3nica / Mecatr\u00f3nica)</li> </ul> \ud83d\udce1 Radiaci\u00f3n Electromagn\u00e9tica LIIE1234 <p>Cr\u00e9ditos: 6 Horas/semana con acad\u00e9mico: 4 Instalaci\u00f3n: A  </p> \ud83d\udccb Prerrequisito <ul> <li>Electricidad y Magnetismo (LICB1208) y C\u00e1lculo II (LICB1204)  </li> </ul> \ud83d\udccc Recomendaciones <ul> <li>Estudia propagaci\u00f3n de ondas y par\u00e1metros de antenas.  </li> </ul> \ud83d\udcbb Software y equipo <ul> <li>MATLAB (MathWorks, licencia OAT)  </li> <li>CST Studio (alternativa profesional)  </li> </ul> \u2b50 Coordinaci\u00f3n <ul> <li>Mtro. Oliver Ochoa (Electr\u00f3nica / Mecatr\u00f3nica)</li> </ul> \ud83d\udcc8 Se\u00f1ales y Ruido LIIE1236 <p>Cr\u00e9ditos: 6 Horas/semana con acad\u00e9mico: 4 Instalaci\u00f3n: A  </p> \ud83d\udccb Prerrequisito <ul> <li>Probabilidad y Estad\u00edstica Aplicada (LICB1221)  </li> </ul> \ud83d\udccc Recomendaciones <ul> <li>Analiza espectros y filtros para tratamiento de se\u00f1ales.  </li> </ul> \ud83d\udcbb Software y equipo <ul> <li>MATLAB (MathWorks, licencia OAT)  </li> <li>Python (bibliotecas NumPy, SciPy, Matplotlib)  </li> </ul> \u2b50 Coordinaci\u00f3n <ul> <li>Mtro. Oliver Ochoa (Electr\u00f3nica / Mecatr\u00f3nica)</li> </ul> \ud83d\udcca An\u00e1lisis de Sistemas Din\u00e1micos LIIE1202 <p>Cr\u00e9ditos: 8 Horas/semana con acad\u00e9mico: 4 Instalaci\u00f3n: A/L  </p> \ud83d\udccb Prerrequisito <ul> <li>An\u00e1lisis de Circuitos (LIIE1201) y Din\u00e1mica (LICB1207)  </li> </ul> \ud83d\udccc Recomendaciones <ul> <li>Modela sistemas el\u00e9ctricos y mec\u00e1nicos usando ecuaciones diferenciales.  </li> <li>Interpreta diagramas de bloques y funciones de transferencia.  </li> </ul> \ud83d\udcbb Software y equipo <ul> <li>MATLAB &amp; Simulink (licencia OAT)  </li> </ul> \u2b50 Coordinaci\u00f3n <ul> <li>Mtro. Oliver Ochoa (Electr\u00f3nica / Mecatr\u00f3nica)</li> </ul> \u2699\ufe0f Circuitos Electr\u00f3nicos LIIE1205 <p>Cr\u00e9ditos: 6 Horas/semana con acad\u00e9mico: 4 Instalaci\u00f3n: A/L  </p> \ud83d\udccb Prerrequisito <ul> <li>An\u00e1lisis de Circuitos (LIIE1201)  </li> </ul> \ud83d\udccc Recomendaciones <ul> <li>Analiza el funcionamiento de amplificadores y fuentes de alimentaci\u00f3n.  </li> </ul> \ud83d\udcbb Software y equipo <ul> <li>Multisim (licencia OAT)  </li> <li>MATLAB (MathWorks, licencia OAT)  </li> </ul> \u2b50 Coordinaci\u00f3n <ul> <li>Mtro. Oliver Ochoa (Electr\u00f3nica / Mecatr\u00f3nica)</li> </ul> \ud83d\udce1 Comunicaciones Anal\u00f3gicas LIIE1206 <p>Cr\u00e9ditos: 6 Horas/semana con acad\u00e9mico: 4 Instalaci\u00f3n: A  </p> \ud83d\udccb Prerrequisito <ul> <li>Se\u00f1ales y Ruido (LIIE1236) y Radiaci\u00f3n Electromagn\u00e9tica (LIIE1234)  </li> </ul> \ud83d\udccc Recomendaciones <ul> <li>Estudia modulaci\u00f3n AM/FM y sistemas de transmisi\u00f3n anal\u00f3gicos.  </li> </ul> \ud83d\udcbb Software y equipo <ul> <li>MATLAB (MathWorks, licencia OAT)  </li> <li>Python (bibliotecas de se\u00f1ales)  </li> </ul> \u2b50 Coordinaci\u00f3n <ul> <li>Mtro. Oliver Ochoa (Electr\u00f3nica / Mecatr\u00f3nica)</li> </ul> \ud83e\udd16 Elementos Programables II LIIE1215 <p>Cr\u00e9ditos: 6 Horas/semana con acad\u00e9mico: 4 Instalaci\u00f3n: A/L  </p> \ud83d\udccb Prerrequisito <ul> <li>Elementos Programables I (LIIE1214)  </li> </ul> \ud83d\udccc Recomendaciones <ul> <li>Implementa sistemas digitales avanzados en FPGA.  </li> </ul> \ud83d\udcbb Software y equipo <ul> <li>Vivado (Xilinx)  </li> <li>Arduino IDE (gratuito)  </li> </ul> \u2b50 Coordinaci\u00f3n <ul> <li>Mtro. Oliver Ochoa (Electr\u00f3nica / Mecatr\u00f3nica)</li> </ul> \ud83e\uddea Laboratorio de Circuitos Electr\u00f3nicos LIIE1219 <p>Cr\u00e9ditos: 2 Horas/semana con acad\u00e9mico: 2 Instalaci\u00f3n: L  </p> \ud83d\udccc Recomendaciones <ul> <li>Verifica par\u00e1metros con instrumentos de medici\u00f3n antes de alimentar el circuito.  </li> </ul> \u2b50 Coordinaci\u00f3n <ul> <li>Mtro. Oliver Ochoa (Electr\u00f3nica / Mecatr\u00f3nica)</li> </ul> \ud83e\uddea Laboratorio de Comunicaciones Anal\u00f3gicas LIIE1220 <p>Cr\u00e9ditos: 2 Horas/semana con acad\u00e9mico: 2 Instalaci\u00f3n: L  </p> \ud83d\udccc Recomendaciones <ul> <li>Lleva configuraciones previas de moduladores y demoduladores.  </li> </ul> \u2b50 Coordinaci\u00f3n <ul> <li>Mtro. Oliver Ochoa (Electr\u00f3nica / Mecatr\u00f3nica)</li> </ul> \ud83e\uddea Laboratorio de Elementos Programables II LIIE1228 <p>Cr\u00e9ditos: 2 Horas/semana con acad\u00e9mico: 2 Instalaci\u00f3n: L  </p> \ud83d\udccc Recomendaciones <ul> <li>Compila y verifica el c\u00f3digo antes de la sesi\u00f3n.  </li> </ul> \u2b50 Coordinaci\u00f3n <ul> <li>Mtro. Oliver Ochoa (Electr\u00f3nica / Mecatr\u00f3nica)</li> </ul> \ud83e\uddea Laboratorio de Transductores e Instrumentaci\u00f3n LIIE1232 <p>Cr\u00e9ditos: 2 Horas/semana con acad\u00e9mico: 2 Instalaci\u00f3n: L  </p> \ud83d\udccc Recomendaciones <ul> <li>Realiza calibraciones previas y sigue protocolos de seguridad.  </li> </ul> \u2b50 Coordinaci\u00f3n <ul> <li>Mtro. Oliver Ochoa (Electr\u00f3nica / Mecatr\u00f3nica)</li> </ul> \ud83d\udcdf Transductores e Instrumentaci\u00f3n LIIE1241 <p>Cr\u00e9ditos: 6 Horas/semana con acad\u00e9mico: 4 Instalaci\u00f3n: A/L  </p> \ud83d\udccc Recomendaciones <ul> <li>Conoce el principio de operaci\u00f3n de distintos sensores y actuadores.  </li> </ul> \ud83d\udcbb Software y equipo <ul> <li>Arduino IDE (gratuito)  </li> <li>MATLAB (MathWorks, licencia OAT)  </li> </ul> \u2b50 Coordinaci\u00f3n <ul> <li>Mtro. Oliver Ochoa (Electr\u00f3nica / Mecatr\u00f3nica)</li> </ul> \ud83d\udcca Desarrollo de Proyectos LIIN1201 <p>Cr\u00e9ditos: 8 Horas/semana con acad\u00e9mico: 4 Instalaci\u00f3n: A  </p> \ud83d\udccb Prerrequisito <ul> <li>Formulaci\u00f3n de Proyectos (LICB0423)  </li> </ul> \ud83d\udccc Recomendaciones <ul> <li>Aplica metodolog\u00edas \u00e1giles o de gesti\u00f3n tradicional seg\u00fan el proyecto.  </li> </ul> \ud83d\udcbb Software y equipo <ul> <li>Microsoft Project (Office 365, licencia OAT)  </li> <li>Canva (licencia OAT)  </li> </ul> \u2b50 Coordinaci\u00f3n <ul> <li>Dra. Yvonne Lomas (Ingenier\u00eda de Negocios)</li> </ul> \ud83d\udce1 Comunicaciones Discretas LIIE1207 <p>Cr\u00e9ditos: 4 Horas/semana con acad\u00e9mico: 2 Instalaci\u00f3n: A  </p> \ud83d\udccb Prerrequisito <ul> <li>Elementos Programables II (LIIE1215) y Comunicaciones Anal\u00f3gicas (LIIE1206)  </li> </ul> \ud83d\udccc Recomendaciones <ul> <li>Estudia codificaci\u00f3n de canal y modulaci\u00f3n digital.  </li> </ul> \ud83d\udcbb Software y equipo <ul> <li>MATLAB (MathWorks, licencia OAT)  </li> <li>Python (bibliotecas de se\u00f1ales)  </li> </ul> \u2b50 Coordinaci\u00f3n <ul> <li>Mtro. Oliver Ochoa (Electr\u00f3nica / Mecatr\u00f3nica)</li> </ul> \u2699\ufe0f Control Continuo LIIE1210 <p>Cr\u00e9ditos: 4 Horas/semana con acad\u00e9mico: 2 Instalaci\u00f3n: A  </p> \ud83d\udccb Prerrequisito <ul> <li>An\u00e1lisis de Sistemas Din\u00e1micos (LIIE1202)  </li> </ul> \ud83d\udccc Recomendaciones <ul> <li>Aplica controladores PID y analiza respuesta en frecuencia.  </li> </ul> \ud83d\udcbb Software y equipo <ul> <li>MATLAB &amp; Simulink (licencia OAT)  </li> </ul> \u2b50 Coordinaci\u00f3n <ul> <li>Mtro. Oliver Ochoa (Electr\u00f3nica / Mecatr\u00f3nica)</li> </ul> \u26a1 Electr\u00f3nica de Potencia LIIE1213 <p>Cr\u00e9ditos: 6 Horas/semana con acad\u00e9mico: 4 Instalaci\u00f3n: A/L  </p> \ud83d\udccb Prerrequisito <ul> <li>Circuitos Electr\u00f3nicos (LIIE1205)  </li> </ul> \ud83d\udccc Recomendaciones <ul> <li>Estudia convertidores y control de potencia el\u00e9ctrica.  </li> </ul> \ud83d\udcbb Software y equipo <ul> <li>MATLAB (MathWorks, licencia OAT)  </li> <li>Multisim (licencia OAT)  </li> </ul> \u2b50 Coordinaci\u00f3n <ul> <li>Mtro. Oliver Ochoa (Electr\u00f3nica / Mecatr\u00f3nica)</li> </ul> \ud83c\udf9b\ufe0f Filtros LIIE1216 <p>Cr\u00e9ditos: 6 Horas/semana con acad\u00e9mico: 4 Instalaci\u00f3n: A  </p> \ud83d\udccb Prerrequisito <ul> <li>Circuitos Electr\u00f3nicos (LIIE1205)  </li> </ul> \ud83d\udccc Recomendaciones <ul> <li>Dise\u00f1a y simula filtros anal\u00f3gicos y digitales.  </li> </ul> \ud83d\udcbb Software y equipo <ul> <li>MATLAB (MathWorks, licencia OAT)  </li> <li>Python (bibliotecas SciPy, Matplotlib)  </li> </ul> \u2b50 Coordinaci\u00f3n <ul> <li>Mtro. Oliver Ochoa (Electr\u00f3nica / Mecatr\u00f3nica)</li> </ul> \ud83e\uddea Laboratorio de Comunicaciones Discretas LIIE1221 <p>Cr\u00e9ditos: 2 Horas/semana con acad\u00e9mico: 2 Instalaci\u00f3n: L  </p> \ud83d\udccc Recomendaciones <ul> <li>Lleva se\u00f1ales pregrabadas y equipos de medici\u00f3n configurados.  </li> </ul> \u2b50 Coordinaci\u00f3n <ul> <li>Mtro. Oliver Ochoa (Electr\u00f3nica / Mecatr\u00f3nica)</li> </ul> \ud83e\uddea Laboratorio de Control Continuo LIIE1223 <p>Cr\u00e9ditos: 2 Horas/semana con acad\u00e9mico: 2 Instalaci\u00f3n: L  </p> \ud83d\udccc Recomendaciones <ul> <li>Configura controladores antes de las pr\u00e1cticas para optimizar tiempo.  </li> </ul> \u2b50 Coordinaci\u00f3n <ul> <li>Mtro. Oliver Ochoa (Electr\u00f3nica / Mecatr\u00f3nica)</li> </ul> \ud83e\uddea Laboratorio de Electr\u00f3nica de Potencia LIIE1226 <p>Cr\u00e9ditos: 2 Horas/semana con acad\u00e9mico: 2 Instalaci\u00f3n: L  </p> \ud83d\udccc Recomendaciones <ul> <li>Usa siempre protecci\u00f3n personal y respeta protocolos de alta tensi\u00f3n.  </li> </ul> \u2b50 Coordinaci\u00f3n <ul> <li>Mtro. Oliver Ochoa (Electr\u00f3nica / Mecatr\u00f3nica)</li> </ul> \ud83e\uddea Laboratorio de Filtros LIIE1229 <p>Cr\u00e9ditos: 2 Horas/semana con acad\u00e9mico: 2 Instalaci\u00f3n: L  </p> \ud83d\udccc Recomendaciones <ul> <li>Verifica respuesta en frecuencia con osciloscopio y generador de funciones.  </li> </ul> \u2b50 Coordinaci\u00f3n <ul> <li>Mtro. Oliver Ochoa (Electr\u00f3nica / Mecatr\u00f3nica)</li> </ul> \ud83e\uddea Laboratorio de Procesamiento Digital de Se\u00f1ales LIIE1230 <p>Cr\u00e9ditos: 2 Horas/semana con acad\u00e9mico: 2 Instalaci\u00f3n: L  </p> \ud83d\udccc Recomendaciones <ul> <li>Lleva scripts de an\u00e1lisis listos en MATLAB o Python.  </li> </ul> \u2b50 Coordinaci\u00f3n <ul> <li>Mtro. Oliver Ochoa (Electr\u00f3nica / Mecatr\u00f3nica)</li> </ul> \ud83c\udf9a\ufe0f Procesamiento Digital de Se\u00f1ales LIIE1233 <p>Cr\u00e9ditos: 6 Horas/semana con acad\u00e9mico: 4 Instalaci\u00f3n: A/L  </p> \ud83d\udccb Prerrequisito <ul> <li>Elementos Programables II (LIIE1215)  </li> </ul> \ud83d\udccc Recomendaciones <ul> <li>Implementa filtros y an\u00e1lisis espectral en tiempo real.  </li> </ul> \ud83d\udcbb Software y equipo <ul> <li>MATLAB (MathWorks, licencia OAT)  </li> <li>Python (bibliotecas SciPy, NumPy)  </li> </ul> \u2b50 Coordinaci\u00f3n <ul> <li>Mtro. Oliver Ochoa (Electr\u00f3nica / Mecatr\u00f3nica)</li> </ul> \u26a1 Sistemas El\u00e9ctricos LIIE1238 <p>Cr\u00e9ditos: 8 Horas/semana con acad\u00e9mico: 4 Instalaci\u00f3n: A/L  </p> \ud83d\udccb Prerrequisito <ul> <li>An\u00e1lisis de Circuitos (LIIE1201)  </li> </ul> \ud83d\udccc Recomendaciones <ul> <li>Analiza redes de distribuci\u00f3n y sistemas trif\u00e1sicos.  </li> </ul> \ud83d\udcbb Software y equipo <ul> <li>MATLAB (MathWorks, licencia OAT)  </li> <li>Multisim (licencia OAT)  </li> </ul> \u2b50 Coordinaci\u00f3n <ul> <li>Mtro. Oliver Ochoa (Electr\u00f3nica / Mecatr\u00f3nica)</li> </ul> \ud83d\udcdc Seminario de Servicio Social SIN <p>Cr\u00e9ditos: 0 Horas/semana con acad\u00e9mico: - Instalaci\u00f3n: A  </p> \ud83d\udccc Recomendaciones <ul> <li>Revisa requisitos y lineamientos para el Servicio Social.  </li> <li>Planea tu proyecto con tiempo para cumplir horas y objetivos.  </li> </ul> \u2b50 Coordinaci\u00f3n <ul> <li>\u00c1rea de Servicio Social</li> </ul> \ud83e\udd1d Servicio Social LSSS0401 <p>Cr\u00e9ditos: 16 Horas/semana con acad\u00e9mico: - Instalaci\u00f3n: Campo / A  </p> \ud83d\udccc Recomendaciones <ul> <li>Elige un proyecto af\u00edn a tu perfil profesional.  </li> <li>Cumple con reportes parciales y finales.  </li> </ul> \u2b50 Coordinaci\u00f3n <ul> <li>\u00c1rea de Servicio Social Oficial</li> </ul> \ud83d\udda5\ufe0f Arquitecturas Programables Avanzadas LIIE1204 <p>Cr\u00e9ditos: 8 Horas/semana con acad\u00e9mico: 4 Instalaci\u00f3n: A/L  </p> \ud83d\udccb Prerrequisito <ul> <li>Elementos Programables II (LIIE1215)  </li> </ul> \ud83d\udccc Recomendaciones <ul> <li>Aprende arquitecturas de alto rendimiento para FPGA y sistemas embebidos.  </li> </ul> \ud83d\udcbb Software y equipo <ul> <li>Vivado (Xilinx)  </li> <li>MATLAB (MathWorks, licencia OAT)  </li> </ul> \u2b50 Coordinaci\u00f3n <ul> <li>Mtro. Oliver Ochoa (Electr\u00f3nica / Mecatr\u00f3nica)</li> </ul> \ud83d\udce1 Comunicaciones Inal\u00e1mbricas LIIE1208 <p>Cr\u00e9ditos: 6 Horas/semana con acad\u00e9mico: 4 Instalaci\u00f3n: A  </p> \ud83d\udccb Prerrequisito <ul> <li>Comunicaciones Discretas (LIIE1207)  </li> </ul> \ud83d\udccc Recomendaciones <ul> <li>Analiza protocolos y est\u00e1ndares de comunicaci\u00f3n inal\u00e1mbrica.  </li> </ul> \ud83d\udcbb Software y equipo <ul> <li>MATLAB (MathWorks, licencia OAT)  </li> <li>Python (bibliotecas de redes y se\u00f1ales)  </li> </ul> \u2b50 Coordinaci\u00f3n <ul> <li>Mtro. Oliver Ochoa (Electr\u00f3nica / Mecatr\u00f3nica)</li> </ul> \ud83c\udf9b\ufe0f Control Discreto LIIE1211 <p>Cr\u00e9ditos: 4 Horas/semana con acad\u00e9mico: 2 Instalaci\u00f3n: A  </p> \ud83d\udccb Prerrequisito <ul> <li>Procesamiento Digital de Se\u00f1ales (LIIE1233) y Control Continuo (LIIE1210)  </li> </ul> \ud83d\udccc Recomendaciones <ul> <li>Implementa controladores en sistemas digitales.  </li> </ul> \ud83d\udcbb Software y equipo <ul> <li>MATLAB &amp; Simulink (licencia OAT)  </li> </ul> \u2b50 Coordinaci\u00f3n <ul> <li>Mtro. Oliver Ochoa (Electr\u00f3nica / Mecatr\u00f3nica)</li> </ul> \ud83e\uddea Laboratorio de Arquitecturas Programables Avanzadas LIIE1218 <p>Cr\u00e9ditos: 2 Horas/semana con acad\u00e9mico: 2 Instalaci\u00f3n: L  </p> \ud83d\udccc Recomendaciones <ul> <li>Lleva proyectos de FPGA preparados y documentados.  </li> </ul> \u2b50 Coordinaci\u00f3n <ul> <li>Mtro. Oliver Ochoa (Electr\u00f3nica / Mecatr\u00f3nica)</li> </ul> \ud83e\uddea Laboratorio de Comunicaciones Inal\u00e1mbricas LIIE1222 <p>Cr\u00e9ditos: 2 Horas/semana con acad\u00e9mico: 2 Instalaci\u00f3n: L  </p> \ud83d\udccc Recomendaciones <ul> <li>Configura previamente equipos y simulaciones de enlace inal\u00e1mbrico.  </li> </ul> \u2b50 Coordinaci\u00f3n <ul> <li>Mtro. Oliver Ochoa (Electr\u00f3nica / Mecatr\u00f3nica)</li> </ul> \ud83e\uddea Laboratorio de Control Discreto LIIE1224 <p>Cr\u00e9ditos: 2 Horas/semana con acad\u00e9mico: 2 Instalaci\u00f3n: L  </p> \ud83d\udccc Recomendaciones <ul> <li>Lleva el c\u00f3digo del controlador probado en simulaci\u00f3n antes de implementarlo.  </li> </ul> \u2b50 Coordinaci\u00f3n <ul> <li>Mtro. Oliver Ochoa (Electr\u00f3nica / Mecatr\u00f3nica)</li> </ul> \ud83d\udcda Tecnolog\u00eda y \u00c9tica LYRU1220 <p>Cr\u00e9ditos: 6 Horas/semana con acad\u00e9mico: 4 Instalaci\u00f3n: A  </p> \ud83d\udccb Prerrequisito <ul> <li>Ser Persona (LYRU1201) y otra asignatura de Reflexi\u00f3n Universitaria  </li> </ul> \ud83d\udccc Recomendaciones <ul> <li>Reflexiona sobre el impacto \u00e9tico y social de la tecnolog\u00eda.  </li> </ul> \u2b50 Coordinaci\u00f3n <ul> <li>\u00c1rea de Reflexi\u00f3n Universitaria</li> </ul> \ud83d\udcca Implementaci\u00f3n y Evaluaci\u00f3n de Proyectos LIIN1203 <p>Cr\u00e9ditos: 8 Horas/semana con acad\u00e9mico: 4 Instalaci\u00f3n: A  </p> \ud83d\udccb Prerrequisito <ul> <li>Desarrollo de Proyectos (LIIN1201)  </li> </ul> \ud83d\udccc Recomendaciones <ul> <li>Presenta resultados claros y m\u00e9tricas de \u00e9xito del proyecto.  </li> </ul> \ud83d\udcbb Software y equipo <ul> <li>Microsoft Project (Office 365, licencia OAT)  </li> </ul> \u2b50 Coordinaci\u00f3n <ul> <li>Dra. Yvonne Lomas (Ingenier\u00eda de Negocios)</li> </ul> \ud83d\udccf Gesti\u00f3n de la Calidad LIII1206 <p>Cr\u00e9ditos: 8 Horas/semana con acad\u00e9mico: 4 Instalaci\u00f3n: A  </p> \ud83d\udccc Recomendaciones <ul> <li>Conoce normas ISO y herramientas de control de calidad.  </li> </ul> \ud83d\udcbb Software y equipo <ul> <li>Microsoft Excel (Office 365, licencia OAT)  </li> </ul> \u2b50 Coordinaci\u00f3n <ul> <li>Mtro. V\u00edctor Hern\u00e1ndez (Ingenier\u00eda Industrial / Log\u00edstica)</li> </ul> \ud83d\udcd0 Ingenier\u00eda y Gesti\u00f3n de Proyectos LIII1210 <p>Cr\u00e9ditos: 8 Horas/semana con acad\u00e9mico: 4 Instalaci\u00f3n: A  </p> \ud83d\udccc Recomendaciones <ul> <li>Planifica, ejecuta y eval\u00faa proyectos de ingenier\u00eda complejos.  </li> </ul> \ud83d\udcbb Software y equipo <ul> <li>Microsoft Project (Office 365, licencia OAT)  </li> </ul> \u2b50 Coordinaci\u00f3n <ul> <li>Mtro. V\u00edctor Hern\u00e1ndez (Ingenier\u00eda Industrial / Log\u00edstica)</li> </ul> \ud83c\udf10 Redes Digitales de Datos LISI1203 <p>Cr\u00e9ditos: 6 Horas/semana con acad\u00e9mico: 4 Instalaci\u00f3n: A/L  </p> \ud83d\udccb Prerrequisito <ul> <li>Elementos Programables I (LIIE1214)  </li> </ul> \ud83d\udccc Recomendaciones <ul> <li>Configura y administra redes de datos cableadas e inal\u00e1mbricas.  </li> </ul> \ud83d\udcbb Software y equipo <ul> <li>Cisco Packet Tracer (gratuito para estudiantes)  </li> </ul> \u2b50 Coordinaci\u00f3n <ul> <li>Dr. Antonio Ben\u00edtez (Sistemas Computacionales)</li> </ul> \ud83e\uddea Laboratorio de Redes Digitales de Datos LISI1201 <p>Cr\u00e9ditos: 2 Horas/semana con acad\u00e9mico: 2 Instalaci\u00f3n: L  </p> \ud83d\udccc Recomendaciones <ul> <li>Lleva esquemas de red preparados para montaje r\u00e1pido.  </li> </ul> \u2b50 Coordinaci\u00f3n <ul> <li>Dr. Antonio Ben\u00edtez (Sistemas Computacionales)</li> </ul> \ud83d\udce1 Antenas y Propagaci\u00f3n LIIE1203 <p>Cr\u00e9ditos: 6 Horas/semana con acad\u00e9mico: 4 Instalaci\u00f3n: A  </p> \ud83d\udccb Prerrequisito <ul> <li>Comunicaciones Discretas (LIIE1207)  </li> </ul> \ud83d\udccc Recomendaciones <ul> <li>Dise\u00f1a y analiza antenas para distintos rangos de frecuencia.  </li> </ul> \ud83d\udcbb Software y equipo <ul> <li>MATLAB (MathWorks, licencia OAT)  </li> <li>CST Studio (profesional)  </li> </ul> \u2b50 Coordinaci\u00f3n <ul> <li>Mtro. Oliver Ochoa (Electr\u00f3nica / Mecatr\u00f3nica)</li> </ul> \ud83c\udfed Automatizaci\u00f3n Industrial LIIM1202 <p>Cr\u00e9ditos: 6 Horas/semana con acad\u00e9mico: 4 Instalaci\u00f3n: A/L  </p> \ud83d\udccb Prerrequisito <ul> <li>Control Continuo (LIIE1210) y Sistemas El\u00e9ctricos (LIIE1238)  </li> </ul> \ud83d\udccc Recomendaciones <ul> <li>Aprende a integrar PLCs, HMI y redes industriales.  </li> </ul> \ud83d\udcbb Software y equipo <ul> <li>TIA Portal (Siemens, estudiante)  </li> <li>MATLAB (MathWorks, licencia OAT)  </li> </ul> \u2b50 Coordinaci\u00f3n <ul> <li>Mtro. Oliver Ochoa (Electr\u00f3nica / Mecatr\u00f3nica)</li> </ul> \ud83d\udd2c Comunicaciones \u00d3pticas LIIE1209 <p>Cr\u00e9ditos: 8 Horas/semana con acad\u00e9mico: 4 Instalaci\u00f3n: A  </p> \ud83d\udccb Prerrequisito <ul> <li>Comunicaciones Discretas (LIIE1207)  </li> </ul> \ud83d\udccc Recomendaciones <ul> <li>Dise\u00f1a sistemas de fibra \u00f3ptica y analiza p\u00e9rdidas.  </li> </ul> \ud83d\udcbb Software y equipo <ul> <li>MATLAB (MathWorks, licencia OAT)  </li> </ul> \u2b50 Coordinaci\u00f3n <ul> <li>Mtro. Oliver Ochoa (Electr\u00f3nica / Mecatr\u00f3nica)</li> </ul> \ud83c\udfed Estancia Industrial LIIN1202 <p>Cr\u00e9ditos: 4 Horas/semana con acad\u00e9mico: 2 Instalaci\u00f3n: Campo / A  </p> \ud83d\udccc Recomendaciones <ul> <li>Busca empresas alineadas a tus intereses profesionales.  </li> </ul> \u2b50 Coordinaci\u00f3n <ul> <li>Dra. Yvonne Lomas (Ingenier\u00eda de Negocios)</li> </ul> \ud83e\udd16 Laboratorio de Rob\u00f3tica Aplicada LIIE1231 <p>Cr\u00e9ditos: 2 Horas/semana con acad\u00e9mico: 2 Instalaci\u00f3n: L  </p> \ud83d\udccc Recomendaciones <ul> <li>Prepara tus rutinas de control antes de las pruebas.  </li> </ul> \u2b50 Coordinaci\u00f3n <ul> <li>Mtro. Oliver Ochoa (Electr\u00f3nica / Mecatr\u00f3nica)</li> </ul> \ud83e\udd16 Rob\u00f3tica Aplicada LIIE1235 <p>Cr\u00e9ditos: 6 Horas/semana con acad\u00e9mico: 4 Instalaci\u00f3n: A/L  </p> \ud83d\udccb Prerrequisito <ul> <li>Control Discreto (LIIE1211)  </li> </ul> \ud83d\udccc Recomendaciones <ul> <li>Programa y simula robots antes de implementarlos en hardware.  </li> </ul> \ud83d\udcbb Software y equipo <ul> <li>ROS (Robot Operating System)  </li> <li>MATLAB (MathWorks, licencia OAT)  </li> </ul> \u2b50 Coordinaci\u00f3n <ul> <li>Mtro. Oliver Ochoa (Electr\u00f3nica / Mecatr\u00f3nica)</li> </ul> \ud83d\udcde Sistemas de Telefon\u00eda LIIE1237 <p>Cr\u00e9ditos: 8 Horas/semana con acad\u00e9mico: 4 Instalaci\u00f3n: A  </p> \ud83d\udccb Prerrequisito <ul> <li>Comunicaciones Discretas (LIIE1207)  </li> </ul> \ud83d\udccc Recomendaciones <ul> <li>Comprende sistemas de telefon\u00eda fija, m\u00f3vil e IP.  </li> </ul> \ud83d\udcbb Software y equipo <ul> <li>Wireshark (gratuito)  </li> </ul> \u2b50 Coordinaci\u00f3n <ul> <li>Mtro. Oliver Ochoa (Electr\u00f3nica / Mecatr\u00f3nica)</li> </ul> \ud83d\udd0b Tecnolog\u00edas Alternativas LIIE0411 <p>Cr\u00e9ditos: 4 Horas/semana con acad\u00e9mico: 2 Instalaci\u00f3n: A  </p> \ud83d\udccb Prerrequisito <ul> <li>Formulaci\u00f3n de Proyectos (LICB0423)  </li> </ul> \ud83d\udccc Recomendaciones <ul> <li>Analiza energ\u00edas renovables y sistemas de generaci\u00f3n alternativos.  </li> </ul> \ud83d\udcbb Software y equipo <ul> <li>MATLAB (MathWorks, licencia OAT)  </li> <li>HOMER Energy (alternativa profesional)  </li> </ul> \u2b50 Coordinaci\u00f3n <ul> <li>Mtro. Oliver Ochoa (Electr\u00f3nica / Mecatr\u00f3nica)</li> </ul> \ud83d\udce1 Temas Selectos de Ingenier\u00eda en Comunicaciones Electr\u00f3nicas LIIE1239 <p>Cr\u00e9ditos: 6 Horas/semana con acad\u00e9mico: 4 Instalaci\u00f3n: A  </p> \ud83d\udccb Prerrequisito <ul> <li>Comunicaciones Discretas (LIIE1207)  </li> </ul> \ud83d\udccc Recomendaciones <ul> <li>Investiga tecnolog\u00edas emergentes en el \u00e1rea de telecomunicaciones.  </li> </ul> \u2b50 Coordinaci\u00f3n <ul> <li>Mtro. Oliver Ochoa (Electr\u00f3nica / Mecatr\u00f3nica)</li> </ul> \ud83c\udf9b\ufe0f Temas Selectos de Ingenier\u00eda en Control LIIE1240 <p>Cr\u00e9ditos: 6 Horas/semana con acad\u00e9mico: 4 Instalaci\u00f3n: A  </p> \ud83d\udccb Prerrequisito <ul> <li>Control Discreto (LIIE1211)  </li> </ul> \ud83d\udccc Recomendaciones <ul> <li>Analiza nuevas estrategias y algoritmos de control.  </li> </ul> \u2b50 Coordinaci\u00f3n <ul> <li>Mtro. Oliver Ochoa (Electr\u00f3nica / Mecatr\u00f3nica)</li> </ul>"}, {"location": "Recursos_Carrera/Plan_Mecatronica/", "title": "Plan Mecatronica", "text": "<p>\ud83d\udcc4 Version para Imprimir</p> <p>Leyenda de coordinaciones</p>  Sistemas Computacionales     Mec\u00e1nica     Electr\u00f3nica / Mecatr\u00f3nica     Biom\u00e9dica     Negocios     Ciencias B\u00e1sicas     Ingenier\u00eda Industrial     Reflexi\u00f3n Universitaria / Otros    Semestre 1Semestre 2Semestre 3Semestre 4Semestre 5Semestre 6Semestre 7Semestre 8Semestre 9Optativas \ud83d\udcd0 Dibujo por Computadora I LIIM2101 <p>Cr\u00e9ditos: 6 Horas/semana con acad\u00e9mico: 4 Instalaci\u00f3n: L  </p> \ud83d\udccc Recomendaciones <ul> <li>Domina herramientas CAD desde el laboratorio.  </li> <li>Usa capas y nomenclatura estandarizada.  </li> </ul> \ud83d\udcbb Software y equipo <ul> <li>Autodesk (AutoCAD/Inventor) (licencia OAT) :contentReference[oaicite:0]{index=0}  </li> <li>Alternativa libre: FreeCAD.  </li> </ul> \u2b50 Coordinaci\u00f3n <ul> <li>Dr. Dar\u00edo G\u00f3mez (Mec\u00e1nica)</li> </ul> \ud83d\udd0c Electr\u00f3nica Digital LIIE2102 <p>Cr\u00e9ditos: 6 Horas/semana con acad\u00e9mico: 4 Instalaci\u00f3n: A/L  </p> \ud83d\udccc Recomendaciones <ul> <li>Refuerza an\u00e1lisis de circuitos anal\u00f3gicos.  </li> <li>Ensambla prototipos de PCB en el laboratorio.  </li> </ul> \ud83d\udcbb Software y equipo <ul> <li>Altium Student (licencia OAT) :contentReference[oaicite:1]{index=1}  </li> <li>Autodesk EAGLE (licencia OAT).  </li> <li>Alternativa libre: KiCad.  </li> </ul> \u2b50 Coordinaci\u00f3n <ul> <li>Mtro. Oliver Ochoa (Electr\u00f3nica / Mecatr\u00f3nica)</li> </ul> \ud83e\udd16 Introducci\u00f3n a la Mecatr\u00f3nica LIIT0401 <p>Cr\u00e9ditos: 4 Horas/semana con acad\u00e9mico: 2 Instalaci\u00f3n: A/L  </p> \ud83d\udccc Recomendaciones <ul> <li>Familiar\u00edzate con sens\u00f3rica y actuadores.  </li> <li>Realiza las primeras integraciones en laboratorio.  </li> </ul> \ud83d\udcbb Software y equipo <ul> <li>MATLAB &amp; Simulink (licencia OAT) :contentReference[oaicite:2]{index=2}  </li> <li>SolidWorks (licencia OAT).  </li> <li>Alternativa libre: FreeCAD.  </li> </ul> \u2b50 Coordinaci\u00f3n <ul> <li>Mtro. Oliver Ochoa (Electr\u00f3nica / Mecatr\u00f3nica)</li> </ul> \ud83d\udcbb Laboratorio de Programaci\u00f3n LIIS2101 <p>Cr\u00e9ditos: 4 Horas/semana con acad\u00e9mico: 4 Instalaci\u00f3n: L  </p> \ud83d\udccc Recomendaciones <ul> <li>Domina IDEs de C/C++ y debugging.  </li> <li>Lleva ejemplos de c\u00f3digo y manuales de API.  </li> </ul> \ud83d\udcbb Software y equipo <ul> <li>Microsoft Visual Studio (licencia OAT) :contentReference[oaicite:3]{index=3}  </li> <li>Alternativa libre: Visual Studio Code.  </li> </ul> \u2b50 Coordinaci\u00f3n <ul> <li>Dr. Antonio Ben\u00edtez (Sistemas Computacionales)</li> </ul> \u2697\ufe0f Laboratorio de Qu\u00edmica General LICB1219 <p>Cr\u00e9ditos: 2 Horas/semana con acad\u00e9mico: 2 Instalaci\u00f3n: L  </p> \ud83d\udccc Recomendaciones <ul> <li>Usa bata y protecci\u00f3n ocular; limpia bien tu espacio.  </li> </ul> \ud83d\udcbb Software y equipo <ul> <li>Microsoft Excel (Office 365) :contentReference[oaicite:4]{index=4}  </li> <li>Alternativa libre: Avogadro.  </li> </ul> \u2b50 Coordinaci\u00f3n <ul> <li>Dr. Alfredo Loranca (Ciencias B\u00e1sicas)</li> </ul> \ud83d\udcd0 Matem\u00e1ticas Universitarias LICB2101 <p>Cr\u00e9ditos: 6 Horas/semana con acad\u00e9mico: 4 Instalaci\u00f3n: A  </p> \ud83d\udccc Recomendaciones <ul> <li>Refuerza ecuaciones lineales y \u00e1lgebra matricial.  </li> </ul> \ud83d\udcbb Software y equipo <ul> <li>MATLAB (licencia OAT) :contentReference[oaicite:5]{index=5}  </li> <li>Alternativa libre: GeoGebra.  </li> </ul> \u2b50 Coordinaci\u00f3n <ul> <li>Dr. Alfredo Loranca (Ciencias B\u00e1sicas)</li> </ul> \ud83d\udee0\ufe0f Proyecto de Ingenier\u00eda I LIIB2101 <p>Cr\u00e9ditos: 4 Horas/semana con acad\u00e9mico: 2 Instalaci\u00f3n: A/L  </p> \ud83d\udccc Recomendaciones <ul> <li>Aplica Scrum o Kanban para tu proyecto.  </li> </ul> \ud83d\udcbb Software y equipo <ul> <li>Office 365 (licencia OAT) :contentReference[oaicite:6]{index=6}  </li> <li>Alternativa libre: Google Workspace.  </li> </ul> \u2b50 Coordinaci\u00f3n <ul> <li>Mtra. Ana Moreno (Biom\u00e9dica)</li> </ul> \ud83d\udcd6 Qu\u00edmica General LICB1224 <p>Cr\u00e9ditos: 6 Horas/semana con acad\u00e9mico: 4 Instalaci\u00f3n: A  </p> \ud83d\udccc Recomendaciones <ul> <li>Conecta la teor\u00eda con las pr\u00e1cticas de laboratorio.  </li> </ul> \ud83d\udcbb Software y equipo <ul> <li>COMSOL Multiphysics (licencia OAT) :contentReference[oaicite:7]{index=7}  </li> <li>Alternativa libre: Avogadro.  </li> </ul> \u2b50 Coordinaci\u00f3n <ul> <li>Dr. Alfredo Loranca (Ciencias B\u00e1sicas)</li> </ul> \u2797 \u00c1lgebra Lineal LICB1202 <p>Cr\u00e9ditos: 6 Horas/semana con acad\u00e9mico: 4 Instalaci\u00f3n: A  </p> \ud83d\udccc Recomendaciones <ul> <li>Fundamento clave para cinem\u00e1tica y din\u00e1mica.  </li> <li>\u00datil cursarla junto con C\u00e1lculo Diferencial e Integral.  </li> </ul> \ud83d\udcbb Software y equipo <ul> <li>MATLAB (MathWorks, licencia OAT)  </li> <li>Microsoft Excel (Office 365, licencia OAT)  </li> <li>Alternativa libre: GeoGebra  </li> </ul> \u2b50 Coordinaci\u00f3n <ul> <li>Dr. Alfredo Loranca (Ciencias B\u00e1sicas)</li> </ul> \u222b C\u00e1lculo Diferencial e Integral LICB2103 <p>Cr\u00e9ditos: 8 Horas/semana con acad\u00e9mico: 6 Instalaci\u00f3n: A  </p> \ud83d\udccb Prerrequisito <ul> <li>Matem\u00e1ticas Universitarias (LICB2101)  </li> </ul> \ud83d\udccc Recomendaciones <ul> <li>Refuerza l\u00edmites y derivadas antes de clase.  </li> <li>Ap\u00f3yate en las asesor\u00edas si surgen dudas.  </li> </ul> \ud83d\udcbb Software y equipo <ul> <li>MATLAB (MathWorks, licencia OAT)  </li> <li>Microsoft Excel (Office 365, licencia OAT)  </li> <li>Alternativa libre: GeoGebra  </li> </ul> \u2b50 Coordinaci\u00f3n <ul> <li>Dr. Alfredo Loranca (Ciencias B\u00e1sicas)</li> </ul> \ud83d\udcd0 Dibujo por Computadora II LIIM2102 <p>Cr\u00e9ditos: 6 Horas/semana con acad\u00e9mico: 4 Instalaci\u00f3n: L  </p> \ud83d\udccb Prerrequisito <ul> <li>Dibujo por Computadora I (LIIM2101)  </li> </ul> \ud83d\udccc Recomendaciones <ul> <li>Domina capas, acotaci\u00f3n y normas CAD.  </li> <li>Lleva USB para respaldar tus archivos de dise\u00f1o.  </li> </ul> \ud83d\udcbb Software y equipo <ul> <li>AutoCAD / Autodesk Inventor (licencia OAT)  </li> <li>Alternativa libre: FreeCAD  </li> </ul> \u2b50 Coordinaci\u00f3n <ul> <li>Dr. Dar\u00edo G\u00f3mez (Mec\u00e1nica)</li> </ul> \ud83d\udcca Estad\u00edstica y Probabilidad LICB2102 <p>Cr\u00e9ditos: 6 Horas/semana con acad\u00e9mico: 4 Instalaci\u00f3n: A/L  </p> \ud83d\udccc Recomendaciones <ul> <li>Practica an\u00e1lisis de datos reales y pruebas de hip\u00f3tesis.  </li> <li>\u00datil para investigaci\u00f3n y control de calidad.  </li> </ul> \ud83d\udcbb Software y equipo <ul> <li>IBM SPSS Statistics (licencia OAT)  </li> <li>Microsoft Excel (Office 365, licencia OAT)  </li> <li>Alternativa libre: RStudio  </li> </ul> \u2b50 Coordinaci\u00f3n <ul> <li>Dr. Alfredo Loranca (Ciencias B\u00e1sicas)</li> </ul> \ud83e\uddea Laboratorio de Mec\u00e1nica I LICB2107 <p>Cr\u00e9ditos: 2 Horas/semana con acad\u00e9mico: 2 Instalaci\u00f3n: L  </p> \ud83d\udccc Recomendaciones <ul> <li>Practica ensayos de materiales y mediciones.  </li> <li>Lleva bata y equipo de seguridad.  </li> </ul> \ud83d\udcbb Software y equipo <ul> <li>SolidWorks (licencia OAT)  </li> <li>Alternativa libre: FreeCAD  </li> </ul> \u2b50 Coordinaci\u00f3n <ul> <li>Dr. Dar\u00edo G\u00f3mez (Mec\u00e1nica)</li> </ul> \ud83d\udcd6 Lectura y Expresi\u00f3n Acad\u00e9mica (LHLF1201 <p>Cr\u00e9ditos: 6 Horas/semana con acad\u00e9mico: 4 Instalaci\u00f3n: A  </p> \ud83d\udccc Recomendaciones <ul> <li>Mejora tu redacci\u00f3n y pensamiento cr\u00edtico.  </li> <li>Participa en foros y grupos de lectura.  </li> </ul> \ud83d\udcbb Software y equipo <ul> <li>Microsoft Word (Office 365, licencia OAT)  </li> <li>Alternativa libre: Zotero  </li> </ul> \u2b50 Coordinaci\u00f3n <ul> <li>Coordinaci\u00f3n de Reflexi\u00f3n Universitaria</li> </ul> \ud83d\udcd0 Mec\u00e1nica I LICB2106 <p>Cr\u00e9ditos: 6 Horas/semana con acad\u00e9mico: 4 Instalaci\u00f3n: A  </p> \ud83d\udccc Recomendaciones <ul> <li>Refuerza diagramas de cuerpo libre y est\u00e1tica.  </li> <li>Usa simulaciones para validar c\u00e1lculos.  </li> </ul> \ud83d\udcbb Software y equipo <ul> <li>SolidWorks (licencia OAT)  </li> <li>Alternativa libre: FreeCAD  </li> </ul> \u2b50 Coordinaci\u00f3n <ul> <li>Dr. Dar\u00edo G\u00f3mez (Mec\u00e1nica)</li> </ul> \ud83d\udee0\ufe0f Proyecto de Ingenier\u00eda II LIIB2102 <p>Cr\u00e9ditos: 4 Horas/semana con acad\u00e9mico: 2 Instalaci\u00f3n: A/L  </p> \ud83d\udccb Prerrequisito <ul> <li>Proyecto de Ingenier\u00eda I (LIIB2101)  </li> </ul> \ud83d\udccc Recomendaciones <ul> <li>Emplea metodolog\u00edas \u00e1giles (Scrum, Kanban).  </li> <li>Documenta cada sprint en repositorio.  </li> </ul> \ud83d\udcbb Software y equipo <ul> <li>Office 365 (Word, Excel, PowerPoint)  </li> <li>Alternativa libre: LibreOffice  </li> </ul> \u2b50 Coordinaci\u00f3n <ul> <li>Mtra. Ana Moreno (Biom\u00e9dica)</li> </ul> \ud83d\udda5\ufe0f Programaci\u00f3n Avanzada y Algoritmos LIIS2105 <p>Cr\u00e9ditos: 6 Horas/semana con acad\u00e9mico: 4 Instalaci\u00f3n: L  </p> \ud83d\udccc Recomendaciones <ul> <li>Aplica estructuras de datos avanzadas y patrones de dise\u00f1o.  </li> <li>Usa Git/GitHub para versionado desde el inicio.  </li> </ul> \ud83d\udcbb Software y equipo <ul> <li>Microsoft Visual Studio (licencia OAT)  </li> <li>Alternativa libre: Visual Studio Code  </li> </ul> \u2b50 Coordinaci\u00f3n <ul> <li>Dr. Antonio Ben\u00edtez (Sistemas Computacionales)</li> </ul> \ud83d\udd27 Producci\u00f3n Electr\u00f3nica LIIE2103 <p>Cr\u00e9ditos: 4 Horas/semana con acad\u00e9mico: 2 Instalaci\u00f3n: L  </p> \ud83d\udccc Recomendaciones <ul> <li>Ensambla y prueba prototipos de PCB con antelaci\u00f3n.  </li> <li>Planifica la adquisici\u00f3n de componentes electr\u00f3nicos.  </li> </ul> \ud83d\udcbb Software y equipo <ul> <li>Altium Designer Student (licencia OAT)  </li> <li>Alternativa libre: KiCad  </li> </ul> \u2b50 Coordinaci\u00f3n <ul> <li>Mtro. Oliver Ochoa (Electr\u00f3nica / Mecatr\u00f3nica)</li> </ul> \u26a1 Electromagnetismo LICB2110 y LICB2111 <p>Cr\u00e9ditos: 8 Horas/semana con acad\u00e9mico: 6 Instalaci\u00f3n: A/L  </p> \ud83d\udccc Recomendaciones <ul> <li>Refuerza teor\u00eda de campos el\u00e9ctricos y magn\u00e9ticos con ejercicios pr\u00e1cticos.  </li> <li>Lleva mult\u00edmetro y protecci\u00f3n ocular al laboratorio.  </li> </ul> \ud83d\udcbb Software y equipo <ul> <li>COMSOL Multiphysics (licencia OAT)  </li> <li>Alternativa libre: FEMM  </li> </ul> \u2b50 Coordinaci\u00f3n <ul> <li>Dr. Alfredo Loranca (Ciencias B\u00e1sicas)</li> </ul> \u2211 C\u00e1lculo Multivariable LICB2105 <p>Cr\u00e9ditos: 8 Horas/semana con acad\u00e9mico: 6 Instalaci\u00f3n: A  </p> \ud83d\udccb Prerrequisito <ul> <li>C\u00e1lculo Diferencial e Integral (LICB2103)  </li> </ul> \ud83d\udccc Recomendaciones <ul> <li>Domina derivadas parciales e integrales m\u00faltiples antes de cada sesi\u00f3n.  </li> <li>Utiliza las asesor\u00edas disponibles si surge alguna duda.  </li> </ul> \ud83d\udcbb Software y equipo <ul> <li>MATLAB (licencia OAT)  </li> <li>Alternativa libre: GeoGebra  </li> </ul> \u2b50 Coordinaci\u00f3n <ul> <li>Dr. Alfredo Loranca (Ciencias B\u00e1sicas)</li> </ul> \ud83d\udd27 Mec\u00e1nica II LICB2108 y LICB2109 <p>Cr\u00e9ditos: 8 Horas/semana con acad\u00e9mico: 6 Instalaci\u00f3n: A/L  </p> \ud83d\udccb Prerrequisito <ul> <li>Mec\u00e1nica I (LICB2106)  </li> </ul> \ud83d\udccc Recomendaciones <ul> <li>Practica diagramas de cuerpo libre y an\u00e1lisis de estructuras.  </li> <li>Usa simulaciones para validar tus c\u00e1lculos.  </li> </ul> \ud83d\udcbb Software y equipo <ul> <li>SolidWorks (licencia OAT)  </li> <li>Alternativa libre: FreeCAD  </li> </ul> \u2b50 Coordinaci\u00f3n <ul> <li>Dr. Alfredo Loranca (Ciencias B\u00e1sicas)</li> </ul> \ud83d\uddc2\ufe0f Formulaci\u00f3n de Proyectos LICB0423 <p>Cr\u00e9ditos: 8 Horas/semana con acad\u00e9mico: 4 Instalaci\u00f3n: A  </p> \ud83d\udccc Recomendaciones <ul> <li>Emplea metodolog\u00edas \u00e1giles y diagramas de Gantt.  </li> <li>Justifica cronogramas y presupuestos con datos reales.  </li> </ul> \ud83d\udcbb Software y equipo <ul> <li>Microsoft Project (licencia OAT)  </li> <li>Alternativa libre: LibreOffice  </li> </ul> \u2b50 Coordinaci\u00f3n <ul> <li>Dra. Yvonne Montaudon (Negocios)</li> </ul> \ud83e\udd1d Persona y Humanismo LYRU2101 <p>Cr\u00e9ditos: 6 Horas/semana con acad\u00e9mico: 4 Instalaci\u00f3n: A  </p> \ud83d\udccc Recomendaciones <ul> <li>Reflexiona sobre la dimensi\u00f3n \u00e9tica y social de tu profesi\u00f3n.  </li> <li>Participa en foros y grupos de discusi\u00f3n.  </li> </ul> \ud83d\udcbb Software y equipo <ul> <li>Portal de Biblioteca IBERO (licencia OAT)  </li> <li>Zotero (libre) para gesti\u00f3n bibliogr\u00e1fica  </li> </ul> \u2b50 Coordinaci\u00f3n <ul> <li>Coordinaci\u00f3n de Reflexi\u00f3n Universitaria</li> </ul> \u2797 M\u00e9todos Num\u00e9ricos LICB1229 <p>Cr\u00e9ditos: 6 Horas/semana con acad\u00e9mico: 4 Instalaci\u00f3n: A  </p> \ud83d\udccc Recomendaciones <ul> <li>Aplica m\u00e9todos iterativos e interpolaci\u00f3n num\u00e9rica.  </li> <li>Practica ejercicios de convergencia y an\u00e1lisis de error.  </li> </ul> \ud83d\udcbb Software y equipo <ul> <li>MATLAB (licencia OAT)  </li> <li>Alternativa libre: Python (NumPy/SciPy)  </li> </ul> \u2b50 Coordinaci\u00f3n <ul> <li>Dr. Alfredo Loranca (Ciencias B\u00e1sicas)</li> </ul> \u222b Ecuaciones Diferenciales LICB2113 <p>Cr\u00e9ditos: 8 Horas/semana con acad\u00e9mico: 6 Instalaci\u00f3n: A  </p> \ud83d\udccb Prerrequisito <ul> <li>C\u00e1lculo Multivariable (LICB2105)  </li> </ul> \ud83d\udccc Recomendaciones <ul> <li>Domina las EDOs de primer y segundo orden y su modelado.  </li> <li>Aprovecha las asesor\u00edas para reforzar los m\u00e9todos de soluci\u00f3n.  </li> </ul> \ud83d\udcbb Software y equipo <ul> <li>MATLAB &amp; Simulink (licencia OAT)  </li> <li>Alternativa libre: SymPy  </li> </ul> \u2b50 Coordinaci\u00f3n <ul> <li>Dr. Alfredo Loranca (Ciencias B\u00e1sicas)</li> </ul> \ud83d\udd0c Circuitos Electr\u00f3nicos I LIIE2104 <p>Cr\u00e9ditos: 8 Horas/semana con acad\u00e9mico: 4 Instalaci\u00f3n: A/L  </p> \ud83d\udccc Recomendaciones <ul> <li>Refuerza amplificaci\u00f3n y filtrado anal\u00f3gico.  </li> <li>Lleva prototipos listos para pruebas de laboratorio.  </li> </ul> \ud83d\udcbb Software y equipo <ul> <li>Altium Designer Student (licencia OAT)  </li> <li>Alternativa libre: KiCad  </li> </ul> \u2b50 Coordinaci\u00f3n <ul> <li>Mtro. Oliver Ochoa (Electr\u00f3nica / Mecatr\u00f3nica)</li> </ul> \ud83d\udee0\ufe0f Laboratorio de Resistencia de Materiales LIIM1208 <p>Cr\u00e9ditos: 2 Horas/semana con acad\u00e9mico: 2 Instalaci\u00f3n: L  </p> \ud83d\udccc Recomendaciones <ul> <li>Realiza pruebas de tensi\u00f3n y compresi\u00f3n siguiendo procedimientos de seguridad.  </li> <li>Usa equipo de protecci\u00f3n personal en todo momento.  </li> </ul> \ud83d\udcbb Software y equipo <ul> <li>COMSOL Multiphysics (licencia OAT)  </li> <li>Alternativa libre: FEMM  </li> </ul> \u2b50 Coordinaci\u00f3n <ul> <li>Dr. Dar\u00edo G\u00f3mez (Mec\u00e1nica)</li> </ul> \ud83d\udcd0 Resistencia de Materiales LIIM1214 <p>Cr\u00e9ditos: 6 Horas/semana con acad\u00e9mico: 2 Instalaci\u00f3n: A  </p> \ud83d\udccc Recomendaciones <ul> <li>Comprende esfuerzo y deformaci\u00f3n antes de las pr\u00e1cticas.  </li> <li>Revisa diagramas de cuerpo libre en cada sesi\u00f3n te\u00f3rica.  </li> </ul> \ud83d\udcbb Software y equipo <ul> <li>SolidWorks Simulation (licencia OAT)  </li> <li>Alternativa libre: FreeCAD  </li> </ul> \u2b50 Coordinaci\u00f3n <ul> <li>Dr. Dar\u00edo G\u00f3mez (Mec\u00e1nica)</li> </ul> \u2699\ufe0f Mec\u00e1nica III LICB2112 <p>Cr\u00e9ditos: 8 Horas/semana con acad\u00e9mico: 4 Instalaci\u00f3n: A  </p> \ud83d\udccb Prerrequisito <ul> <li>Mec\u00e1nica II (LICB2108)  </li> </ul> \ud83d\udccc Recomendaciones <ul> <li>Profundiza en din\u00e1mica de sistemas y an\u00e1lisis de vibraciones.  </li> <li>Usa simulaciones en MATLAB para validar los modelos.  </li> </ul> \ud83d\udcbb Software y equipo <ul> <li>MATLAB &amp; Simulink (licencia OAT)  </li> <li>Alternativa libre: Python (SciPy)  </li> </ul> \u2b50 Coordinaci\u00f3n <ul> <li>Dr. Alfredo Loranca (Ciencias B\u00e1sicas)</li> </ul> \ud83d\udee0\ufe0f Proyecto de Ingenier\u00eda III LIIB2103 <p>Cr\u00e9ditos: 4 Horas/semana con acad\u00e9mico: 2 Instalaci\u00f3n: A/L  </p> \ud83d\udccb Prerrequisito <ul> <li>Proyecto de Ingenier\u00eda II (LIIB2102)  </li> </ul> \ud83d\udccc Recomendaciones <ul> <li>Integra mec\u00e1nica, electr\u00f3nica y control en tu proyecto.  </li> <li>Documenta cada fase con diagramas y reportes t\u00e9cnicos.  </li> </ul> \ud83d\udcbb Software y equipo <ul> <li>Office 365 (licencia OAT)  </li> <li>Alternativa libre: Google Workspace  </li> </ul> \u2b50 Coordinaci\u00f3n <ul> <li>Mtra. Ana Moreno (Biom\u00e9dica)</li> </ul> \ud83d\udd0c Circuitos Electr\u00f3nicos II LIIE2105 <p>Cr\u00e9ditos: 8 Horas/semana con acad\u00e9mico: 4 Instalaci\u00f3n: A/L  </p> \ud83d\udccb Prerrequisito <ul> <li>Circuitos Electr\u00f3nicos I (LIIE2104)  </li> </ul> \ud83d\udccc Recomendaciones <ul> <li>Domina amplificaci\u00f3n y filtrado en frecuencia variable.  </li> <li>Ensambla y prueba prototipos de PCB con antelaci\u00f3n.  </li> </ul> \ud83d\udcbb Software y equipo <ul> <li>Altium Designer (licencia OAT)  </li> <li>Alternativa libre: KiCad.  </li> </ul> \u2b50 Coordinaci\u00f3n <ul> <li>Mtro. Oliver Ochoa (Electr\u00f3nica / Mecatr\u00f3nica)</li> </ul> \ud83d\udcd0 Dise\u00f1o de Mecanismos LIIM2103 <p>Cr\u00e9ditos: 6 Horas/semana con acad\u00e9mico: 4 Instalaci\u00f3n: A  </p> \ud83d\udccc Recomendaciones <ul> <li>Practica an\u00e1lisis cinem\u00e1tico y din\u00e1mico de mecanismos.  </li> <li>Usa simuladores para validar movimientos.  </li> </ul> \ud83d\udcbb Software y equipo <ul> <li>Autodesk Inventor (licencia OAT)  </li> <li>Alternativa libre: FreeCAD.  </li> </ul> \u2b50 Coordinaci\u00f3n <ul> <li>Dr. Dar\u00edo G\u00f3mez (Mec\u00e1nica)</li> </ul> \ud83d\udd0d Metrolog\u00eda Dimensional LIIM2105 <p>Cr\u00e9ditos: 6 Horas/semana con acad\u00e9mico: 4 Instalaci\u00f3n: L  </p> \ud83d\udccc Recomendaciones <ul> <li>Realiza mediciones con tr\u00edpode y calibraci\u00f3n previa.  </li> <li>Documenta tolerancias y errores en cada medici\u00f3n.  </li> </ul> \ud83d\udcbb Software y equipo <ul> <li>Microsoft Excel (licencia OAT)  </li> <li>Alternativa libre: Python (pandas).  </li> </ul> \u2b50 Coordinaci\u00f3n <ul> <li>Dr. Dar\u00edo G\u00f3mez (Mec\u00e1nica)</li> </ul> \ud83d\udda5\ufe0f Modelado de Control Continuo LIIE2106 <p>Cr\u00e9ditos: 8 Horas/semana con acad\u00e9mico: 4 Instalaci\u00f3n: A  </p> \ud83d\udccc Recomendaciones <ul> <li>Refuerza transformadas de Laplace y diagramas de bloques.  </li> <li>Simula sistemas de control en el laboratorio.  </li> </ul> \ud83d\udcbb Software y equipo <ul> <li>MATLAB &amp; Simulink (licencia OAT)  </li> <li>Alternativa libre: Scilab Xcos.  </li> </ul> \u2b50 Coordinaci\u00f3n <ul> <li>Mtro. Oliver Ochoa (Electr\u00f3nica / Mecatr\u00f3nica)</li> </ul> \ud83d\udee0\ufe0f Proyecto de Ingenier\u00eda IV LIIB2104 <p>Cr\u00e9ditos: 4 Horas/semana con acad\u00e9mico: 2 Instalaci\u00f3n: A/L  </p> \ud83d\udccb Prerrequisito <ul> <li>Proyecto de Ingenier\u00eda III (LIIB2103)  </li> </ul> \ud83d\udccc Recomendaciones <ul> <li>Integra todos los conocimientos previos en tu proyecto.  </li> <li>Planifica entregables y pruebas con cronogramas.  </li> </ul> \ud83d\udcbb Software y equipo <ul> <li>Office 365 (licencia OAT)  </li> <li>Alternativa libre: Google Workspace.  </li> </ul> \u2b50 Coordinaci\u00f3n <ul> <li>Mtra. Ana Moreno (Biom\u00e9dica)</li> </ul> \ud83d\udcbb Sistemas Embebidos I LIIS2106 <p>Cr\u00e9ditos: 8 Horas/semana con acad\u00e9mico: 4 Instalaci\u00f3n: A/L  </p> \ud83d\udccc Recomendaciones <ul> <li>Configura microcontroladores y realiza primeras pruebas.  </li> <li>Lleva tu placa de desarrollo y cables de conexi\u00f3n.  </li> </ul> \ud83d\udcbb Software y equipo <ul> <li>MPLAB X IDE (libre)  </li> <li>Alternativa libre: Arduino IDE.  </li> </ul> \u2b50 Coordinaci\u00f3n <ul> <li>Dr. Antonio Ben\u00edtez (Sistemas Computacionales)</li> </ul> \ud83d\udce6 Desarrollo de Proyectos en Ingenier\u00eda Mecatr\u00f3nica LIIE2109 <p>Cr\u00e9ditos: 8 Horas/semana con acad\u00e9mico: 4 Instalaci\u00f3n: A/L  </p> \ud83d\udccb Prerrequisito <ul> <li>Formulaci\u00f3n de Proyectos (LICB0423)  </li> </ul> \ud83d\udccc Recomendaciones <ul> <li>Organiza equipos multidisciplinarios y define entregables claros.  </li> <li>Usa metodolog\u00edas \u00e1giles (Scrum, Kanban).  </li> </ul> \ud83d\udcbb Software y equipo <ul> <li>Office 365 (Word, Excel, PowerPoint) (licencia OAT)  </li> <li>Alternativa libre: Google Workspace  </li> </ul> \u2b50 Coordinaci\u00f3n <ul> <li>Mtro. Oliver Ochoa (Electr\u00f3nica / Mecatr\u00f3nica)</li> </ul> \ud83e\udd16 Fundamentos de Inteligencia Artificial LIIS2109 <p>Cr\u00e9ditos: 6 Horas/semana con acad\u00e9mico: 4 Instalaci\u00f3n: A  </p> \ud83d\udccc Recomendaciones <ul> <li>Repasa \u00e1lgebra lineal y probabilidad para modelos estad\u00edsticos.  </li> <li>Practica con datasets reales.  </li> </ul> \ud83d\udcbb Software y equipo <ul> <li>MATLAB (Machine Learning Toolbox) (licencia OAT)  </li> <li>Alternativa libre: Python (scikit-learn, TensorFlow)  </li> </ul> \u2b50 Coordinaci\u00f3n <ul> <li>Dr. Antonio Ben\u00edtez (Sistemas Computacionales)</li> </ul> \ud83d\udd0c Instrumentaci\u00f3n Electr\u00f3nica LIIE2107 <p>Cr\u00e9ditos: 6 Horas/semana con acad\u00e9mico: 4 Instalaci\u00f3n: A/L  </p> \ud83d\udccc Recomendaciones <ul> <li>Conecta sensores y acondiciona se\u00f1ales en el laboratorio.  </li> <li>Lleva tu propio mult\u00edmetro y protoboard.  </li> </ul> \ud83d\udcbb Software y equipo <ul> <li>Microsoft Visual Studio (licencia OAT)  </li> <li>Alternativa libre: Python (PyVISA)  </li> </ul> \u2b50 Coordinaci\u00f3n <ul> <li>Mtro. Oliver Ochoa (Electr\u00f3nica / Mecatr\u00f3nica)</li> </ul> \u2699\ufe0f Modelado de Control Discreto LIIE2108 <p>Cr\u00e9ditos: 6 Horas/semana con acad\u00e9mico: 4 Instalaci\u00f3n: A  </p> \ud83d\udccc Recomendaciones <ul> <li>Refuerza transformadas Z y diagramas de bloques discretos.  </li> <li>Simula sistemas en laboratorio.  </li> </ul> \ud83d\udcbb Software y equipo <ul> <li>MATLAB &amp; Simulink (licencia OAT)  </li> </ul> \u2b50 Coordinaci\u00f3n <ul> <li>Mtro. Oliver Ochoa (Electr\u00f3nica / Mecatr\u00f3nica)</li> </ul> \ud83c\udfed Procesos Mec\u00e1nicos de Manufactura LIII2116 <p>Cr\u00e9ditos: 6 Horas/semana con acad\u00e9mico: 4 Instalaci\u00f3n: L  </p> \ud83d\udccc Recomendaciones <ul> <li>Practica operaciones de torneado, fresado y soldadura.  </li> <li>Usa equipo de protecci\u00f3n y sigue normas de seguridad.  </li> </ul> \ud83d\udcbb Software y equipo <ul> <li>NX de Siemens (licencia OAT)  </li> <li>Alternativa libre: FreeCAD  </li> </ul> \u2b50 Coordinaci\u00f3n <ul> <li>Mtro. Victor Hernandez (Industrial y Logistica)</li> </ul> \ud83d\udee0\ufe0f Sistemas Embebidos II LIIS2107 <p>Cr\u00e9ditos: 8 Horas/semana con acad\u00e9mico: 4 Instalaci\u00f3n: A/L  </p> \ud83d\udccb Prerrequisito <ul> <li>Sistemas Embebidos I (LIIS2106)  </li> </ul> \ud83d\udccc Recomendaciones <ul> <li>Profundiza en RTOS y manejo de interrupciones.  </li> <li>Lleva tu placa de desarrollo y fuente de alimentaci\u00f3n.  </li> </ul> \ud83d\udcbb Software y equipo <ul> <li>Microsoft Visual Studio (licencia OAT)  </li> <li>Alternativa libre: Arduino IDE  </li> </ul> \u2b50 Coordinaci\u00f3n <ul> <li>Dr. Antonio Ben\u00edtez (Sistemas Computacionales)</li> </ul> \ud83e\udd1d Reflexi\u00f3n y Acci\u00f3n Social LRSS2102 <p>Cr\u00e9ditos: 4 Horas/semana con acad\u00e9mico: 4 Instalaci\u00f3n: A  </p> \ud83d\udccb Prerrequisito <ul> <li>Persona y Humanismo (LYRU2101)  </li> </ul> \ud83d\udccc Recomendaciones <ul> <li>Participa activamente en proyectos comunitarios.  </li> <li>Coordina fechas con Servicio Social Oficial.  </li> </ul> \ud83d\udcbb Software y equipo <ul> <li>Office 365 (Word, Excel, PowerPoint) (licencia OAT)  </li> <li>Alternativa libre: Google Workspace  </li> </ul> \u2b50 Coordinaci\u00f3n <ul> <li>Coordinaci\u00f3n de Servicio Social Oficial</li> </ul> \ud83d\udd0c Circuitos Electr\u00f3nicos de Potencia LIIE2110 <p>Cr\u00e9ditos: 6 Horas/semana con acad\u00e9mico: 4 Instalaci\u00f3n: A/L  </p> \ud83d\udccc Recomendaciones <ul> <li>Ensambla y prueba prototipos de potencia con antelaci\u00f3n.  </li> <li>Simula los circuitos antes de la pr\u00e1ctica.  </li> </ul> \ud83d\udcbb Software y equipo <ul> <li>Altium Designer (licencia OAT)  </li> <li>Alternativa libre: KiCad  </li> </ul> \u2b50 Coordinaci\u00f3n <ul> <li>Mtro. Oliver Ochoa (Electr\u00f3nica / Mecatr\u00f3nica)</li> </ul> \ud83d\udcd0 Dise\u00f1o Mec\u00e1nico LIIM2107 <p>Cr\u00e9ditos: 6 Horas/semana con acad\u00e9mico: 4 Instalaci\u00f3n: A  </p> \ud83d\udccc Recomendaciones <ul> <li>Profundiza en simulaci\u00f3n y an\u00e1lisis cinem\u00e1tico.  </li> <li>Prueba prototipos impresos en 3D.  </li> </ul> \ud83d\udcbb Software y equipo <ul> <li>Autodesk Inventor (licencia OAT)  </li> <li>Alternativa libre: FreeCAD  </li> </ul> \u2b50 Coordinaci\u00f3n <ul> <li>Dr. Dar\u00edo G\u00f3mez (Mec\u00e1nica)</li> </ul> \ud83d\udca1 Proyecto de Innovaci\u00f3n Frugal LIIN2104 <p>Cr\u00e9ditos: 4 Horas/semana con acad\u00e9mico: 2 Instalaci\u00f3n: A/L  </p> \ud83d\udccb Prerrequisito <ul> <li>Proyecto de Ingenier\u00eda III (LIIB2104)  </li> </ul> \ud83d\udccc Recomendaciones <ul> <li>Dise\u00f1a soluciones con recursos m\u00ednimos.  </li> <li>Documenta cada iteraci\u00f3n de tu prototipo.  </li> </ul> \ud83d\udcbb Software y equipo <ul> <li>Canva (licencia OAT)  </li> <li>Alternativa libre: Figma  </li> </ul> \u2b50 Coordinaci\u00f3n <ul> <li>Dra. Yvonne Montaudon (Negocios)</li> </ul> \ud83c\udf10 Redes Digitales e Internet LIIS2108 <p>Cr\u00e9ditos: 6 Horas/semana con acad\u00e9mico: 4 Instalaci\u00f3n: A  </p> \ud83d\udccc Recomendaciones <ul> <li>Configura y analiza protocolos OSI/TCP-IP.  </li> <li>Practica en laboratorios virtuales antes de la pr\u00e1ctica.  </li> </ul> \ud83d\udcbb Software y equipo <ul> <li>Cisco Packet Tracer (licencia OAT)  </li> <li>Alternativa libre: GNS3, Wireshark  </li> </ul> \u2b50 Coordinaci\u00f3n <ul> <li>Dr. Antonio Ben\u00edtez (Sistemas Computacionales)</li> </ul> \u26a1 Sistemas El\u00e9ctricos LIIE1238 <p>Cr\u00e9ditos: 8 Horas/semana con acad\u00e9mico: 4 Instalaci\u00f3n: A/L  </p> \ud83d\udccc Recomendaciones <ul> <li>Analiza distribuciones de potencia y calidad de energ\u00eda.  </li> <li>Lleva equipo de medici\u00f3n y protecciones al laboratorio.  </li> </ul> \ud83d\udcbb Software y equipo <ul> <li>MATLAB &amp; Simulink (Power Systems Toolbox) (licencia OAT)  </li> <li>Alternativa libre: OpenModelica  </li> </ul> \u2b50 Coordinaci\u00f3n <ul> <li>Mtro. Oliver Ochoa (Electr\u00f3nica / Mecatr\u00f3nica)</li> </ul> \ud83c\udfed Automatizaci\u00f3n y Control Industrial LIIE2111 <p>Cr\u00e9ditos: 8 Horas/semana con acad\u00e9mico: 4 Instalaci\u00f3n: A/L  </p> \ud83d\udccc Recomendaciones <ul> <li>Familiar\u00edzate con sistemas SCADA y PLCs.  </li> <li>Coordina pr\u00e1cticas con el laboratorio antes de clase.  </li> </ul> \ud83d\udcbb Software y equipo <ul> <li>Siemens NX (licencia OAT)   </li> <li>Alternativa libre: FreeCAD  </li> </ul> \u2b50 Coordinaci\u00f3n <ul> <li>Mtro. Oliver Ochoa (Electr\u00f3nica / Mecatr\u00f3nica)</li> </ul> \ud83d\ude80 Emprendimiento Tecnol\u00f3gico LIIN2105 <p>Cr\u00e9ditos: 8 Horas/semana con acad\u00e9mico: 4 Instalaci\u00f3n: A  </p> \ud83d\udccc Recomendaciones <ul> <li>Desarrolla planes de negocio y prepara tu pitch.  </li> <li>Ap\u00f3yate en casos de estudio reales.  </li> </ul> \ud83d\udcbb Software y equipo <ul> <li>Office 365 (Word, Excel, PowerPoint) (licencia OAT)   </li> <li>Alternativa libre: Google Workspace  </li> </ul> \u2b50 Coordinaci\u00f3n <ul> <li>Dra. Yvonne Montaudon (Negocios)</li> </ul> \ud83c\udfe2 Pr\u00e1ctica Profesional I LIIN2103 <p>Cr\u00e9ditos: 4 Horas/semana con acad\u00e9mico: 2 Instalaci\u00f3n: A  </p> \ud83d\udccc Recomendaciones <ul> <li>Documenta tus actividades y reflexiona sobre el aprendizaje.  </li> <li>Mant\u00e9n actualizada tu carpeta de evidencias.  </li> </ul> \ud83d\udcbb Software y equipo <ul> <li>Word y Excel (Office 365, licencia OAT)   </li> <li>Alternativa libre: LibreOffice  </li> </ul> \u2b50 Coordinaci\u00f3n <ul> <li>Dra. Yvonne Montaudon (Negocios)</li> </ul> \ud83d\udee0\ufe0f Taller de Emprendimiento Tecnol\u00f3gico LIIN2106 <p>Cr\u00e9ditos: 8 Horas/semana con acad\u00e9mico: 2 Instalaci\u00f3n: L  </p> \ud83d\udccc Recomendaciones <ul> <li>Participa en din\u00e1micas de ideaci\u00f3n y prototipado r\u00e1pido.  </li> <li>Utiliza metodolog\u00edas como Design Thinking.  </li> </ul> \ud83d\udcbb Software y equipo <ul> <li>Canva (licencia OAT)   </li> <li>Alternativa libre: Figma  </li> </ul> \u2b50 Coordinaci\u00f3n <ul> <li>Dra. Yvonne Montaudon (Negocios)</li> </ul> \u2696\ufe0f Dilemas \u00c9ticos en la Ingenier\u00eda LYRU2118 <p>Cr\u00e9ditos: 6 Horas/semana con acad\u00e9mico: 4 Instalaci\u00f3n: A  </p> \ud83d\udccb Prerrequisito <ul> <li>Persona y Humanismo (LYRU2101)  </li> </ul> \ud83d\udccc Recomendaciones <ul> <li>Participa en debates y an\u00e1lisis de casos reales.  </li> <li>Reflexiona sobre el impacto social y ambiental de la tecnolog\u00eda.  </li> </ul> \ud83d\udcbb Software y equipo <ul> <li>Portal de Biblioteca IBERO (acceso OAT)  </li> <li>Alternativa libre: Zotero para gesti\u00f3n bibliogr\u00e1fica.  </li> </ul> \u2b50 Coordinaci\u00f3n <ul> <li>Coordinaci\u00f3n de Reflexi\u00f3n Universitaria</li> </ul> \ud83d\udcca Implementaci\u00f3n y Evaluaci\u00f3n de Proyectos LIIN1203 <p>Cr\u00e9ditos: 8 Horas/semana con acad\u00e9mico: 4 Instalaci\u00f3n: A  </p> \ud83d\udccb Prerrequisito <ul> <li>Desarrollo de Proyectos en Ingenier\u00eda Mecatr\u00f3nica (LIIE2109)  </li> </ul> \ud83d\udccc Recomendaciones <ul> <li>Define indicadores clave y usa m\u00e9tricas para medir resultados.  </li> <li>Aplica metodolog\u00edas \u00e1giles de seguimiento (Scrum, Kanban).  </li> </ul> \ud83d\udcbb Software y equipo <ul> <li>Microsoft Project (licencia OAT)  </li> <li>Alternativa libre: OpenProject  </li> </ul> \u2b50 Coordinaci\u00f3n <ul> <li>Dra. Yvonne Montaudon (Negocios)</li> </ul> \ud83c\udfed Pr\u00e1ctica Profesional II LIIN2107 <p>Cr\u00e9ditos: 4 Horas/semana con acad\u00e9mico: 2 Instalaci\u00f3n: A  </p> \ud83d\udccb Prerrequisito <ul> <li>Pr\u00e1ctica Profesional I (LIIN2103)  </li> </ul> \ud83d\udccc Recomendaciones <ul> <li>Documenta tus actividades diarias y reflexiona en tu informe final.  </li> <li>Mant\u00e9n evidencia fotogr\u00e1fica y reportes peri\u00f3dicos.  </li> </ul> \ud83d\udcbb Software y equipo <ul> <li>Office 365 (Word, Excel, PowerPoint) (licencia OAT)  </li> <li>Alternativa libre: LibreOffice  </li> </ul> \u2b50 Coordinaci\u00f3n <ul> <li>Dra. Yvonne Montaudon (Negocios)</li> </ul> \ud83d\udce1 Control Remoto e Internet LIIS2104 <p>Cr\u00e9ditos: 6 Horas/semana con acad\u00e9mico: 2 Instalaci\u00f3n: A/L  </p> \ud83d\udccc Descripci\u00f3n <ul> <li>Estudio de protocolos y arquitecturas IoT para control remoto.  </li> <li>Pr\u00e1ctica de conexi\u00f3n y seguridad en redes industriales.  </li> </ul> \ud83d\udcbb Software y equipo <ul> <li>Cisco Packet Tracer (licencia OAT)  </li> <li>Alternativa libre: GNS3, Wireshark  </li> </ul> \u2b50 Coordinaci\u00f3n <ul> <li>Dr. Antonio Ben\u00edtez (Sistemas Computacionales)</li> </ul> \ud83e\udd16 Rob\u00f3tica Industrial LIIE2101 <p>Cr\u00e9ditos: 6 Horas/semana con acad\u00e9mico: 4 Instalaci\u00f3n: A/L  </p> \ud83d\udccc Descripci\u00f3n <ul> <li>Configuraci\u00f3n y programaci\u00f3n de brazos rob\u00f3ticos y PLCs.  </li> <li>Simulaci\u00f3n y puesta a punto de c\u00e9lulas automatizadas.  </li> </ul> \ud83d\udcbb Software y equipo <ul> <li>MATLAB &amp; Simulink Robotics Toolbox (licencia OAT)  </li> <li>Alternativa libre: ROS/Gazebo, CoppeliaSim  </li> </ul> \u2b50 Coordinaci\u00f3n <ul> <li>Mtro. Oliver Ochoa (Electr\u00f3nica / Mecatr\u00f3nica)</li> </ul> \ud83d\udcf6 Sistemas de Control y Monitoreo LIIE2112 <p>Cr\u00e9ditos: 6 Horas/semana con acad\u00e9mico: 2 Instalaci\u00f3n: A/L  </p> \ud83d\udccc Descripci\u00f3n <ul> <li>Dise\u00f1o de lazos de control y SCADA para procesos.  </li> <li>Integraci\u00f3n de sensores y adquisici\u00f3n de datos en tiempo real.  </li> </ul> \ud83d\udcbb Software y equipo <ul> <li>Ignition SCADA (licencia OAT)  </li> <li>Alternativa libre: Node-RED, OpenPLC  </li> </ul> \u2b50 Coordinaci\u00f3n <ul> <li>Mtro. Oliver Ochoa (Electr\u00f3nica / Mecatr\u00f3nica)</li> </ul> \ud83e\uddbe Temas Selectos de Rob\u00f3tica LIIE2113 <p>Cr\u00e9ditos: 6 Horas/semana con acad\u00e9mico: 2 Instalaci\u00f3n: A/L  </p> \ud83d\udccc Descripci\u00f3n <ul> <li>T\u00f3picos avanzados: visi\u00f3n por computadora, AI en rob\u00f3tica.  </li> <li>Proyectos experimentales con plataformas m\u00f3viles y manipuladores.  </li> </ul> \ud83d\udcbb Software y equipo <ul> <li>MATLAB &amp; Simulink (licencia OAT)  </li> <li>Alternativa libre: OpenCV, ROS2/Gazebo  </li> </ul> \u2b50 Coordinaci\u00f3n <ul> <li>Mtro. Oliver Ochoa (Electr\u00f3nica / Mecatr\u00f3nica)</li> </ul> \u2699\ufe0f T\u00f3picos Avanzados de Automatizaci\u00f3n LIIE2114 <p>Cr\u00e9ditos: 6 Horas/semana con acad\u00e9mico: 2 Instalaci\u00f3n: A  </p> \ud83d\udccc Descripci\u00f3n <ul> <li>Sistemas flexibles de manufactura y rob\u00f3tica colaborativa.  </li> <li>Arquitecturas IIoT y digital twins.  </li> </ul> \ud83d\udcbb Software y equipo <ul> <li>Siemens NX / TIA Portal (licencia OAT)  </li> <li>Alternativa libre: Factory I/O, OPC UA simulators  </li> </ul> \u2b50 Coordinaci\u00f3n <ul> <li>Mtro. Oliver Ochoa (Electr\u00f3nica / Mecatr\u00f3nica)</li> </ul> \ud83d\udcbc T\u00f3picos de Ingenier\u00eda de Negocios LIIN2110 <p>Cr\u00e9ditos: 6 Horas/semana con acad\u00e9mico: 2 Instalaci\u00f3n: A  </p> \ud83d\udccc Descripci\u00f3n <ul> <li>Modelos de negocio, an\u00e1lisis de mercados y finanzas.  </li> <li>Desarrollo de plan de negocio y casos de estudio.  </li> </ul> \ud83d\udcbb Software y equipo <ul> <li>Power BI y Excel (Office 365, licencia OAT)  </li> <li>Alternativa libre: Google Sheets, OpenRefine  </li> </ul> \u2b50 Coordinaci\u00f3n <ul> <li>Dra. Yvonne Montaudon (Negocios)</li> </ul> \ud83d\ude9a T\u00f3picos de Ingenier\u00eda en Log\u00edstica LIIL2102 <p>Cr\u00e9ditos: 6 Horas/semana con acad\u00e9mico: 2 Instalaci\u00f3n: A  </p> \ud83d\udccc Descripci\u00f3n <ul> <li>Gesti\u00f3n de cadenas de suministro y operaciones log\u00edsticas.  </li> <li>Uso de m\u00e9todos de optimizaci\u00f3n y simulaci\u00f3n de flujos.  </li> </ul> \ud83d\udcbb Software y equipo <ul> <li>Microsoft Excel (Office 365, licencia OAT)  </li> <li>Alternativa libre: R (packages dplyr, ggplot2)  </li> </ul> \u2b50 Coordinaci\u00f3n <ul> <li>Mtro. Victor Hernandez (Industrial y Logistica)</li> </ul> \ud83c\udfed T\u00f3picos de Ingenier\u00eda Industrial LIII2106 <p>Cr\u00e9ditos: 6 Horas/semana con acad\u00e9mico: 2 Instalaci\u00f3n: A  </p> \ud83d\udccc Descripci\u00f3n <ul> <li>Ingenier\u00eda de procesos, mejora continua y six sigma.  </li> <li>Estudios de tiempo y m\u00e9todos, ergonom\u00eda.  </li> </ul> \ud83d\udcbb Software y equipo <ul> <li>Minitab (licencia OAT)  </li> <li>Alternativa libre: FreeFEM, FreeCAD  </li> </ul> \u2b50 Coordinaci\u00f3n <ul> <li>Mtro. Victor Hernandez (Industrial y Logistica)</li> </ul> \ud83d\udcbe T\u00f3picos en Gesti\u00f3n de la Informaci\u00f3n LIIS2103 <p>Cr\u00e9ditos: 6 Horas/semana con acad\u00e9mico: 2 Instalaci\u00f3n: A  </p> \ud83d\udccc Descripci\u00f3n <ul> <li>Bases de datos relacionales, big data y miner\u00eda de datos.  </li> <li>Seguridad y privacidad de la informaci\u00f3n.  </li> </ul> \ud83d\udcbb Software y equipo <ul> <li>Microsoft SQL Server (licencia OAT)  </li> <li>Alternativa libre: MySQL, PostgreSQL  </li> </ul> \u2b50 Coordinaci\u00f3n <ul> <li>Dr. Antonio Ben\u00edtez (Sistemas Computacionales)</li> </ul> \ud83d\udd27 T\u00f3picos en Gesti\u00f3n de Tecnolog\u00eda LIII2107 <p>Cr\u00e9ditos: 6 Horas/semana con acad\u00e9mico: 2 Instalaci\u00f3n: A  </p> \ud83d\udccc Descripci\u00f3n <ul> <li>Innovaci\u00f3n tecnol\u00f3gica, transferencia de tecnolog\u00eda.  </li> <li>Gesti\u00f3n de proyectos y propiedad intelectual.  </li> </ul> \ud83d\udcbb Software y equipo <ul> <li>Microsoft Project (Office 365, licencia OAT)  </li> <li>Alternativa libre: OpenProject  </li> </ul> \u2b50 Coordinaci\u00f3n <ul> <li>Mtro. Victor Hernandez (Industrial y Logistica)</li> </ul>"}, {"location": "Recursos_Carrera/cer/", "title": "Consejo de Estudiantes de Representantes (CER)", "text": "<p>Son el enlace entre los estudiantes de una licenciatura y las distintas \u00e1reas de la Universidad. Se organizan de manera voluntaria para representar los intereses de su licenciatura, proponer, gestionar y organizar actividades para contribuir al crecimiento de sus programas acad\u00e9micos y de la comunidad Universitaria. Su gesti\u00f3n dura un a\u00f1o y son elegidos mediante procesos de participaci\u00f3n democr\u00e1ticos.</p>"}, {"location": "Recursos_Carrera/cer/#redes-del-consejo", "title": "\ud83d\udce3 Redes del Consejo", "text": "<ul> <li> @cer_ibero_puebla</li> </ul>"}, {"location": "Recursos_Carrera/cer/#miembros", "title": "\ud83d\udc65 Miembros", "text": "<p>Angel Ivan Dominguez Cruz \u2014 Presidente</p> <p> <p>Carrera: Ingenier\u00eda Mecatr\u00f3nica</p> <p>Tel: +52 222 831 8448</p> <p>Correo: angel.dominguez@iberopuebla.mx</p> </p> <p>Danna Paola Garcia Sanchez del Villar \u2014 Tesorera</p> <p> <p>Carrera: Ingenier\u00eda Mecatr\u00f3nica</p> <p>Tel: +52 1 222 112 6972</p> <p>Correo: danna.garcia@iberopuebla.mx</p> </p> <p>Leonardo Zamora Hernandez \u2014 Secretario</p> <p> <p>Carrera: Ingenier\u00eda Mecatr\u00f3nica</p> <p>Correo: leonardo.zamora@iberopuebla.mx</p> </p> <p>Guillermo Michel Gonzalez \u2014 Mesa de trabajo</p> <p> <p>Carrera: Ingenier\u00eda Electr\u00f3nica</p> <p>Correo: guillermo.michel@iberopuebla.mx</p> </p> <p>Jose Emmanuel del Villar Soto de Garcia\u2014 Mesa de trabajo</p> <p> <p>Carrera: Ingenier\u00eda Mecatr\u00f3nica</p> <p>Correo: jose.emmanuel@iberopuebla.mx</p> </p> <p>Selene Roman Celis \u2014 Mesa de trabajo</p> <p> <p>Carrera: Ingenier\u00eda Mecatr\u00f3nica</p> <p>Correo: selene.roman@iberopuebla.mx</p> </p> <p>Oscar Hernandez Gonzalez \u2014 Mesa de trabajo</p> <p> <p>Carrera: Ingenier\u00eda Mecatr\u00f3nica</p> <p>Correo: oscar.hernandez.gonzalez@iberopuebla.mx</p> </p> <p>Brian Carl Simpson y Reyes \u2014 Mesa de trabajo</p> <p> <p>Carrera: Ingenier\u00eda Mecatr\u00f3nica</p> <p>Correo: brian.simpson@iberopuebla.mx</p> </p> <p>Jose Pablo Hernandez Alonso \u2014 Mesa de trabajo</p> <p> <p>Carrera: Ingenier\u00eda Mecatr\u00f3nica</p> <p>Correo: josepablo.hernandez@iberopuebla.mx</p> </p> <p>Carlos Gutierrez Martinez \u2014 Mesa de trabajo</p> <p> <p>Carrera: Ingenier\u00eda Mecatr\u00f3nica</p> <p>Correo: carlos.gutierrez.martinez@iberopuebla.mx</p> </p> <p>Joseph Alavez Jaimes \u2014 Mesa de trabajo</p> <p> <p>Carrera: Ingenier\u00eda Mecatr\u00f3nica</p> <p>Correo: joseph.alavez@iberopuebla.mx</p> </p>"}, {"location": "Recursos_Carrera/cer/#eventos", "title": "\ud83c\udf89 Eventos", "text": ""}, {"location": "Recursos_Carrera/intercambios_mecatronica_electronica/", "title": "\ud83c\udf0d Intercambios Acad\u00e9micos \u2014 Mecatr\u00f3nica y Electr\u00f3nica", "text": "<p>Ampl\u00eda tus horizontes acad\u00e9micos, conoce nuevas culturas y fortalece tus competencias t\u00e9cnicas en universidades de todo el mundo.</p> <p>Ver Universidades Disponibles</p>"}, {"location": "Recursos_Carrera/intercambios_mecatronica_electronica/#introduccion", "title": "Introducci\u00f3n", "text": "<p>Los intercambios acad\u00e9micos son una oportunidad \u00fanica para complementar tu formaci\u00f3n profesional, conocer nuevas culturas y desarrollar habilidades que te preparar\u00e1n para un mundo globalizado. En Mecatr\u00f3nica y Electr\u00f3nica, esta experiencia puede brindarte acceso a laboratorios especializados, proyectos internacionales y redes de colaboraci\u00f3n.</p> <p>Modalidades disponibles:</p> <ul> <li>Intercambio Internacional (convenios bilaterales).</li> <li>Intercambio Nacional (universidades en M\u00e9xico).</li> <li>Magis Exchange (programa de red jesuita internacional).</li> <li>Movilidad Libre (acuerdo autogestionado).</li> </ul>"}, {"location": "Recursos_Carrera/intercambios_mecatronica_electronica/#requisitos-generales", "title": "Requisitos Generales", "text": "Requisito Detalle Promedio m\u00ednimo 8.5 Avance m\u00ednimo en cr\u00e9ditos ~50% de la carrera Nivel de idioma TOEFL, IELTS, DELF u otros Equivalencia de materias Validada con la coordinaci\u00f3n acad\u00e9mica Documentaci\u00f3n b\u00e1sica Pasaporte, comprobante de idioma, carta de motivos"}, {"location": "Recursos_Carrera/intercambios_mecatronica_electronica/#pasos-para-aplicar", "title": "Pasos para aplicar", "text": "<ol> <li>Explora opciones \u2192 Revisa la lista de universidades.</li> <li>Consulta a tu coordinaci\u00f3n \u2192 Valida equivalencias de materias.</li> <li>Prepara requisitos \u2192 Idioma, promedio y documentaci\u00f3n.</li> <li>Post\u00falate \u2192 Con Intercambios IBERO Puebla (Oficina F-203, intercambios@iberopuebla.mx).</li> <li>Aceptaci\u00f3n y tr\u00e1mites \u2192 Carta de aceptaci\u00f3n, visa (si aplica) y seguros.</li> </ol>"}, {"location": "Recursos_Carrera/intercambios_mecatronica_electronica/#universidades", "title": "Universidades Convenio recomendadas para Mecatr\u00f3nica y Electr\u00f3nica", "text": "\ud83c\udde6\ud83c\uddf7 Argentina\ud83c\udde7\ud83c\uddf4 Bolivia\ud83c\udde7\ud83c\uddf7 Brasil\ud83c\udde8\ud83c\uddf4 Colombia\ud83c\uddf8\ud83c\uddfb El Salvador\ud83c\uddec\ud83c\uddf9 Guatemala\ud83c\uddf5\ud83c\uddea Per\u00fa\ud83c\uddfa\ud83c\uddfe Uruguay\ud83c\uddfb\ud83c\uddea Venezuela\ud83c\uddfa\ud83c\uddf8 Estados Unidos\ud83c\udde9\ud83c\uddea Alemania\ud83c\udde7\ud83c\uddea B\u00e9lgica\ud83c\uddec\ud83c\udde7 Inglaterra\ud83c\uddea\ud83c\uddf8 Espa\u00f1a <ul> <li>Universidad Cat\u00f3lica de Salta, Espa\u00f1ol (sin certificado)</li> <li>Universidad Cat\u00f3lica de C\u00f3rdoba, Espa\u00f1ol (sin certificado)</li> <li>Universidad Nacional de Cuyo, Espa\u00f1ol (sin certificado)</li> </ul> <ul> <li>Universidad Privada Franz Tamayo, Espa\u00f1ol (sin certificado)</li> </ul> <ul> <li>Centro Universitario da FEI, Portugu\u00e9s (sin certificado)</li> <li>Universidad Cat\u00f3lica de Pernambuco, Portugu\u00e9s (sin certificado)</li> <li>Universidade do Vale do Rio dos Sinos (UNISINOS), Portugu\u00e9s (sin certificado)</li> </ul> <ul> <li>Pontificia Universidad Javeriana (Cali), Espa\u00f1ol (sin certificado)</li> <li>Pontificia Universidad Javeriana (Bogot\u00e1), Espa\u00f1ol (sin certificado)</li> <li>Corporaci\u00f3n Minuto de Dios \u2013 Uniminuto, Espa\u00f1ol (sin certificado)</li> <li>Universidad Santo Tom\u00e1s, Espa\u00f1ol (sin certificado)</li> </ul> <ul> <li>Universidad Centroamericana 'Jos\u00e9 Sime\u00f3n Ca\u00f1as', Espa\u00f1ol (sin certificado)</li> </ul> <ul> <li>Universidad Rafael Land\u00edvar, Espa\u00f1ol (sin certificado)</li> </ul> <ul> <li>Universidad del Pac\u00edfico, Espa\u00f1ol (sin certificado)</li> <li>Universidad Antonio Ruiz de Montoya, Espa\u00f1ol (sin certificado)</li> </ul> <ul> <li>Universidad Cat\u00f3lica del Uruguay, Espa\u00f1ol (sin certificado)</li> </ul> <ul> <li>Universidad Cat\u00f3lica Andr\u00e9s Bello, Espa\u00f1ol (sin certificado)</li> <li>Instituto Universitario Jes\u00fas Obrero, Espa\u00f1ol (sin certificado)</li> </ul> <ul> <li>University of Scranton, Ingl\u00e9s | TOEFL iBT 90</li> <li>University of San Francisco, Ingl\u00e9s | TOEFL iBT 90</li> </ul> <ul> <li>Hochschule Bremen (HSB), Ingl\u00e9s B2* o Alem\u00e1n B1.2</li> <li>THWS \u2013 Campus Schweinfurt, Ingl\u00e9s B2* o Alem\u00e1n B2</li> <li>Hochschule Bielefeld (HSBI), Ingl\u00e9s B2</li> </ul> <ul> <li>Haute \u00c9cole de la Province de Li\u00e8ge (HEPL), Ingl\u00e9s B2* (oto\u00f1o) y/o Franc\u00e9s DELF B2</li> </ul> <ul> <li>University of Hull, Ingl\u00e9s CAE A o IELTS 6</li> </ul> <ul> <li>IQS \u2013 Barcelona, Ingl\u00e9s TOEFL ITP 550</li> <li>Universidad de Deusto \u2013 Facultad de Ingenier\u00eda, Espa\u00f1ol (sin certificado)</li> <li>Universidad de Nebrija, Espa\u00f1ol (sin certificado)</li> <li>Universidad de Valladolid, Espa\u00f1ol (sin certificado)</li> <li>Universidad Loyola, Espa\u00f1ol (sin certificado)</li> <li>Universidad Pontificia Comillas, Ingl\u00e9s B2* y/o Espa\u00f1ol (sin certificado)</li> <li>Universidad Polit\u00e9cnica de Madrid (UPM), Espa\u00f1ol (sin certificado)</li> <li>Mondragon Unibertsitatea, Espa\u00f1ol (sin certificado)</li> </ul>"}, {"location": "Recursos_Carrera/intercambios_mecatronica_electronica/#magis-exchange", "title": "Magis Exchange", "text": "<p>Magis Exchange es un programa de movilidad internacional exclusivo de la red de universidades jesuitas, con oportunidades acad\u00e9micas y de desarrollo social en m\u00e1s de 20 pa\u00edses. Incluye estancias que combinan formaci\u00f3n acad\u00e9mica, aprendizaje-servicio y inmersi\u00f3n cultural.</p> <p>Conoce m\u00e1s sobre Magis Exchange</p>"}, {"location": "Recursos_Carrera/intercambios_mecatronica_electronica/#mapa-iajuuniversidades-jesuitas-internacionales", "title": "Mapa IAJU(Universidades Jesuitas Internacionales)", "text": "<p>\ud83d\udcc4 View PDF</p>"}, {"location": "Recursos_Carrera/intercambios_mecatronica_electronica/#tips-para-estudiantes-de-mecatronicaelectronica", "title": "Tips para estudiantes de Mecatr\u00f3nica/Electr\u00f3nica", "text": "<ul> <li>Prioriza universidades con laboratorios de rob\u00f3tica, automatizaci\u00f3n o telecomunicaciones.</li> <li>Valida con tiempo la compatibilidad de materias t\u00e9cnicas.</li> <li>Aprovecha para cursar optativas o laboratorios especiales.</li> <li>Considera el idioma del pa\u00eds para tu vida diaria, aunque las clases sean en ingl\u00e9s.</li> </ul>"}, {"location": "Recursos_Carrera/intercambios_mecatronica_electronica/#contacto", "title": "Contacto", "text": "<ul> <li>Correo: intercambios@iberopuebla.mx</li> <li>Tel\u00e9fono: (222) 372 3000 Ext. 13132</li> <li>Oficina: F-203</li> <li>Horario: L-V 8:00\u201314:00 / 15:00\u201317:00</li> </ul>"}, {"location": "clases/Domotica/Domo_1/", "title": "Cap\u00edtulo 1 \u00b7 Fundamentos de Electr\u00f3nica para Rob\u00f3tica y Dom\u00f3tica", "text": "<p>Objetivo: Comprender los conceptos base de electricidad y electr\u00f3nica (V, I, R, P, AC/DC), conocer componentes y equipos de medici\u00f3n, evitar errores t\u00edpicos de montaje y construir un primer circuito funcional con el temporizador 555.</p>"}, {"location": "clases/Domotica/Domo_1/#1-por-que-electronica-en-roboticadomotica", "title": "1. \u00bfPor qu\u00e9 electr\u00f3nica en rob\u00f3tica/dom\u00f3tica?", "text": "<p>La rob\u00f3tica y la dom\u00f3tica integran sensores, actuadores y controladores. La electr\u00f3nica es el lenguaje f\u00edsico que permite que la informaci\u00f3n (se\u00f1ales) se convierta en acciones (movimiento, luz, sonido, comunicaci\u00f3n). Dominar los fundamentos te permitir\u00e1 diagnosticar fallas y construir soluciones fiables.</p> <p></p>"}, {"location": "clases/Domotica/Domo_1/#2-conceptos-electricos-esenciales", "title": "2. Conceptos el\u00e9ctricos esenciales", "text": ""}, {"location": "clases/Domotica/Domo_1/#21-voltaje-v", "title": "2.1 Voltaje (V)", "text": "<ul> <li>Definici\u00f3n: Diferencia de potencial el\u00e9ctrico. Es la \u201cpresi\u00f3n\u201d que empuja a los electrones.</li> <li>Unidad: Volt (V).</li> <li>Analog\u00eda hidr\u00e1ulica: Presi\u00f3n del agua en una tuber\u00eda.</li> </ul>"}, {"location": "clases/Domotica/Domo_1/#22-corriente-i", "title": "2.2 Corriente (I)", "text": "<ul> <li>Definici\u00f3n: Flujo de carga por unidad de tiempo.</li> <li>Unidad: Ampere (A).</li> <li>Analog\u00eda hidr\u00e1ulica: Caudal de agua (litros/segundo) en una tuber\u00eda.</li> </ul>"}, {"location": "clases/Domotica/Domo_1/#23-resistencia-r", "title": "2.3 Resistencia (R)", "text": "<ul> <li>Definici\u00f3n: Oposici\u00f3n al paso de la corriente.</li> <li>Unidad: Ohm (\u03a9).</li> <li>Ejemplo: Un resistor \u201cestrecha\u201d la tuber\u00eda, limitando el caudal (corriente).</li> </ul>"}, {"location": "clases/Domotica/Domo_1/#24-ley-de-ohm", "title": "2.4 Ley de Ohm", "text": "\\[ V = I \\cdot R \\quad\\Rightarrow\\quad I = \\frac{V}{R},\\quad R = \\frac{V}{I} \\] <p>Ejemplo num\u00e9rico: LED rojo (\u22482.0 V) con fuente de 5 V a 10 mA deseados:</p> \\[ R = \\frac{5 - 2.0}{0.010} = 300~\\Omega \\;\\; \\Rightarrow \\;\\; \\text{usar } 330~\\Omega \\text{ (comercial)} \\]"}, {"location": "clases/Domotica/Domo_1/#25-potencia-p", "title": "2.5 Potencia (P)", "text": "<ul> <li>Definici\u00f3n: Tasa de transferencia de energ\u00eda.</li> <li>F\u00f3rmulas:</li> </ul> \\[ P = V \\cdot I = I^2 \\cdot R = \\frac{V^2}{R} \\] <ul> <li>Unidad: Watt (W).</li> <li>Implicaci\u00f3n pr\u00e1ctica: Verifica la potencia del resistor (\u00bc W, \u00bd W, etc.) para evitar sobrecalentamientos.</li> </ul> <p>RESUMEN R\u00c1PIDO:</p> <p></p>"}, {"location": "clases/Domotica/Domo_1/#26-corriente-continua-dc-vs-alterna-ac", "title": "2.6 Corriente continua (DC) vs. alterna (AC)", "text": "<ul> <li>DC: La polaridad no cambia con el tiempo (bater\u00edas, fuentes reguladas 5 V/12 V).<ul> <li>Las bater\u00edas, pilas y paneles solares generan corriente continua (DC) porque los electrones fluyen naturalmente en un solo sentido.</li> <li>Problema: si quieres mandar energ\u00eda a muchos kil\u00f3metros, las p\u00e9rdidas son grandes.</li> </ul> </li> <li>AC: La polaridad cambia peri\u00f3dicamente (red el\u00e9ctrica; 60 Hz en M\u00e9xico).</li> <li>Cu\u00e1ndo usar:</li> <li>DC: Electr\u00f3nica, microcontroladores, sensores, la mayor\u00eda de robots.</li> <li>AC: Alimentaci\u00f3n de alta potencia y larga distancia (\u26a0\ufe0f No trabajar AC de red en protoboard).</li> </ul>"}, {"location": "clases/Domotica/Domo_1/#3-que-es-un-circuito", "title": "3. \u00bfQu\u00e9 es un circuito?", "text": "<p>Un circuito es un camino cerrado para que la corriente fluya desde la fuente (V+) y regrese a su referencia (GND). Si el camino no se cierra, no hay corriente; si hay un atajo directo V+\u2192GND, hay un corto.</p> <ul> <li>Circuito en serie: La corriente es la misma por todos los elementos.</li> <li>Circuito en paralelo: El voltaje es el mismo en todas las ramas.</li> </ul>"}, {"location": "clases/Domotica/Domo_1/#4-errores-comunes-y-como-evitarlos", "title": "4. Errores comunes (y c\u00f3mo evitarlos)", "text": "<ol> <li>Cortos: Puentes directos entre V+ y GND por cables mal puestos \u2192 usa el mult\u00edmetro en continuidad antes de energizar.</li> </ol> <ol> <li>Circuito abierto: Falta cerrar el lazo (olvidar la conexi\u00f3n a GND com\u00fan).</li> </ol> <ol> <li>LED sin resistor: El LED se quema \u2192 siempre limita corriente con un resistor calculado.</li> </ol> <ol> <li>Polaridad invertida: Diodos/LEDs/capacitores electrol\u00edticos/IC con orientaci\u00f3n incorrecta \u2192 ubica pin 1 y marcas de c\u00e1todo/anodo.</li> <li>Protoboard mal usada: Rails de alimentaci\u00f3n rotos a mitad o no comunes \u2192 verifica continuidad de rieles.</li> <li>No compartir tierra: Varios m\u00f3dulos o fuentes sin GND com\u00fan \u2192 el sistema \u201cno se ve\u201d.</li> <li>Resistencia mal elegida: Confundir k\u03a9 con \u03a9 \u2192 revisa el c\u00f3digo de colores o el mult\u00edmetro.</li> <li>Medir corriente como voltaje: Colocar el mult\u00edmetro en A en paralelo causa cortos. Para corriente: en serie y con cable al borne de A.</li> </ol>"}, {"location": "clases/Domotica/Domo_1/#5-componentes-basicos", "title": "5. Componentes b\u00e1sicos", "text": ""}, {"location": "clases/Domotica/Domo_1/#51-protoboard-breadboard", "title": "5.1 Protoboard (breadboard)", "text": "<ul> <li>Permite prototipado sin soldadura.</li> <li>Conexiones internas: Columnas/filas internas y rieles de V+/GND (a veces interrumpidos).</li> <li>Buenas pr\u00e1cticas: Cables cortos, colores consistentes (rojo=V+, negro=GND).</li> </ul>"}, {"location": "clases/Domotica/Domo_1/#52-resistores", "title": "5.2 Resistores", "text": "<ul> <li>Limitan corriente, fijan tensiones, forman redes temporizadoras.</li> <li>C\u00f3digo de colores y tolerancia (\u00b11 %, \u00b15 %, etc.).</li> <li>Potencia: \u00bc W t\u00edpico en prototipos.</li> </ul> <p>Calculadora de resistencias</p>"}, {"location": "clases/Domotica/Domo_1/#53-leds-diodos-emisores-de-luz", "title": "5.3 LEDs (diodos emisores de luz)", "text": "<ul> <li>Polaridad: \u00c1nodo (+) y c\u00e1todo (\u2212, patita m\u00e1s corta o lado plano).</li> <li>Vf t\u00edpica: Rojo (1.8\u20132.2 V), verde/azul/blanco (2.0\u20133.3 V).</li> <li>Siempre con resistor en serie.</li> </ul>"}, {"location": "clases/Domotica/Domo_1/#54-capacitores", "title": "5.4 Capacitores", "text": "<ul> <li>Funci\u00f3n: Almacenan energ\u00eda. Filtrado, temporizaci\u00f3n, acoplo.</li> <li>Tipos: Cer\u00e1micos (no polarizados), electrol\u00edticos (polarizados).</li> <li>Par\u00e1metros: Capacitancia (\u00b5F, nF), tensi\u00f3n m\u00e1xima (Vmax). Nunca exceder Vmax.</li> </ul>"}, {"location": "clases/Domotica/Domo_1/#55-circuitos-integrados-ic", "title": "5.5 Circuitos integrados (IC)", "text": "<ul> <li>Paquetes DIP/SOIC/QFN, etc. Pin 1 marcado con punto o muesca.</li> <li>Alimentaci\u00f3n: Vcc y GND en pines espec\u00edficos (lee la hoja de datos).</li> </ul>"}, {"location": "clases/Domotica/Domo_1/#56-fuentes-de-energia", "title": "5.6 Fuentes de energ\u00eda", "text": "<ul> <li>Bater\u00edas (9 V, 18650, LiPo\u2014con cuidado).</li> <li>Fuentes de banco reguladas.</li> <li>Convertidores DC-DC (buck/boost).</li> <li>Regla de oro: GND com\u00fan entre todos los m\u00f3dulos.</li> </ul>"}, {"location": "clases/Domotica/Domo_1/#6-equipos-de-medicion", "title": "6. Equipos de medici\u00f3n", "text": ""}, {"location": "clases/Domotica/Domo_1/#61-multimetro-digital-dmm", "title": "6.1 Mult\u00edmetro digital (DMM)", "text": "<ul> <li>Voltaje DC/AC: Medir en paralelo al elemento (configurar V, puntas en V\u03a9 y COM).</li> <li>Corriente DC: Medir en serie (mover punta roja al borne de A/mA, rango adecuado).</li> <li>Resistencia: Medir con circuito desenergizado.</li> <li>Continuidad/diode test: Verifica cortos y orientaci\u00f3n de diodos.</li> </ul> <ol> <li>Pantalla:\u00a0Donde se muestran las lecturas de las mediciones.</li> <li>Dial de selecci\u00f3n:\u00a0Se utiliza para seleccionar el tipo de medici\u00f3n. Las opciones incluyen:<ul> <li>Voltaje de CC (V-)</li> <li>Voltaje de CA (V~)</li> <li>Voltaje de CC (mV-)</li> <li>Continuidad (simbolizada por una onda sonora)</li> <li>Resistencia (\u03a9)</li> <li>Capacitancia (-||-)</li> <li>Probador de diodos (\u2015\u2bc8\u22a2)</li> <li>Corriente continua (A-)</li> <li>Corriente alterna (A~)</li> </ul> </li> <li>Puertos para cables de prueba:<ul> <li>COM (Com\u00fan): Donde se conecta el cable negro.</li> <li>V\u03a9: Se utiliza para voltaje, resistencia y otras opciones sin corriente. El cable rojo se conecta aqu\u00ed para estas funciones.</li> <li>10 A: Se utiliza exclusivamente para mediciones de alta corriente (hasta 10 amperios). El cable rojo se conecta aqu\u00ed para estas funciones.</li> </ul> </li> <li>Cables de prueba:\u00a0rojo para positivo, negro para negativo, se utilizan para conectar el mult\u00edmetro al objeto que se est\u00e1 midiendo.</li> <li>Rango:\u00a0Permite que el mult\u00edmetro seleccione el rango adecuado para la medici\u00f3n. De lo contrario, intenta seleccionar autom\u00e1ticamente el correcto.</li> <li>Bot\u00f3n HOLD:\u00a0Congela la lectura actual en la pantalla para facilitar la visualizaci\u00f3n.</li> <li>Bot\u00f3n Max/Min:\u00a0se utiliza para mantener le\u00eddo el valor m\u00e1ximo o m\u00ednimo.</li> </ol>"}, {"location": "clases/Domotica/Domo_1/#62-osciloscopio", "title": "6.2 Osciloscopio", "text": "<ul> <li>Sonda x1/x10: Usar x10 reduce carga sobre el circuito.</li> <li>Clip de tierra: Conectar a GND del circuito (\u26a0\ufe0f los osciloscopios de banco suelen tener tierra referida a chasis; evita conectar a red AC sin aislamiento).</li> <li>Qu\u00e9 observar: Forma de onda, frecuencia, amplitud, duty cycle.</li> </ul> <ol> <li>Pantalla:\u00a0Muestra las formas de onda. La cuadr\u00edcula muestra el voltaje (vertical) y el tiempo (horizontal).</li> <li>Bot\u00f3n de encendido:\u00a0enciende o apaga el osciloscopio.</li> <li>Entradas de canal (CH1 y CH2):\u00a0Terminales de entrada para conectar se\u00f1ales a medir.</li> <li>Controles verticales:\u00a0Ajusta la escala del voltaje en la pantalla. La opci\u00f3n \"Posici\u00f3n\" mueve las formas de onda verticalmente.</li> <li>Controles horizontales:\u00a0Ajusta la escala de tiempo. La opci\u00f3n \"Posici\u00f3n\" mueve las formas de onda horizontalmente.</li> <li>Controles de disparo:\u00a0Establece las condiciones para el inicio de la captura de forma de onda. El nivel establece el voltaje de disparo.</li> <li>Bot\u00f3n Ejecutar/Detener:\u00a0inicia o detiene la captura de forma de onda.</li> <li>Bot\u00f3n de medici\u00f3n:\u00a0herramientas para medir las caracter\u00edsticas de la forma de onda.</li> <li>Bot\u00f3n del cursor:\u00a0Herramientas para medir caracter\u00edsticas de forma de onda.</li> </ol>"}, {"location": "clases/Domotica/Domo_1/#7-el-temporizador-555", "title": "7. El temporizador 555", "text": ""}, {"location": "clases/Domotica/Domo_1/#71-que-es-el-555", "title": "7.1 \u00bfQu\u00e9 es el 555?", "text": "<p>Un IC cl\u00e1sico con dos comparadores, un flip-flop SR y un transistor de descarga. Permite crear temporizadores y osciladores con muy pocos componentes.</p> <ul> <li>Modos de operaci\u00f3n:</li> <li>Astable: Oscilador libre (parpadeos, PWM simple).</li> <li>Monostable: Pulso \u00fanico temporizado (retardos, anti-rebote).</li> <li>Biestable: Conmutaci\u00f3n tipo flip-flop.</li> </ul>"}, {"location": "clases/Domotica/Domo_1/#72-pinout-del-555-dip-8", "title": "7.2 Pinout del 555 (DIP-8)", "text": "<ol> <li>GND </li> <li>TRIG (disparo, umbral 1/3 Vcc)  </li> <li>OUT (salida)  </li> <li>RESET (activo en bajo; normalmente a Vcc)  </li> <li>CTRL (control; t\u00edpicamente con 10 nF a GND)  </li> <li>THRES (umbral, 2/3 Vcc)  </li> <li>DISCH (descarga del capacitor)  </li> <li>Vcc (alimentaci\u00f3n 5\u201315 V t\u00edpicamente)</li> </ol>"}, {"location": "clases/Domotica/Domo_1/#8-ejercicio-guiado-555-en-astable-led-parpadeante", "title": "8. Ejercicio guiado: 555 en astable (LED parpadeante)", "text": ""}, {"location": "clases/Domotica/Domo_1/#81-objetivo", "title": "8.1 Objetivo", "text": "<p>Construir un oscilador que haga parpadear un LED y medir su frecuencia/duty con mult\u00edmetro (si tiene frecuencia) u osciloscopio.</p> <p></p>"}, {"location": "clases/Domotica/Domo_1/#82-materiales", "title": "8.2 Materiales", "text": "<ul> <li>1 \u00d7 NE555 (DIP-8)</li> <li>1 \u00d7 LED </li> <li>1 \u00d7 Resistor para LED (330 \u03a9 o 470 \u03a9)</li> <li>2 \u00d7 Resistores temporizadores (ver dise\u00f1o)</li> <li>1 \u00d7 Capacitor de temporizaci\u00f3n (ver dise\u00f1o)</li> <li>1 \u00d7 Capacitor 10 nF para pin 5 (CTRL) \u2192 estabilidad</li> <li>Protoboard, cables, fuente 5 V regulada</li> </ul>"}, {"location": "clases/Domotica/Domo_1/#83-diseno-frecuencia-y-ciclo-de-trabajo", "title": "8.3 Dise\u00f1o (frecuencia y ciclo de trabajo)", "text": "<p>Calculadora 555 astable</p>"}, {"location": "clases/Domotica/Domo_1/#84-conexion-paso-a-paso", "title": "8.4 Conexi\u00f3n (paso a paso)", "text": "<ol> <li>Coloca el NE555 en la protoboard, centrado en el canal. Identifica pin 1 (GND) y pin 8 (Vcc) por la muesca/punto.</li> <li>Alimentaci\u00f3n: Pin 8 a +5 V y pin 1 a GND.</li> <li>Reset: Pin 4 a +5 V.</li> <li>Control: Pin 5 a GND mediante 10 nF.</li> <li>Temporizaci\u00f3n:</li> <li>Conecta \\( R_A \\) entre Vcc (5 V) y pin 7 (DISCH).</li> <li>Conecta \\( R_B \\) entre pin 7 (DISCH) y pin 2/6 (TRIG/THRES unidos).</li> <li>Conecta el capacitor C entre pin 2/6 y GND (si es electrol\u00edtico, lado \u2212 a GND).</li> <li>Salida: Pin 3 \u2192 resistor 330 \u03a9 \u2192 LED \u2192 GND (c\u00e1todo a GND).</li> <li>Revisa todo con continuidad antes de energizar.</li> </ol>"}, {"location": "clases/Domotica/Domo_1/#85-lista-de-verificacion-debug", "title": "8.5 Lista de verificaci\u00f3n (debug)", "text": "<ul> <li>[ ] LED est\u00e1 al rev\u00e9s.  </li> <li>[ ] Falta resistor en LED.  </li> <li>[ ] Capacitor electrol\u00edtico invertido.  </li> <li>[ ] Pin 4 (RESET) flotante (debe ir a Vcc).  </li> <li>[ ] Falta uni\u00f3n 2\u20136 (TRIG y THRES).  </li> <li>[ ] \\( R_A \\) o \\( R_B \\) con valor equivocado (\u03a9 vs k\u03a9).  </li> <li>[ ] Rieles de la protoboard no est\u00e1n realmente conectados.  </li> <li>[ ] No hay GND com\u00fan.</li> </ul>"}, {"location": "clases/Domotica/Domo_1/#9-seguridad-basica", "title": "9. Seguridad b\u00e1sica", "text": "<ul> <li>Nunca conectes AC de red a protoboard.  </li> <li>Desenergiza antes de cambiar conexiones.  </li> <li>Verifica continuidad para evitar cortos.  </li> <li>En osciloscopios de banco, el clip de tierra suele ir a tierra f\u00edsica: evita medir directamente la red el\u00e9ctrica.</li> </ul>"}, {"location": "clases/Domotica/Domo_1/#glosario-rapido", "title": "Glosario r\u00e1pido", "text": "<ul> <li>V (voltaje): \u201cpresi\u00f3n\u201d el\u00e9ctrica.  </li> <li>I (corriente): flujo de carga.  </li> <li>R (resistencia): oposici\u00f3n al flujo.  </li> <li>P (potencia): energ\u00eda por unidad de tiempo.  </li> <li>DC/AC: corriente continua/alterna.  </li> <li>555: temporizador/oscila\u00addor vers\u00e1til.</li> </ul>"}, {"location": "clases/Domotica/Domo_2/", "title": "Cap\u00edtulo 2 \u00b7 Historia y Evoluci\u00f3n de la Rob\u00f3tica y su Relaci\u00f3n con la Dom\u00f3tica", "text": ""}, {"location": "clases/Domotica/Domo_2/#1-primeros-pasos-automatas-y-mecanismos-antiguos", "title": "1. Primeros pasos: aut\u00f3matas y mecanismos antiguos", "text": "<p>La idea de construir m\u00e1quinas que imiten la vida humana o animal es tan antigua como la civilizaci\u00f3n. - En la Grecia cl\u00e1sica, Her\u00f3n de Alejandr\u00eda describi\u00f3 en su libro Automata mecanismos que abr\u00edan puertas o mov\u00edan figuras mediante poleas y vapor. - En el mundo \u00e1rabe medieval, Al-Jazari dise\u00f1\u00f3 relojes de agua y aut\u00f3matas m\u00fasicos en el siglo XIII. - En el Renacimiento europeo, relojeros como Leonardo da Vinci crearon caballeros mec\u00e1nicos con engranajes y resortes.</p> <p></p>"}, {"location": "clases/Domotica/Domo_2/#2-revolucion-industrial-y-robotica-moderna", "title": "2. Revoluci\u00f3n industrial y rob\u00f3tica moderna", "text": "<p>Con la llegada de la electricidad y los motores, los aut\u00f3matas dieron paso a la automatizaci\u00f3n industrial: - Siglo XVIII\u2013XIX: Tejedores mec\u00e1nicos como el telar de Jacquard (1801), que usaba tarjetas perforadas \u2192 precursor de la programaci\u00f3n. - Siglo XX: Primeros robots industriales:   - Unimate (1961): brazo rob\u00f3tico para General Motors.   - Uso en soldadura y manejo de piezas repetitivas. - D\u00e9cadas siguientes: Jap\u00f3n lidera la producci\u00f3n con robots en f\u00e1bricas de autom\u00f3viles.</p>"}, {"location": "clases/Domotica/Domo_2/#3-robots-de-servicio-y-colaborativos", "title": "3. Robots de servicio y colaborativos", "text": "<ul> <li>A\u00f1os 80\u201390: Robots empiezan a salir de la industria hacia la investigaci\u00f3n y la educaci\u00f3n.  </li> <li>Siglo XXI: Surge el concepto de cobots (robots colaborativos), dise\u00f1ados para trabajar junto a humanos sin jaulas de seguridad.  </li> <li>Ejemplos: Universal Robots (UR), Baxter, Franka Emika.  </li> <li>En paralelo, nacen los robots de servicio: aspiradoras aut\u00f3nomas, drones de consumo, robots de asistencia m\u00e9dica.</li> </ul>"}, {"location": "clases/Domotica/Domo_2/#4-el-puente-hacia-la-domotica", "title": "4. El puente hacia la dom\u00f3tica", "text": "<p>La dom\u00f3tica busca automatizar el entorno dom\u00e9stico: iluminaci\u00f3n, seguridad, clima, entretenimiento. La rob\u00f3tica ampl\u00eda esas capacidades al incorporar movimiento y manipulaci\u00f3n f\u00edsica.</p>"}, {"location": "clases/Domotica/Domo_2/#ejemplos-de-integracion", "title": "Ejemplos de integraci\u00f3n:", "text": "<ul> <li>Robots m\u00f3viles (Roomba, aspiradoras con mapeo l\u00e1ser).  </li> <li>Manipuladores en casa (brazos de cocina, asistentes para movilidad reducida).  </li> <li>Robots sociales (asistentes con voz, robots de compa\u00f1\u00eda para adultos mayores).  </li> <li>Sistemas distribuidos (sensores de movimiento, cerraduras inteligentes, control centralizado).  </li> </ul>"}, {"location": "clases/Domotica/Domo_2/#5-tendencias-actuales", "title": "5. Tendencias actuales", "text": "<ol> <li>Internet de las Cosas (IoT): Conexi\u00f3n de electrodom\u00e9sticos y robots a la nube.  </li> <li>Inteligencia artificial: Reconocimiento de voz, visi\u00f3n computacional, aprendizaje de h\u00e1bitos.  </li> <li>Energ\u00eda eficiente: Dom\u00f3tica integrada con paneles solares y almacenamiento en bater\u00edas (DC \u2192 AC inversores).  </li> <li>Robots sociales y de asistencia: Envejecimiento poblacional impulsa la rob\u00f3tica en el hogar.  </li> <li>Interoperabilidad: Protocolos como Matter, Zigbee y Wi-Fi permiten que robots y dispositivos de distintas marcas trabajen juntos.</li> </ol>"}, {"location": "clases/Domotica/Domo_2/#6-actividad-de-reflexion", "title": "6. Actividad de reflexi\u00f3n", "text": "<p>Pregunta: Piensa en tu casa o espacio cotidiano: \u00bfqu\u00e9 tarea rob\u00f3tica o dom\u00f3tica te gustar\u00eda automatizar y por qu\u00e9?  </p>"}, {"location": "clases/FabAcademy/info/", "title": "Informacion general", "text": "Par\u00e1metros Costo FAB (USD): Costo por cr\u00e9dito (MXN): Cr\u00e9ditos a revalidar: Beca (%): Tipo de cambio Usar tipo de cambio en tiempo real Margen sobre FX en tiempo real (%) Tipo de cambio manual (USD\u2192MXN) Actualizar tipo de cambio Se usa <code>exchangerate.host</code> si est\u00e1 disponible. Tipo de cambio aplicado (con margen): \u2014 Resultados Concepto Monto Costo FAB \u2014 / \u2014 Subtotal cr\u00e9ditos (antes de beca) \u2014 Total tras beca \u2014 Pago a IBERO (25%) \u2014 Descuento para pagar FAB (75%) \u2014 Diferencia (descuento \u2212 costo FAB) \u2014 <p>\u2014</p> <p>       F\u00f3rmulas: <code>post_beca = (cr\u00e9ditos \u00d7 costo_cr\u00e9dito) \u00d7 (1 \u2212 beca%)</code> <code>IBERO = post_beca \u00d7 0.25</code>\u00a0\u00a0\u00b7\u00a0\u00a0<code>Descuento FAB = post_beca \u00d7 0.75</code> <code>FAB_MXN = FAB_USD \u00d7 (TC \u00d7 (1 + margen%))</code> <code>Diferencia = Descuento FAB \u2212 FAB_MXN</code> </p>"}, {"location": "clases/introduccion-mecatronica/tema1/", "title": "Electronica 101", "text": ""}, {"location": "clases/introduccion-mecatronica/tema1/#introduccion-a-la-electronica", "title": "Introducci\u00f3n a la Electr\u00f3nica", "text": "<p>La electr\u00f3nica es una rama de la f\u00edsica y la ingenier\u00eda que se ocupa del estudio y la aplicaci\u00f3n de dispositivos y sistemas que utilizan corriente el\u00e9ctrica. En este curso, exploraremos los conceptos b\u00e1sicos de la electr\u00f3nica, incluyendo componentes, circuitos y sistemas.</p>"}, {"location": "clases/introduccion-mecatronica/tema1/#componentes-electronicos", "title": "Componentes Electr\u00f3nicos", "text": "<p>Los componentes electr\u00f3nicos son los bloques de construcci\u00f3n de los circuitos. Algunos de los componentes m\u00e1s comunes incluyen:</p> <ul> <li>Resistencias: Limitan el flujo de corriente en un circuito.</li> <li>Capacitores: Almacenan energ\u00eda en forma de campo el\u00e9ctrico.</li> <li>Diodos: Permiten el flujo de corriente en una sola direcci\u00f3n.</li> <li>Transistores: Act\u00faan como interruptores o amplificadores de se\u00f1al.</li> </ul>"}, {"location": "clases/introduccion-mecatronica/tema1/#ley-de-ohm", "title": "Ley de Ohm", "text": "<p>La Ley de Ohm es fundamental en electr\u00f3nica y establece que la corriente (I) que fluye a trav\u00e9s de un conductor entre dos puntos es directamente proporcional a la tensi\u00f3n (V) entre esos dos puntos e inversamente proporcional a la resistencia (R) del conductor. Se expresa con la f\u00f3rmula:</p> \\[ V = I \\cdot R \\]"}, {"location": "clases/introduccion-mecatronica/tema1/#circuitos-electronicos", "title": "Circuitos Electr\u00f3nicos", "text": "<p>Un circuito electr\u00f3nico es un camino cerrado por el que puede fluir la corriente. Los circuitos pueden ser:</p> <ul> <li>Circuitos en serie: Los componentes est\u00e1n conectados uno tras otro.</li> <li>Circuitos en paralelo: Los componentes est\u00e1n conectados en ramas separadas.</li> </ul>"}, {"location": "clases/introduccion-mecatronica/tema1/#herramientas-y-equipos", "title": "Herramientas y Equipos", "text": "<p>Para trabajar en electr\u00f3nica, necesitar\u00e1s algunas herramientas y equipos b\u00e1sicos, como:</p> <ul> <li>Mult\u00edmetro</li> <li>Osciloscopio</li> <li>Fuente de alimentaci\u00f3n</li> <li>Protoboard</li> </ul>"}, {"location": "clases/introduccion-mecatronica/tema1/#conclusion", "title": "Conclusi\u00f3n", "text": "<p>La electr\u00f3nica es un campo fascinante y en constante evoluci\u00f3n. A medida que avancemos en este curso, profundizaremos en cada uno de estos temas y aprenderemos a dise\u00f1ar y construir nuestros propios circuitos electr\u00f3nicos.</p>"}, {"location": "clases/introduccion-mecatronica/tema2/", "title": "MCU 101", "text": "<p>Materiales y software</p> <ul> <li>Tarjeta: ESP32 (ideal ESP32-S3 DevKit).</li> <li>Cable: USB de datos.</li> <li>Breadboard: + jumpers.</li> <li>LED: 1 + 1 resistor 220 \u03a9.</li> <li>Bot\u00f3n: 1 (push button).</li> <li>Resistor: (Opcional) 1 10 k\u03a9 si no usamos pull-up interno.</li> </ul> <p>Software:</p> <ul> <li>Arduino IDE + Paquete de tarjetas ESP32.</li> <li>(Opcional) VS Code + Extensi\u00f3n Arduino.</li> </ul>"}, {"location": "clases/introduccion-mecatronica/tema2/#introduccion-a-los-microcontroladores", "title": "Introducci\u00f3n a los Microcontroladores", "text": "<p>Los microcontroladores (MCU) son peque\u00f1os ordenadores en un solo chip que contienen un procesador, memoria y perif\u00e9ricos de entrada/salida. </p> <p>Ejemplos comunes de microcontroladores incluyen:</p> <ul> <li>Arduino Uno: Basado en el microcontrolador ATmega328P.</li> </ul> <p></p> <ul> <li>ESP32: Un microcontrolador potente con conectividad Wi-Fi y Bluetooth.</li> </ul> <p></p> <ul> <li>Raspberry Pi Pico: Basado en el microcontrolador RP2040.</li> </ul> <p></p> <ul> <li>STM32: Una familia de microcontroladores basados en ARM Cortex-M.</li> </ul> <p></p>"}, {"location": "clases/introduccion-mecatronica/tema2/#ides-y-herramientas", "title": "IDEs y Herramientas", "text": "<p>Un IDE (Integrated Development Environment) es una \u201capp todo-en-uno\u201d para escribir, compilar y cargar programas al microcontrolador. Re\u00fane:</p> <ul> <li>Editor de c\u00f3digo (colores, autocompletado).</li> <li>Compilador y toolchain (traduce C/C++ a binario para ESP32).</li> <li>Build system (bot\u00f3n \u201cCompilar/Subir\u201d, manejo de dependencias).</li> <li>Depuraci\u00f3n (mensajes en consola, a veces depurador paso a paso).</li> <li>Monitor Serial (ver/mandar texto por el puerto del ESP32).</li> <li>Gestor de placas y librer\u00edas (instalar soporte ESP32 y paquetes).</li> </ul> <p>Opciones populares:</p> <ul> <li>Arduino IDE: Muy sencillo, ideal para principiantes. Soporta muchas placas.</li> <li>VS Code + Extensi\u00f3n: M\u00e1s avanzado, con muchas funciones adicionales.<ul> <li>PlatformIO: Extensi\u00f3n para VS Code, potente y flexible, ideal para proyectos complejos.</li> <li>Extensi\u00f3n Arduino: Permite usar VS Code como IDE de Arduino.</li> </ul> </li> <li>Espressif IDE: IDE oficial de Espressif para ESP32, m\u00e1s complejo pero muy completo.</li> </ul>"}, {"location": "clases/introduccion-mecatronica/tema2/#configuracion-del-entorno-de-desarrollo", "title": "Configuraci\u00f3n del Entorno de Desarrollo", "text": "<ol> <li>Instalar Arduino IDE:<ul> <li>Descargar desde arduino.cc.</li> <li>Instalar siguiendo las instrucciones del sitio.</li> </ul> </li> <li> <p>Agregar soporte para ESP32:</p> <ul> <li>Abrir Arduino IDE.</li> <li>dar clic en administrar placas (Herramientas &gt; Placa &gt; Gestor de tarjetas).</li> <li>Buscar \"esp32\" e instalar el paquete de Espressif Systems. </li> </ul> </li> <li> <p>Seleccionar la placa ESP32:</p> <ul> <li>Ir a Herramientas &gt; Placa y seleccionar \"DOIT ESP32 DEVKIT V1\"</li> <li>Configurar el puerto COM correcto (Herramientas &gt; Puerto).</li> </ul> </li> </ol>"}, {"location": "clases/introduccion-mecatronica/tema2/#programacion-basica-en-arduino-ide", "title": "Programaci\u00f3n B\u00e1sica en Arduino IDE", "text": "<p>Funciones principales de control de hardware:</p> <ul> <li><code>void setup(){}</code>: Se ejecuta una vez al inicio. Aqu\u00ed se configuran pines, inicializa librer\u00edas, etc.</li> <li><code>void loop(){}</code>: Se ejecuta repetidamente despu\u00e9s de <code>setup()</code>. Aqu\u00ed va el c\u00f3digo principal.</li> <li><code>pinMode(pin, mode)</code>: Configura un pin como entrada (<code>INPUT</code>) o salida (<code>OUTPUT</code>).</li> <li><code>digitalWrite(pin, value)</code>: Escribe un valor alto (<code>HIGH</code>) o bajo (<code>LOW</code>) en un pin de salida.</li> <li><code>digitalRead(pin)</code>: Lee el valor de un pin de entrada (retorna <code>HIGH</code> o <code>LOW</code>).</li> <li><code>delay(ms)</code>: Pausa la ejecuci\u00f3n por un n\u00famero de milisegundos.</li> <li><code>Serial.begin(baudrate)</code>: Inicia la comunicaci\u00f3n serial a una velocidad dada (baudrate).</li> <li><code>Serial.print(data)</code>: Env\u00eda datos al monitor serial.</li> <li><code>Serial.println(data)</code>: Env\u00eda datos al monitor serial y a\u00f1ade un salto de l\u00ednea</li> </ul> <p>Funciones Basicas de C/C++:</p> <ul> <li><code>int</code>, <code>float</code>, <code>char</code>, <code>bool</code>, <code>void</code>, <code>String</code>: Tipos de datos para variables basicos.<ul> <li>Ejemplos variables: <pre><code>int numero = 10;          // Entero\nfloat decimal = 3.14;    // N\u00famero con decimales\nchar letra = 'A';        // Car\u00e1cter\nbool esVerdadero = true;  // Booleano (true/false)\nString texto = \"Hola\";    // Cadena de texto\n</code></pre></li> </ul> </li> <li><code>==</code>, <code>!=</code>, <code>&lt;</code>, <code>&gt;</code>, <code>&lt;=</code>, <code>&gt;=</code>: Operadores de comparaci\u00f3n.</li> <li><code>+</code>, <code>-</code>, <code>*</code>, <code>/</code>, <code>%</code>: Operadores aritm\u00e9ticos</li> <li><code>if</code>, <code>else</code>, <code>switch</code>: Estructuras de control de flujo.<ul> <li>Ejemplo <code>if</code> <pre><code>if (condition) {\n    // c\u00f3digo a ejecutar si la condici\u00f3n es verdadera\n} else {\n    // c\u00f3digo a ejecutar si la condici\u00f3n es falsa\n}\n</code></pre></li> <li>Ejemplo <code>switch</code> <pre><code>switch (variable) {\n    case valor1:\n        // c\u00f3digo a ejecutar si variable == valor1\n        break;\n    case valor2:\n        // c\u00f3digo a ejecutar si variable == valor2\n        break;\n    default:\n        // c\u00f3digo a ejecutar si variable no coincide con ning\u00fan valor\n}\n</code></pre></li> </ul> </li> <li> <p><code>for</code>, <code>while</code>: Bucles de repetici\u00f3n.</p> <ul> <li>Ejemplo <code>for</code> <pre><code>for(int i=0; i&lt;10; i++){\n    Serial.println(i);\n}\n</code></pre></li> <li>Ejemplo <code>while</code> <pre><code>int i = 0;\nwhile(i &lt; 10){\n    Serial.println(i);\n    i++;\n}\n</code></pre></li> </ul> </li> <li> <p><code>functionName()</code>: Llamada a funciones.</p> </li> <li><code>#define</code>: Definici\u00f3n de macros.</li> <li><code>#include</code>: Inclusi\u00f3n de librer\u00edas.</li> </ul>"}, {"location": "clases/introduccion-mecatronica/tema2/#estructura-basica-de-un-programa-en-arduino", "title": "Estructura B\u00e1sica de un Programa en Arduino", "text": "Estructura B\u00e1sica<pre><code>void setup() {\n    // Inicializaci\u00f3n se ejecuta una vez\n}\n\nvoid loop() {\n    // C\u00f3digo principal se ejecuta repetidamente\n}\n</code></pre> Blink<pre><code>//Revisar donde esta cableado el LED\n#define LED 23\n\nvoid setup() {\n    pinMode(LED, OUTPUT); // Configura el pin del LED como salida\n}\n\nvoid loop() {\n    digitalWrite(LED, HIGH); // Enciende el LED\n    delay(1000); // Espera 1 segundo\n    digitalWrite(LED, LOW); // Apaga el LED\n    delay(1000); // Espera 1 segundo\n}\n</code></pre> <p>Blink con bot\u00f3n</p> Blink con bot\u00f3n<pre><code>//Revisar donde esta cableado el bot\u00f3n y el LED\n#define LED 23\n#define BUTTON 33\n\nvoid setup() {\n    pinMode(LED, OUTPUT);\n    pinMode(BUTTON, INPUT);\n}\n\nvoid loop() {\n    if (digitalRead(BUTTON) == HIGH) {\n        digitalWrite(LED, HIGH);\n    } else {\n        digitalWrite(LED, LOW);\n    }\n}\n</code></pre> <p></p> <p>Imprimir en el Monitor Serial</p> <p>Monitor Serial<pre><code>void setup() {\n    Serial.begin(115200);\n}\n\nvoid loop() {\n    Serial.println(\"Hola, mundo!\");\n    delay(1000);\n}\n</code></pre> Para probar la comunicacion BT, es necesario emparejar el dispositivo con una app de terminal Bluetooth en el celular (por ejemplo, \"Serial Bluetooth Terminal\" en Android). Liga: Serial Bluetooth Terminal</p> <p>Nota</p> <p>El iphone no soporta la comunicacion serial por bluetooth, por lo que es necesario usar un dispositivo Android o una computadora con bluetooth.</p> <p>Comunicacion BT</p> Bluetooth Serial<pre><code>#include \"BluetoothSerial.h\"\nBluetoothSerial SerialBT;\n\nvoid setup() {\n    Serial.begin(115200);\n    SerialBT.begin(\"ESP32\"); // Nombre del dispositivo Bluetooth\n}\n\nvoid loop() {\n    if (SerialBT.available()) {\n        String mensaje = SerialBT.readString();\n        Serial.println(\"Recibido: \" + mensaje);\n    }\n    delay(1000);\n}\n</code></pre> <p>Led con Bluetooth</p> LED con Bluetooth<pre><code>#include \"BluetoothSerial.h\"\nBluetoothSerial SerialBT;\n\n#define LED 23\n\nvoid setup() {\n    Serial.begin(115200);\n    SerialBT.begin(\"ESP32\");\n    pinMode(LED, OUTPUT);\n}\n\nvoid loop() {\n    if (SerialBT.available()) {\n        String mensaje = SerialBT.readString();\n        Serial.println(\"Recibido: \" + mensaje);\n        if (mensaje == \"ON\") {\n            digitalWrite(LED, HIGH);\n        } else if (mensaje == \"OFF\") {\n            digitalWrite(LED, LOW);\n        }\n    }\n    delay(1000);\n}\n</code></pre>"}, {"location": "clases/introduccion-mecatronica/tema3/", "title": "Actuadores", "text": "<p>Conceptos clave</p> <ul> <li>Frecuencia (Hz): cu\u00e1ntas veces por segundo se repite el ciclo.</li> <li>Ciclo de trabajo (duty, %): porcentaje del tiempo en ALTO dentro del periodo.</li> <li>Resoluci\u00f3n (bits): n\u00famero de pasos posibles del duty: pasos = 2^bits.</li> <li>Percepci\u00f3n: el actuador ve un promedio de energ\u00eda \u2192 brillo, velocidad, fuerza, etc.</li> </ul> Actuador Frecuencia t\u00edpica Notas LED visible 500\u20132,000 Hz Evita parpadeo y \u201cbanding\u201d en video. Motor DC + puente H 15\u201325 kHz Fuera de lo audible; menor zumbido. Buzzer pasivo Tonos musicales Ajusta a la nota deseada (p. ej., 440 Hz). Servo RC 50 Hz Pulsos de 1\u20132 ms dentro de 20 ms. Solenoide/V\u00e1lvula 200 Hz\u20132 kHz Revisa datasheet; siempre con diodo flyback. <p>Seguridad el\u00e9ctrica y protecci\u00f3n (laboratorio)</p> <ul> <li>GND com\u00fan: une la tierra del ESP32 con la de la fuente del actuador (motores/servos).</li> <li>Diodo flyback en cargas inductivas (relevadores, solenoides, motores con MOSFETs discretos).</li> <li>Alimentaci\u00f3n separada: no alimentes motores desde 3V3 del ESP32.</li> <li>Freno vs libre (puente H): el freno disipa energ\u00eda en el motor; cuidado con picos t\u00e9rmicos.</li> <li>Cableado corto y capacitores cerca de la carga para mitigar ruido (100 nF + 47\u2013220 \u00b5F).</li> </ul>"}, {"location": "clases/introduccion-mecatronica/tema3/#pwm", "title": "PWM", "text": "<p><pre><code>flowchart LR\n  subgraph Control PWM LED\n    MCU[ESP32 GPIO PWM] --&gt; R[Resistor 220\u03a9] --&gt; LED --&gt; GND\n  end</code></pre> </p> Direccion Basica<pre><code>/*Control de 1 solo motor*/\n#define in1 27\n#define in2 14\n\nvoid setup() {\n  /*Declarar Pines Como salida*/\n  pinMode(in1, OUTPUT);\n  pinMode(in2, OUTPUT);\n}\n\nvoid loop() {\n  /*ADELANTE*/\n  digitalWrite(in1, 0);\n  digitalWrite(in2, 1);\n  delay(1000);\n  /*ALTO*/\n  digitalWrite(in1, 0);\n  digitalWrite(in2, 0);\n  delay(1000);\n  /*ATRAS*/\n  digitalWrite(in1, 1);\n  digitalWrite(in2, 0);\n  delay(1000);\n  /*ALTO*/\n  digitalWrite(in1, 0);\n  digitalWrite(in2, 0);\n  delay(1000);\n}\n</code></pre> <p></p> Control de Velocidad<pre><code>/*Control de 1 solo motor*/\n#define in1 27\n#define in2 14\n#define pwm 12 //Definicion de pin de Velocidad\n\nvoid setup() {\n  /*Declarar Pines Como salida*/\n  pinMode(in1, OUTPUT);\n  pinMode(in2, OUTPUT);\n  /*Configuracion de pin PWM \n    - Se conecta al pin 12(pwm)\n    - Frecuencia de 1Khz\n    - Resolucion de 8 bit (0-255)\n    - Canal 0\n  */\n  ledcAttachChannel(pwm, 1000, 8, 0);\n}\n\nvoid loop() {\n  /*ADELANTE*/\n  digitalWrite(in1, 0);\n  digitalWrite(in2, 1);\n  ledcWrite(pwm, 0);//Velocidad al 0%\n  delay(500);\n  ledcWrite(pwm, 51);//Velocidad al 20%\n  delay(500);\n  ledcWrite(pwm, 102);//Velocidad al 40%\n  delay(500);\n  ledcWrite(pwm, 153);//Velocidad al 60%\n  delay(500);\n  ledcWrite(pwm, 204);//Velocidad al 80%\n  delay(500);\n  ledcWrite(pwm, 255);//Velocidad al 100%\n  delay(500);\n}\n</code></pre> <p> </p> Control de Servo<pre><code>/*Control de 1 solo motor*/\n#define pwm 12 //Definicion de pin de Velocidad\nint duty = 0;\nint grados = 0;\nvoid setup() {\n  /*Declarar Pines Como salida*/\n  pinMode(in1, OUTPUT);\n  pinMode(in2, OUTPUT);\n  /*Configuracion de pin PWM \n    - Se conecta al pin 12(pwm)\n    - Frecuencia de 50hz\n    - Resolucion de 12 bit (0-4096)\n    - Canal 0\n  */\n  ledcAttachChannel(pwm, 50, 12, 0);\n  Serial.begin(115200);\n}\n\nvoid loop() { \n  /*\n  Servo trabaja del ~5% al ~10% del total\n  ~5% - 0\u00b0\n  ~10% - 180\u00b0\n  5% de 4096 = 204.8\n  10% de 4096 = 409.6\n  */\n  grados=0;\n  duty= map(grados, 0, 180, 205, 410);\n  Serial.print(\"Pos: \");\n  Serial.println(duty);\n  ledcWrite(pwm, duty);\n  delay(1000);\n  grados=90;\n  duty= map(grados, 0, 180, 205, 410);\n  Serial.print(\"Pos: \");\n  Serial.println(duty);\n  ledcWrite(pwm, duty);\n  delay(1000);\n  grados=180;\n  duty= map(grados, 0, 180, 205, 410);\n  Serial.print(\"Pos: \");\n  Serial.println(duty);\n  ledcWrite(pwm, duty);\n  delay(1000);\n}\n</code></pre> <p></p> Imprimir valor analogo<pre><code>const int analogPin = 34; // O A0.\n\nvoid setup() {\n\n  Serial.begin(9600);\n}\n\nvoid loop() {\n  int sensorValue = analogRead(analogPin);\n  // Imprime el valor puro del Analogo\n  Serial.print(\"Valor Analogo: \");\n  Serial.print(sensorValue);\n\n  // Convertir a valor de voltaje (0-3.3V)\n  // El ESP32 tiene un convertidor ADC de 12 bit asi que el valor maximo es 4095 \n  float voltaje = (float)sensorValue * (3.3 / 4095.0);\n\n  // Imprime el Voltaje\n  Serial.print(\"\\t voltaje: \");\n  Serial.print(voltaje);\n  Serial.println(\" V\");\n\n  delay(100);\n}\n</code></pre> <p>Resumen <pre><code>// --- PWM con LEDC ---\nledcAttachChannel(pin, freq_Hz, resolution_bits, canal); \n// Configura canal PWM en un solo paso\n\nledcWrite(pin, duty);      \n// Escribe el ciclo de trabajo (0 a 2^bits - 1)\n\n// --- Pines digitales ---\npinMode(pin, OUTPUT);      \ndigitalWrite(pin, HIGH);   \ndigitalWrite(pin, LOW);    \n\n// --- Lectura anal\u00f3gica ---\nint valor = analogRead(pin);       \n\n// Convertir a voltaje (ADC de 12 bits en ESP32, 0-4095)\nfloat volt = valor * (3.3 / 4095.0);  \n\n// --- Serial ---\nSerial.begin(115200);      \nSerial.print(\"Texto: \");   \nSerial.println(valor);     \n\n// --- Mapear rangos ---\nint salida = map(entrada, inMin, inMax, outMin, outMax);  \n\n// --- Delays ---\ndelay(ms);                 // Retraso en milisegundos\n</code></pre></p>"}, {"location": "clases/introduccion-mecatronica/tema4/", "title": "Visi\u00f3n por Computadora 101", "text": ""}, {"location": "clases/introduccion-mecatronica/tema4/#imagenes-y-procesamiento-basico", "title": "Im\u00e1genes y procesamiento b\u00e1sico", "text": "<p>Las im\u00e1genes digitales son matrices de p\u00edxeles. Cada p\u00edxel guarda intensidad y/o color. En el procesamiento de im\u00e1genes, estas matrices se manipulan para mejorar la calidad visual, extraer caracter\u00edsticas o preparar datos para an\u00e1lisis posteriores.</p> <p></p> <p>Formato com\u00fan de una imagen en memoria: <pre><code>[Alto][Ancho][Canales]\n</code></pre></p> <ul> <li>Alto: p\u00edxeles verticales  </li> <li>Ancho: p\u00edxeles horizontales  </li> <li>Canales (p. ej., 3 para color)</li> <li>RGB: Rojo, Verde, Azul  </li> <li>BGR: Azul, Verde, Rojo (OpenCV usa BGR por defecto)  </li> <li>Grayscale: 1 canal (intensidad)  </li> <li>RGBA: con alfa (transparencia)  </li> <li>HSV: Matiz, Saturaci\u00f3n, Valor (muy \u00fatil para segmentaci\u00f3n por color)</li> </ul>"}, {"location": "clases/introduccion-mecatronica/tema4/#glosario-rapido", "title": "Glosario r\u00e1pido", "text": "<ul> <li>Frame: imagen de un video/c\u00e1mara.  </li> <li>M\u00e1scara: imagen binaria (0/255) que selecciona zonas.  </li> <li>Kernel: matriz peque\u00f1a usada por filtros/morfolog\u00eda.  </li> <li>Contorno: borde de una regi\u00f3n blanca en una m\u00e1scara.</li> </ul>"}, {"location": "clases/introduccion-mecatronica/tema4/#recordatorio-de-funciones-opencv", "title": "Recordatorio de funciones OpenCV", "text": "<ul> <li><code>cv2.imread(path)</code>, <code>cv2.VideoCapture(idx|path)</code>, <code>cv2.imshow(t\u00edtulo, img)</code> </li> <li><code>cv2.resize(img, (ancho, alto))</code>, <code>img.shape \u2192 (alto, ancho, canales)</code> </li> <li><code>img[y1:y2, x1:x2]</code> (recorte), <code>cv2.cvtColor(img, code)</code> (recolor)  </li> <li>Dibujo: <code>cv2.circle</code>, <code>cv2.rectangle</code>, <code>cv2.line</code>, <code>cv2.putText</code></li> </ul> Ejemplo: shape<pre><code>alto, ancho, canales = imagen.shape\n# o:\nalto = imagen.shape[0]; ancho = imagen.shape[1]; canales = imagen.shape[2]\n</code></pre>"}, {"location": "clases/introduccion-mecatronica/tema4/#estructura-base-camara-video", "title": "Estructura base (c\u00e1mara / video)", "text": "Loop de c\u00e1mara robusto<pre><code>import cv2\n\ncap = cv2.VideoCapture(0)  # prueba 0/1/2 si tienes varias c\u00e1maras\nif not cap.isOpened():\n    raise RuntimeError(\"No se pudo abrir la c\u00e1mara\")\n\n# Opcional: fija resoluci\u00f3n (si la c\u00e1mara lo permite)\ncap.set(cv2.CAP_PROP_FRAME_WIDTH, 1280)\ncap.set(cv2.CAP_PROP_FRAME_HEIGHT, 720)\n\nwhile True:\n    ok, frame = cap.read()\n    if not ok:\n        break\n\n    cv2.imshow(\"Frame\", frame)\n    if cv2.waitKey(1) &amp; 0xFF == ord('q'):  # presiona 'q' para salir\n        break\n\ncap.release()\ncv2.destroyAllWindows()\n</code></pre>"}, {"location": "clases/introduccion-mecatronica/tema4/#recolor-cambios-de-espacio-de-color", "title": "Recolor (cambios de espacio de color)", "text": "BGR\u2192Grayscale / BGR\u2192RGB / BGR\u2192HSV<pre><code>gray = cv2.cvtColor(frame, cv2.COLOR_BGR2GRAY)\nrgb  = cv2.cvtColor(frame, cv2.COLOR_BGR2RGB)   # \u00fatil si muestras con matplotlib\nhsv  = cv2.cvtColor(frame, cv2.COLOR_BGR2HSV)\n</code></pre> <p>Segmentaci\u00f3n por color (HSV + m\u00e1scara):</p> <p></p> Color H (min\u2013max) S (min\u2013max) V (min\u2013max) Tips r\u00e1pidos Rojo 0\u201310 o 170\u2013179 120\u2013255 70\u2013255 Combina dos m\u00e1scaras por el wrap de Hue. Naranja 10\u201320 120\u2013255 80\u2013255 Sube V si est\u00e1 oscuro. Amarillo 20\u201335 120\u2013255 120\u2013255 Baja S si se \u201clava\u201d. Verde 35\u201385 60\u2013255 60\u2013255 Ampl\u00eda S/V para telas mate/hojas. Cian 85\u2013100 60\u2013255 60\u2013255 \u2014 Azul 100\u2013130 60\u2013255 60\u2013255 Sube V_min si es muy oscuro. Magenta 140\u2013170 60\u2013255 60\u2013255 Puede solaparse con rojos fr\u00edos. Blanco 0\u2013179 0\u201330 200\u2013255 Bajo S, alto V (luces, brillos). Gris 0\u2013179 0\u201350 50\u2013200 Bajo S, V medio. Negro 0\u2013179 0\u2013255 0\u201350 V muy bajo. <p>Notas r\u00e1pidas:</p> <ul> <li>En OpenCV, H (Matiz) va de 0\u2013179, S (Saturaci\u00f3n) y V (Valor) van de 0\u2013255.</li> <li>Los rangos son orientativos: ajusta seg\u00fan c\u00e1mara, balance de blancos e iluminaci\u00f3n.</li> </ul> Segmentar color en HSV<pre><code>import numpy as np\nhsv = cv2.cvtColor(frame, cv2.COLOR_BGR2HSV)\n\n# ejemplo: detectar verdes (ajusta a tu iluminaci\u00f3n)\nlow  = np.array([35,  60,  60], dtype=np.uint8)\nhigh = np.array([85, 255, 255], dtype=np.uint8)\nmask = cv2.inRange(hsv, low, high)\n\nseg = cv2.bitwise_and(frame, frame, mask=mask)\ncv2.imshow(\"Mask\", mask)\ncv2.imshow(\"Segmentado\", seg)\n</code></pre> <p></p>"}, {"location": "clases/introduccion-mecatronica/tema4/#tamano-redimensionar-y-escalar", "title": "Tama\u00f1o (redimensionar y escalar)", "text": "Resize y escalado manteniendo aspecto<pre><code># Redimension exacto:\npeque = cv2.resize(frame, (640, 360), interpolation=cv2.INTER_AREA)\n\n# Escalar por factor:\nfactor = 0.5\nesc = cv2.resize(frame, None, fx=factor, fy=factor, interpolation=cv2.INTER_AREA)\n\n# Upscaling m\u00e1s suave:\ngrande = cv2.resize(frame, None, fx=2, fy=2, interpolation=cv2.INTER_CUBIC)\n</code></pre>"}, {"location": "clases/introduccion-mecatronica/tema4/#umbrales-binarizacion", "title": "Umbrales (binarizaci\u00f3n)", "text": "Umbral fijo, Otsu y adaptativo<pre><code>gray = cv2.cvtColor(frame, cv2.COLOR_BGR2GRAY)\n\n# Umbral fijo (binario):\n_, bin_fixed = cv2.threshold(gray, 120, 255, cv2.THRESH_BINARY)\n\n# Otsu (elige umbral autom\u00e1tico):\n_, bin_otsu = cv2.threshold(gray, 0, 255, cv2.THRESH_BINARY + cv2.THRESH_OTSU)\n\n# Umbral adaptativo (\u00fatil con iluminaci\u00f3n desigual):\nbin_adapt = cv2.adaptiveThreshold(\n    gray, 255, cv2.ADAPTIVE_THRESH_GAUSSIAN_C, cv2.THRESH_BINARY,\n    21, 5  # tama\u00f1o de bloque (impar) y constante de ajuste\n)\n</code></pre>"}, {"location": "clases/introduccion-mecatronica/tema4/#limpieza-morfologica-erosion-dilatacion-apertura-cierre", "title": "Limpieza morfol\u00f3gica (erosi\u00f3n, dilataci\u00f3n, apertura, cierre)", "text": "Erosi\u00f3n / dilataci\u00f3n / apertura / cierre<pre><code>import numpy as np\n\n# parte de una m\u00e1scara binaria (p. ej., bin_otsu o 'mask' en HSV)\nmask = bin_otsu\n\nkernel = cv2.getStructuringElement(cv2.MORPH_RECT, (5,5))\n\nerosion = cv2.erode(mask, kernel, iterations=1)                # encoge blancos\ndilat   = cv2.dilate(mask, kernel, iterations=1)               # expande blancos\nopening = cv2.morphologyEx(mask, cv2.MORPH_OPEN,  kernel, 1)   # quita ruido peque\u00f1o\nclosing = cv2.morphologyEx(mask, cv2.MORPH_CLOSE, kernel, 1)   # cierra huecos\n</code></pre> <p>Tipos de Ruido - Ruido salpicado \u2192 apertura - Huecos internos \u2192 cierre - Bordes \u201ccomidos\u201d \u2192 menos erosi\u00f3n o kernel m\u00e1s peque\u00f1o - Objetos delgados rotos \u2192 menos apertura o kernel m\u00e1s chico</p>"}, {"location": "clases/introduccion-mecatronica/tema4/#filtros-suavizado-reduccion-de-ruido", "title": "Filtros (suavizado / reducci\u00f3n de ruido)", "text": "Filtros comunes<pre><code># Desenfoque Gaussiano (ruido blanco, suaviza bordes):\ngauss = cv2.GaussianBlur(frame, (5,5), sigmaX=0)\n\n# Mediana (muy bueno para ruido sal y pimienta):\nmedian = cv2.medianBlur(frame, 5)\n\n# Bilateral (suaviza preservando bordes; costoso):\nbilat = cv2.bilateralFilter(frame, d=9, sigmaColor=75, sigmaSpace=75)\n\n# Promedio (box blur):\nbox = cv2.blur(frame, (5,5))\n</code></pre> <p>Sugerencias - Antes de umbralizar, aplica GaussianBlur o medianBlur. - Para conservar bordes de color, prueba bilateral.</p>"}, {"location": "clases/introduccion-mecatronica/tema4/#contornos-y-centros-centroides", "title": "Contornos y centros (centroides)", "text": "Encontrar contornos y centroides<pre><code># 1) Aseg\u00farate de tener una m\u00e1scara binaria limpia\nmask = opening  # por ejemplo, tras apertura\n\n# 2) Buscar contornos (usa RETR_EXTERNAL para externos)\ncontours, _ = cv2.findContours(mask, cv2.RETR_EXTERNAL, cv2.CHAIN_APPROX_SIMPLE)\n\ncanvas = frame.copy()\nfor c in contours:\n    area = cv2.contourArea(c)\n    if area &lt; 200:  # filtra ruido muy peque\u00f1o\n        continue\n\n    # Dibujo del contorno:\n    cv2.drawContours(canvas, [c], -1, (0,255,0), 2)\n\n    # Rect\u00e1ngulo axis-aligned:\n    x, y, w, h = cv2.boundingRect(c)\n    cv2.rectangle(canvas, (x,y), (x+w, y+h), (255,0,0), 2)\n\n    # C\u00edrculo m\u00ednimo envolvente:\n    (cx, cy), rad = cv2.minEnclosingCircle(c)\n    cv2.circle(canvas, (int(cx), int(cy)), int(rad), (0,255,255), 2)\n\n    # Centroides con momentos:\n    M = cv2.moments(c)\n    if M[\"m00\"] != 0:\n        cx_m = int(M[\"m10\"] / M[\"m00\"])\n        cy_m = int(M[\"m01\"] / M[\"m00\"])\n        cv2.circle(canvas, (cx_m, cy_m), 4, (0,0,255), -1)\n        cv2.putText(canvas, f\"({cx_m},{cy_m})\", (cx_m+6, cy_m-6),\n                    cv2.FONT_HERSHEY_SIMPLEX, 0.5, (0,0,255), 1)\n\n# canvas ahora contiene contornos y centros dibujados\n</code></pre>"}, {"location": "clases/introduccion-mecatronica/tema4/#mini-pipeline-integrado-color-limpieza-contornos-centro", "title": "Mini-pipeline integrado (color \u2192 limpieza \u2192 contornos \u2192 centro)", "text": "Ejemplo completo: detectar un color y obtener su centro<pre><code>import cv2, numpy as np\n\ncap = cv2.VideoCapture(0)\nif not cap.isOpened():\n    raise RuntimeError(\"No se pudo abrir la c\u00e1mara\")\n\nwhile True:\n    ok, frame = cap.read()\n    if not ok:\n        break\n\n    # 1) Color \u2192 HSV y m\u00e1scara (rojo: dos rangos porque H envuelve 0/180)\n    hsv  = cv2.cvtColor(frame, cv2.COLOR_BGR2HSV)\n    low1, high1 = np.array([0,120,70]),   np.array([10,255,255])\n    low2, high2 = np.array([170,120,70]), np.array([180,255,255])\n    mask = cv2.inRange(hsv, low1, high1) | cv2.inRange(hsv, low2, high2)\n\n    # 2) Limpieza morfol\u00f3gica\n    kernel = cv2.getStructuringElement(cv2.MORPH_ELLIPSE, (7,7))\n    mask = cv2.morphologyEx(mask, cv2.MORPH_OPEN,  kernel, iterations=1)\n    mask = cv2.morphologyEx(mask, cv2.MORPH_CLOSE, kernel, iterations=1)\n\n    # 3) Contornos\n    cnts, _ = cv2.findContours(mask, cv2.RETR_EXTERNAL, cv2.CHAIN_APPROX_SIMPLE)\n    out = frame.copy()\n    for c in cnts:\n        if cv2.contourArea(c) &lt; 400:\n            continue\n        (cx, cy), r = cv2.minEnclosingCircle(c)\n        cx, cy = int(cx), int(cy)\n        cv2.circle(out, (cx, cy), int(r), (0,255,255), 2)\n        cv2.circle(out, (cx, cy), 5, (0,0,255), -1)\n        cv2.putText(out, f\"Centro: {cx},{cy}\", (cx+8, cy-8),\n                    cv2.FONT_HERSHEY_SIMPLEX, 0.6, (0,0,255), 2)\n\n    # 4) Mostrar\n    cv2.imshow(\"Mask\", mask)\n    cv2.imshow(\"Detecci\u00f3n\", out)\n    if cv2.waitKey(1) &amp; 0xFF == ord('q'):\n        break\n\ncap.release()\ncv2.destroyAllWindows()\n</code></pre>"}, {"location": "clases/sistemas-embebidos-i/Bloque0-Introduccion/Introduccion/", "title": "Introduccion", "text": ""}, {"location": "clases/sistemas-embebidos-i/Bloque0-Introduccion/Introduccion/#objetivos-de-aprendizaje", "title": "Objetivos de aprendizaje", "text": "<ul> <li> <p>Conocer la estructura b\u00e1sica de un microcontrolador (reloj, bus, memoria, perif\u00e9ricos SIO).</p> </li> <li> <p>Instalar y configurar el toolchain (Pico SDK, CMake, OpenOCD, GDB).</p> </li> <li> <p>Comprender el uso de registros para el control de GPIO.</p> </li> <li> <p>Implementar FSM con antirrebote.</p> </li> <li> <p>Configurar SysTick (1 ms) y medir latencias/jitter v\u00eda trazas.</p> </li> </ul>"}, {"location": "clases/sistemas-embebidos-i/Bloque0-Introduccion/Introduccion/#materiales-sugeridos", "title": "Materiales sugeridos", "text": "<ul> <li> <p>Hardware: </p> <ul> <li>Raspberry Pi Pico</li> <li>protoboard</li> <li>LED</li> <li>resistencia (330\u20131k\u03a9)</li> <li>Push Button </li> <li>Resistencias de 10k\u03a9</li> <li>cables </li> <li>osciloscopio</li> </ul> </li> <li> <p>Software: </p> <ul> <li>Visual Studio Code</li> <li>Pico SDK</li> <li>CMake (\u22653.13) </li> <li>arm-none-eabi-gcc</li> <li>OpenOCD</li> <li>GDB</li> </ul> </li> </ul>"}, {"location": "clases/sistemas-embebidos-i/Bloque0-Introduccion/Introduccion/#material-de-apoyo", "title": "Material de apoyo", "text": "<ul> <li> <p>Documentaci\u00f3n del Pico SDK (GPIO, clocks, depuraci\u00f3n, etc.).</p> </li> <li> <p>Cap\u00edtulos introductorios de Curso pr\u00e1ctico para programaci\u00f3n de AVR (refuerza bases de bitwise/registries/GPIO).</p> </li> <li> <p>Apuntes sobre temporizaci\u00f3n y FSM simples (este repo).</p> </li> </ul>"}, {"location": "clases/sistemas-embebidos-i/Bloque0-Introduccion/Tema_A/", "title": "\u00bfQu\u00e9 es un sistema embebido?", "text": ""}, {"location": "clases/sistemas-embebidos-i/Bloque0-Introduccion/Tema_A/#definicion", "title": "Definici\u00f3n", "text": "<p>Un sistema embebido es un sistema de c\u00f3mputo dise\u00f1ado para realizar funciones espec\u00edficas dentro de un producto mayor, que interact\u00faa con el mundo f\u00edsico mediante sensores y actuadores.</p> <p>Importante</p> <p>Debe ser un producto final, no una PC independiente.</p>"}, {"location": "clases/sistemas-embebidos-i/Bloque0-Introduccion/Tema_A/#rasgos-caracteristicos", "title": "Rasgos caracter\u00edsticos", "text": "<ul> <li>Prop\u00f3sito espec\u00edfico: realiza una tarea o conjunto acotado de tareas.</li> <li>Interacci\u00f3n f\u00edsico-digital: adquisici\u00f3n de variables (sensores) y acci\u00f3n (actuadores).</li> <li>Restricciones duras: consumo energ\u00e9tico, memoria, procesamiento, costo, tama\u00f1o.</li> <li>Confiabilidad y disponibilidad: ciclos de vida largos, operaci\u00f3n continua.</li> <li>Tiempo real (frecuente): respuestas dentro de l\u00edmites temporales definidos.</li> <li>Co-dise\u00f1o HW/SW: decisi\u00f3n conjunta de electr\u00f3nica, firmware y software.</li> <li>Seguridad y ciberseguridad: protecci\u00f3n del usuario y del entorno (funcional y digital).</li> </ul>"}, {"location": "clases/sistemas-embebidos-i/Bloque0-Introduccion/Tema_A/#comparativa-pc-vs-sistema-embebido", "title": "Comparativa PC vs Sistema Embebido", "text": "Criterio PC prop\u00f3sito general Sistema embebido Alcance funcional Amplio, multitarea Espec\u00edfico a la aplicaci\u00f3n Interfaz con usuario Teclado, mouse, pantalla Puede carecer de UI; LEDs, botones, HMI dedicada Recursos (CPU/RAM/almacen.) Abundantes Limitados por costo/energ\u00eda/espacio SO Windows/macOS/Linux de escritorio Bare-metal/RTOS/Linux embebido Tiempo real No determinista Frecuentemente determinista Energ\u00eda Red el\u00e9ctrica Bater\u00eda/ultrabajo de potencia Robustez/ambiental Moderada Alta (temperatura, vibraci\u00f3n, EMI) Ciclo de vida Corto/mediano Largo (a\u00f1os o d\u00e9cadas) Ciberseguridad funcional Importante Cr\u00edtica (seguridad f\u00edsica + seguridad inform\u00e1tica)"}, {"location": "clases/sistemas-embebidos-i/Bloque0-Introduccion/Tema_A/#que-no-es-un-sistema-embebido", "title": "\u00bfQu\u00e9 no es un sistema embebido?", "text": "<ul> <li>Una PC de escritorio usada tal cual (no integrada a un producto).</li> <li>Un servidor gen\u00e9rico de prop\u00f3sito general.</li> <li>Un script en laptop que lee un sensor USB (salvo que la laptop sea parte del producto final).</li> </ul>"}, {"location": "clases/sistemas-embebidos-i/Bloque0-Introduccion/Tema_A/#casos-de-uso", "title": "Casos de uso", "text": "Dominio Producto/Funci\u00f3n Requisito clave Tiempo real Automotriz ECU de frenos (ABS/ESP) Latencia y seguridad funcional Duro M\u00e9dico Marcapasos Confiabilidad y biocompatibilidad Duro Industrial Control de motor en l\u00ednea Determinismo y robustez Duro Consumo Termostato inteligente Conectividad y eficiencia Blando IoT port\u00e1til Wearable (smartwatch) Bajo consumo y UX Blando Dom\u00f3tica Cerradura inteligente Seguridad/cifrado Variable <p>Tiempo real duro: incumplir una deadline implica fallo del sistema (p. ej., Freno ABS). Tiempo real blando: las demoras degradan la calidad pero no implican fallo (p. ej., audio).</p>"}, {"location": "clases/sistemas-embebidos-i/Bloque0-Introduccion/Tema_A/#estructura-tipica-de-un-sistema-embebido", "title": "Estructura t\u00edpica de un sistema embebido", "text": "<ul> <li> <p>MCU Microcontrolador: CPU + memoria + perif\u00e9ricos en un mismo chip, optimizado para control de E/S en tiempo real.</p> </li> <li> <p>MPU MicroProcesador: CPU \u201csola\u201d (memoria y perif\u00e9ricos externos). SoC: t\u00e9rmino paraguas que puede incluir GPU, radios, etc.</p> </li> </ul>"}, {"location": "clases/sistemas-embebidos-i/Bloque0-Introduccion/Tema_A/#componentes-clave", "title": "Componentes Clave:", "text": "<p>Diagrama 1 \u2014 Visi\u00f3n de alto nivel</p> <pre><code>flowchart LR\n  %% ---------- External signals ----------\n  CLK[\"Reloj / PLL\"]\n  RST[\"Reset\"]\n  PWR[\"Gesti\u00f3n de energ\u00eda&lt;br/&gt;(LDO / DCDC / Sleep)\"]\n  EXT_IO[\"Sensores / Actuadores externos\"]\n\n  %% ---------- MCU boundary ----------\n  subgraph MCU[\"Microcontrolador (SoC)\"]\n    direction LR\n\n    %% Central interconnect\n    BUS[[\"Interconexi\u00f3n SoC&lt;br/&gt;(AXI / AHB / APB)\"]]\n\n    %% CPU subsystem (keep it simple at high level)\n    subgraph CPU[\"CPU\"]\n      direction TB\n      CORE[\"N\u00facleo (Core)\"]\n      INTCTRL[\"Control de interrupciones (NVIC/INTC)\"]\n      REGFILE[\"Registros\"]\n      ALU[\"ALU (FPU/DSP opcional)\"]\n      CORE --- INTCTRL\n      CORE --- REGFILE\n      CORE --- ALU\n    end\n\n    %% Memory\n    subgraph MEM[\"Memoria\"]\n      direction TB\n      FLASH[(Flash - C\u00f3digo)]\n      SRAM[(SRAM - Datos)]\n      EEPROM[(EEPROM/Emulada - Par\u00e1metros)]\n      TCM[(Cache / TCM opcional)]\n    end\n\n    %% Peripherals (grouped)\n    subgraph PER[\"Perif\u00e9ricos\"]\n      direction TB\n      GPIO[[GPIO / I/O digital]]\n      TIM[[Timers / PWM / RTC]]\n      ANA[[ADC / DAC / Comparador]]\n      COM[[UART \u00b7 SPI \u00b7 I2C \u00b7 CAN \u00b7 USB \u00b7 ETH]]\n      WDT[[Watchdog]]\n      DMA[[DMA]]\n    end\n  end\n\n  %% ---------- Clean wiring via hub ----------\n  CPU --- BUS\n  MEM --- BUS\n  PER --- BUS\n  DMA --- BUS\n\n  %% External world\n  EXT_IO --- GPIO\n\n  %% Service signals (limit fan-out to reduce clutter)\n  CLK --&gt; CPU\n  CLK --&gt; PER\n  RST --&gt; CPU\n  RST --&gt; PER\n  PWR --&gt; CPU\n  PWR --&gt; MEM</code></pre> Componente Funci\u00f3n principal Puntos de dise\u00f1o / riesgo t\u00edpico ALU / FPU / DSP C\u00e1lculo entero, flotante, se\u00f1al Latencia, precisi\u00f3n, consumo; \u00bfse justifica FPU? Unidad de Control Secuenciar instrucciones Soporte ISA Registros/PC/SP Estado interno y flujo Tama\u00f1o de banco, llamadas/ISR anidadas NVIC/INTC Gesti\u00f3n de interrupciones Prioridades, latencias, determinismo DMA Transferencia sin CPU Configuraci\u00f3n correcta, coherencia de cach\u00e9 Flash Almacenar firmware Endurance, tiempos de programaci\u00f3n/lectura SRAM Datos en ejecuci\u00f3n Tama\u00f1o/costos, inicializaci\u00f3n y protecci\u00f3n EEPROM Par\u00e1metros persistentes Ciclos de escritura, wear leveling GPIO I/O digital Pull-ups, debounce, protecci\u00f3n ESD Timers/PWM/RTC Tiempo, captura/compare, control Resoluci\u00f3n, jitter, sincronizaci\u00f3n con ADC ADC/DAC/Comp. Interfaces anal\u00f3gicas Ruido, referencia, tasa de muestreo, linealidad UART/SPI/I\u00b2C/CAN\u2026 Comunicaciones Velocidad, errores, EMC, protocolos superiores Reloj/PLL Base de tiempo Estabilidad, arranque, consumo Reset/Watchdog Recuperaci\u00f3n de fallos Ventanas, falsas activaciones, cobertura de fallos Power Mgmt Modos sleep/standby Latencias de wake-up, retenci\u00f3n de estado"}, {"location": "clases/sistemas-embebidos-i/Bloque0-Introduccion/Tema_A/#buses-de-interconexion", "title": "Buses de interconexi\u00f3n", "text": "<p>Dentro de un sistema embebido, los bloques funcionales se comunican entre s\u00ed a trav\u00e9s de buses de interconexi\u00f3n. Estos buses permiten la transferencia de datos, direcciones y se\u00f1ales de control entre los diferentes componentes del sistema. Existen varios tipos de buses, cada uno con sus propias caracter\u00edsticas y prop\u00f3sitos:</p> <p>Nota</p> <p>Un bus es el conjunto de conexiones f\u00edsicas que permiten la comunicaci\u00f3n entre los diferentes componentes de un sistema.</p> <ol> <li>Bus de datos: Transporta la informaci\u00f3n entre los componentes.</li> <li>Bus de direcciones: Lleva las direcciones de memoria a las que se accede.</li> <li>Bus de control: Transmite se\u00f1ales de control que coordinan las operaciones del sistema.</li> </ol> <p>As\u00ed mismo podemos denominar:</p> <ul> <li>Maestros/Iniciadores (AMBA: Initiator): Dispositivos que inician las transferencias de datos (p. ej., CPU, DMA).</li> <li>Esclavos/Objetivos (AMBA: Target): Dispositivos que responden a las solicitudes de los maestros (p. ej., memoria, perif\u00e9ricos).</li> </ul> <pre><code>flowchart LR\n  subgraph Fabric[Matriz / Bus interno]\n    CPU2[\"CPU (Maestro)\"]\n    DMA2[\"DMA (Maestro)\"]\n    MEM2[\"Memorias (Esclavos): Flash/SRAM\"]\n    P1[\"Perif\u00e9ricos APB (Esclavos)\"]\n    P2[\"Perif\u00e9ricos r\u00e1pidos (Esclavos)\"]\n  end\n\n  CPU2 --&gt;|Direcci\u00f3n/Control| MEM2\n  MEM2 --&gt;|Datos| CPU2\n\n  CPU2 &lt;---&gt; P1\n  CPU2 &lt;---&gt; P2\n  DMA2 &lt;---&gt; MEM2\n  DMA2 &lt;---&gt; P2</code></pre>"}, {"location": "clases/sistemas-embebidos-i/Bloque0-Introduccion/Tema_A/#memorias-tipos-y-usos", "title": "Memorias: tipos y usos", "text": "<p>En un sistema embebido elegimos memorias seg\u00fan volatilidad, latencia/ancho de banda, endurance (ciclos de escritura), tama\u00f1o y costo/energ\u00eda. Aqu\u00ed un mapa pr\u00e1ctico.</p>"}, {"location": "clases/sistemas-embebidos-i/Bloque0-Introduccion/Tema_A/#volatiles-rapidas-se-pierden-al-apagar", "title": "Vol\u00e1tiles (r\u00e1pidas, se pierden al apagar)", "text": "Tipo Vol\u00e1til Lectura/Escritura Endurance aprox. Tama\u00f1o t\u00edpico en MCUs Uso t\u00edpico Riesgos / dise\u00f1o SRAM S\u00ed Muy r\u00e1pida / r\u00e1pida Ilimitada (l\u00f3gica) 2\u2013512 KiB Variables en ejecuci\u00f3n, buffers Consumo en sleep; tama\u00f1o limitado TCM (ITCM/DTCM) S\u00ed Muy r\u00e1pida (casi 1 ciclo) Ilimitada 16\u2013512 KiB C\u00f3digo cr\u00edtico o datos de ISR en tiempo real Tama\u00f1o peque\u00f1o; requiere linker script Cach\u00e9 (I/D) S\u00ed Transparente (aceleraci\u00f3n) \u2014 \u2014 Acelerar acceso a Flash/externa Inval./coherencia con DMA PSRAM S\u00ed Media / media Ilimitada 2\u201316 MiB (externa) Framebuffers, UI, ML ligero Latencia mayor que SRAM; consumo SDRAM/DDR S\u00ed Alta BW / latencia media Ilimitada 16\u20131024 MiB (MPU/SoC) Linux/GUI, visi\u00f3n/ML, grandes buffers Controlador complejo; refresh, EMC"}, {"location": "clases/sistemas-embebidos-i/Bloque0-Introduccion/Tema_A/#no-volatiles-persisten-sin-energia", "title": "No vol\u00e1tiles (persisten sin energ\u00eda)", "text": "Tipo Vol\u00e1til Lectura/Escritura Endurance aprox. Tama\u00f1o t\u00edpico Uso t\u00edpico Riesgos / dise\u00f1o Flash interna (NOR) No Lectura r\u00e1pida; escritura/borrado por p\u00e1ginas/bloques 10\u00b3\u201310\u2075 ciclos 64 KiB\u20132 MiB Firmware, constantes, a veces logs Tama\u00f1o de p\u00e1gina; wait states; wear leveling para logs QSPI NOR externa No Lectura r\u00e1pida; XIP posible 10\u00b3\u201310\u2075 4\u2013256 MiB C\u00f3digo XIP, assets (UI), modelos peque\u00f1os Latencia &gt; interna; l\u00edneas QSPI; protecci\u00f3n/firmware seguro NAND (eMMC/SD) No BW alto secuencial; aleatorio lento 10\u00b3\u201310\u2075 4\u2013256 GiB Datos masivos: archivos, audio/video, databases Sistema de archivos, wear leveling, integridad (journaling) EEPROM No Escritura por bytes/p\u00e1ginas (simple) 10\u2075\u201310\u2076 512 B\u2013256 KiB Par\u00e1metros de calibraci\u00f3n/configuraci\u00f3n Endurance: distribuir escrituras; tiempo de escritura FRAM No Casi SRAM (r\u00e1pida) lectura/escritura 10\u00b9\u00b2\u201310\u00b9\u2074 4\u20131024 KiB Logs frecuentes, contadores, estado cr\u00edtico Costo/KB; disponibilidad MRAM (opc.) No R\u00e1pida; no vol\u00e1til 10\u00b9\u00b2+ 128 KiB\u201316 MiB Estado seguro ante fallos de energ\u00eda Costo; oferta limitada OTP / eFuse No Programaci\u00f3n \u00fanica 1 Decenas\u2013cientos bits IDs, claves, configuraci\u00f3n de arranque Irreversible; planificar bien campos <p>Reglas r\u00e1pidas</p> <ul> <li>C\u00f3digo: Flash interna; si no cabe o quieres XIP, QSPI NOR externa.  </li> <li>Datos en tiempo real (colas ISR, filtros): SRAM/TCM.  </li> <li>Par\u00e1metros que cambian poco: EEPROM / FRAM (si cambian mucho).  </li> <li>Logs frecuentes: FRAM o estrategia de wear leveling en Flash.  </li> <li>Activos grandes (im\u00e1genes, audio): QSPI NOR o SD/eMMC.  </li> <li>Linux/GUI/ML pesado: SDRAM/DDR + almacenamiento masivo.</li> </ul> <p>\u00bfQu\u00e9 es XIP (Execute-In-Place)?</p> <p>Ejecutar c\u00f3digo directamente desde una memoria externa (p. ej., QSPI NOR) sin copiarlo a SRAM. Ahorra SRAM, a costa de latencia; ideal para c\u00f3digo no cr\u00edtico.</p>"}, {"location": "clases/sistemas-embebidos-i/Bloque0-Introduccion/Tema_A/#checklist-de-memoria", "title": "Checklist de memoria", "text": "<ul> <li>Tama\u00f1o de firmware (Flash) y datos en ejecuci\u00f3n (SRAM/TCM).  </li> <li>\u00bfNecesitas XIP? \u00bfQu\u00e9 latencia tolera tu bucle cr\u00edtico?  </li> <li>Endurance esperado (par\u00e1metros/logs) y estrategia de wear leveling.  </li> <li>\u00bfDMA y cach\u00e9? Plan de coherencia/inval.  </li> <li>Consumo en sleep/retenci\u00f3n y tiempos de wake-up.  </li> <li>Integridad/seguridad: firmware firmado, protecci\u00f3n de lectura/escritura.</li> </ul>"}, {"location": "clases/sistemas-embebidos-i/Bloque0-Introduccion/Tema_A/#modelos-de-memoria", "title": "Modelos de memoria", "text": "<p>Los sistemas embebidos utilizan diferentes modelos de memoria para gestionar el almacenamiento y acceso a datos. </p> <p>Esto lo hace a trav\u00e9s de instrucciones y datos que se almacenan en diferentes tipos de memoria.</p> <ul> <li>Instrucciones: Son las operaciones que la CPU debe realizar y se almacenan en la memoria de programa.</li> <li>Datos: Son la informaci\u00f3n sobre la que opera la CPU y se almacenan en la memoria de datos.</li> </ul> <p>Algunos de los modelos m\u00e1s comunes son:</p> <ol> <li> <p>Modelo de memoria von Neumann: La CPU usa una sola memoria para instrucciones y datos, lo que simplifica el dise\u00f1o, pero limita el rendimiento porque no puede acceder a ambos al mismo tiempo.</p> </li> <li> <p>Modelo de memoria Harvard: Este modelo utiliza memorias separadas para instrucciones y datos, lo que permite accesos simult\u00e1neos y mejora el rendimiento. Sin embargo, es m\u00e1s complejo de implementar.</p> </li> </ol> <pre><code>flowchart LR\n\n%% =======================\n%%   VON NEUMANN (izq.)\n%% =======================\nsubgraph VN[\"Von Neumann\"]\ndirection TB\n  VN_MEM[\"Memoria (Datos + C\u00f3digo)\"]\n  VN_CPU[\"CPU\"]\n  VN_IO[\"Dispositivos I/O\"]\n\n  VN_MEM --&gt;|Datos| VN_CPU\n  VN_CPU --&gt;|Direcci\u00f3n| VN_MEM\n  VN_CPU --&gt;|Datos| VN_IO\nend\n\n%% =======================\n%%   HARVARD (der.)\n%% =======================\nsubgraph HV[\"Harvard\"]\ndirection TB\n  HV_PM[\"Memoria de Programa\"]\n  HV_DM[\"Memoria de Datos\"]\n  HV_CPU[\"CPU\"]\n  HV_IO[\"Dispositivos I/O\"]\n\n  %% Mantener PM y DM en la misma fila superior\n  HV_PM --- HV_DM\n\n  %% Instrucciones (PM -&gt; CPU) y su direcci\u00f3n (CPU -&gt; PM)\n  HV_PM --&gt;|Instrucci\u00f3n| HV_CPU\n  HV_CPU -.-&gt;|Direcci\u00f3n de instrucci\u00f3n| HV_PM\n\n  %% Datos (DM -&gt; CPU) y su direcci\u00f3n (CPU -&gt; DM)\n  HV_DM --&gt;|Datos| HV_CPU\n  HV_CPU -.-&gt;|Direcci\u00f3n de variable| HV_DM\n\n  %% I/O debajo de la CPU\n  HV_CPU --&gt;|Datos| HV_IO\nend\n\n%% ==== Estilo opcional (puedes quitarlo si no lo necesitas) ====\nclassDef box fill:#f7f7f7,stroke:#444,stroke-width:1px;\nclass VN_MEM,VN_CPU,VN_IO,HV_PM,HV_DM,HV_CPU,HV_IO box;\nlinkStyle default stroke:#444,stroke-width:1px;</code></pre>"}, {"location": "clases/sistemas-embebidos-i/Bloque0-Introduccion/Tema_A/#tamano-de-la-arquitectura", "title": "\"Tama\u00f1o de la arquitectura\"", "text": "<p>El \u201ctama\u00f1o de la arquitectura\u201d suele referirse al ancho de palabra de la CPU (n\u00famero de bits de sus registros generales y de la ALU: 8, 16, 32, 64 bits). Sin embargo, para decidir hardware tambi\u00e9n interesan:</p> <ul> <li>Ancho del bus de direcciones (cu\u00e1ntas direcciones distintas puede emitir la CPU/DMA).</li> <li>Ancho del bus de datos (cu\u00e1ntos bits se pueden transferir en paralelo).</li> <li>Tama\u00f1o de punteros (cu\u00e1ntos bits se utilizan para representar una direcci\u00f3n de memoria).</li> </ul> <p>Nota</p> <p>Puede haber combinaciones, es decir CPU de 32 bits con 24 bits de direcciones, o buses de datos hacia perifericos de 8/16 bits.</p>"}, {"location": "clases/sistemas-embebidos-i/Bloque0-Introduccion/Tema_A/#efectos-del-tamano", "title": "Efectos  del Tama\u00f1o:", "text": "<ol> <li>El ancho de direcciones limita la memoria maxima</li> <li>Mas bits permiten operaciones aritmeticas y de memoria en menos ciclos</li> <li>Las arquitecturas pequenas pueden ahorrar energia y precio.</li> </ol> Ancho de direcciones M\u00e1ximo direccionable 8 bit 256 B 16 bit 64 KiB 24 bit 16 MiB 32 bit 4 GiB 40 bit 1 TiB 48 bit 256 TiB 64 bit 16 EiB (te\u00f3rico)"}, {"location": "clases/sistemas-embebidos-i/Bloque0-Introduccion/Tema_A/#comparacion-entre-tamanos", "title": "Comparacion entre Tama\u00f1os", "text": "Criterio 8/16 bits 32 bits (MCU/MPU) 64 bits (SoC) Complejidad / costo HW Muy bajo Bajo\u2013medio Medio\u2013alto Consumo energ\u00e9tico Muy bajo (frecuencias modestas) Bajo con buen rendimiento/Hz Mayor en promedio Espacio direccionable (orientativo) 8\u201316 b: 256 B\u201364 KiB Hasta 4 GiB (te\u00f3rico) Hasta 16 EiB (te\u00f3rico) Tama\u00f1o de puntero t\u00edpico (C/C++) 16 b 32 b 64 b Desempe\u00f1o en enteros/32 b Limitado (multi-ciclo) Muy bueno (nativo) Excelente FPU/DSP / Criptograf\u00eda Raro / externo Frecuente (M4/M7/RV32-F/D; aceleradores AES/SHA) Frecuente / avanzado (SIMD, AES-NI, etc.) RTOS / Tiempo real Posible, con l\u00edmites Muy bueno (determinismo + perif\u00e9ricos modernos) Menos determinista en SoC complejos SO viable Bare-metal/RTOS Bare-metal/RTOS; Linux en 32 b con MMU (Cortex-A, etc.) Linux/Unix de pleno derecho Conectividad moderna (TLS/OTA) Limitada S\u00f3lida (Wi-Fi/BLE/Cell + TLS) Completa (redes, contenedores, etc.) Temporizadores (resoluci\u00f3n/rango) Resoluci\u00f3n buena, rango corto Excelente equilibrio (timers 32 b) Depende del SoC; no foco principal Time-to-market (ecosistema) Menor oferta actual Muy alto (toolchains, HAL, stacks, RTOS) Alto, pero mayor complejidad Casos t\u00edpicos Control simple, legacy, ultra-bajo costo IoT, control de motor, audio b\u00e1sico, gateways ligeros, HMI simple Linux, UI compleja, visi\u00f3n/ML ligero, RAM &gt; 1\u20132 GiB Riesgos Tope de memoria, software limitado Elegir de m\u00e1s/menos (over/under-spec) Consumo, costo, integraci\u00f3n compleja Ejemplos comerciales Microchip PIC16/PIC18, AVR ATmega328P/ATmega32U4, TI MSP430 (16 b), Renesas RL78 ST STM32 (F0/G0/F4/H7\u2026), NXP LPC55Sxx / Kinetis, Microchip SAMD21/SAMC21/SAME5x, Nordic nRF52/nRF53, Espressif ESP32/ESP32-C3, Raspberry Pi RP2040 Broadcom BCM2711 (Raspberry Pi 4, Cortex-A72), NXP i.MX 8M (Cortex-A53), TI Sitara AM64x (Cortex-A53), Rockchip RK3566/68 (Cortex-A55), Allwinner A64 (Cortex-A53)"}, {"location": "clases/sistemas-embebidos-i/Bloque0-Introduccion/Tema_A/#ejemplos-de-aplicaciones", "title": "Ejemplos de aplicaciones", "text": ""}, {"location": "clases/sistemas-embebidos-i/Bloque0-Introduccion/Tema_A/#misma-palabra-32-bits-von-neumann-vs-harvard", "title": "Misma palabra (32 bits), Von Neumann vs. Harvard", "text": "<p>Asumamos la siguiente operacion de programacion</p> <pre><code>uint32_t sum = 0;\nfor (size_t i = 0; i &lt; N; i++) {\n    sum += A[i];\n}\n</code></pre> <p>Para este codigo tendremos los siguientes supuestos:</p> <ul> <li>Carga de 32 bits = 1 acceso de datos.</li> <li>ADD = 1 ciclo de ALU.</li> <li>Bifurcaci\u00f3n/final de bucle = 1 instrucci\u00f3n (se cuenta su fetch).</li> <li>Sin cach\u00e9, sin esperas de memoria, pipeline simple.</li> <li>En Von Neumann hay un bus \u00fanico (instrucciones y datos compiten).</li> <li>En Harvard hay dos buses (instrucciones y datos en paralelo).</li> </ul> Concepto Von Neumann (bus \u00fanico) Harvard (buses I/D) Fetch <code>LDR</code> (leer instrucci\u00f3n) 1 ciclo 1 ciclo (I-bus) Lectura <code>A[i]</code> (dato 32b) 1 ciclo 1 ciclo (D-bus, en paralelo) Fetch <code>ADD</code> 1 ciclo 1 ciclo (I-bus) Fetch <code>BNE</code>/fin de bucle 1 ciclo 1 ciclo (I-bus) Total por iteraci\u00f3n \u2248 4 ciclos \u2248 3 ciclos <pre><code>%%{init: {'gantt': {'axisFormat': '%Q'}} }%%\ngantt\n  dateFormat  x\n  title Von Neumann 32 bits (ciclos por iteraci\u00f3n)\n  section Bus \u00fanico\n  Fetch LDR             :a1, 0, 1\n  Fetch de datos (A[i]) :a2, 1, 1\n  Fetch ADD             :a3, 2, 1\n  Fetch BNE/loop        :a4, 3, 1\n</code></pre> <pre><code>%%{init: {'gantt': {'axisFormat': '%Q'}} }%%\ngantt\n  dateFormat  x\n  title Harvard 32 bits (ciclos por iteraci\u00f3n)\n  section I-bus (instrucciones)\n  Fetch LDR        :i1, 0, 1\n  Fetch ADD        :i2, 1, 1\n  Fetch BNE/loop   :i3, 2, 1\n  section D-bus (datos)\n  Read A[i]        :d1, 0, 1\n</code></pre>"}, {"location": "clases/sistemas-embebidos-i/Bloque0-Introduccion/Tema_A/#misma-arquitectura-harvard-distinto-tamano-de-palabra", "title": "Misma arquitectura (Harvard), distinto tama\u00f1o de palabra", "text": "<pre><code>uint32_t sum = 0;\nfor (size_t i = 0; i &lt; N; i++) {\n    sum += A[i];\n}\n</code></pre> <p>Tomaremos los siguientes supuestos donde w es el tama\u00f1o de palabra:</p> <ul> <li>Cargas: 32 / w accesos de datos</li> <li>Suma: 32 / w operaciones de ALU</li> <li>Bifurcaci\u00f3n: \u2248 1 instrucci\u00f3n Ciclos \u2248 2\u00b7(32/w) + 1</li> </ul> Tama\u00f1o de palabra w Cargas (32/w) Sumas (32/w) Branch Total aprox. 8 bits 4 4 1 \u2248 9 16 bits 2 2 1 \u2248 5 32 bits 1 1 1 \u2248 3 <p>Nota</p> <p>En la pr\u00e1ctica abundan dise\u00f1os Harvard modificados (separaci\u00f3n I/D con caminos de cruce o regiones compartidas para facilitar DMA/bootloader).</p>"}, {"location": "clases/sistemas-embebidos-i/Bloque0-Introduccion/Tema_A/#isa-y-microarquitectura-risc-vs-cisc-para-embebidos", "title": "ISA y microarquitectura: RISC vs CISC para embebidos", "text": "<ul> <li>ISA (Instruction Set Architecture) es el conjunto de instrucciones que un procesador puede entender y ejecutar, as\u00ed como el manejo de excepciones/interrupciones.</li> <li>Una microarquitectura es la manera en que una arquitectura del conjunto de instrucciones (ISA) se implementa f\u00edsicamente en un procesador que caen en principalmente dos categor\u00edas.</li> <li>RISC (Reduced Instruction Set Computer).</li> <li>CISC (Complex Instruction Set Computer).</li> </ul>"}, {"location": "clases/sistemas-embebidos-i/Bloque0-Introduccion/Tema_A/#risc-reduced-instruction-set-computer", "title": "RISC (Reduced Instruction Set Computer).", "text": "<p>La idea principal detr\u00e1s de esto es simplificar el hardware mediante el uso de un conjunto de instrucciones de unos pocos pasos basicos para cargar, evaluar y almacenar operaci\u00f3n, por ejemplo un comando de carga (LOAD) o un comando de almacenamiento (STORE).</p> <p>Sus principales caracter\u00edsticas son:</p> <ul> <li>Instrucciones m\u00e1s simples, por lo tanto decodificaci\u00f3n de instrucciones sencilla.</li> <li>La instrucci\u00f3n viene en un tama\u00f1o inferior a una palabra.</li> <li>La instrucci\u00f3n permite un pipeline corto; idealmente ~1 instrucci\u00f3n/ciclo.</li> <li>Registros m\u00e1s generales.</li> <li>Modos de direccionamiento simples.</li> <li>Menos tipos de datos.</li> <li>Es posible crear un pipeline.</li> </ul>"}, {"location": "clases/sistemas-embebidos-i/Bloque0-Introduccion/Tema_A/#cisc-complex-instruction-set-computer", "title": "CISC (Complex Instruction Set Computer).", "text": "<p>La idea principal es que una sola instrucci\u00f3n realizar\u00e1 todas las operaciones de carga, evaluaci\u00f3n y almacenamiento, tal como un comando de multiplicaci\u00f3n har\u00e1 cosas como cargar datos, evaluarlos y almacenarlos, por lo tanto, es complejo.</p> <p>Sus principales caracter\u00edsticas son:</p> <ul> <li>Instrucci\u00f3n compleja, por lo tanto decodificaci\u00f3n de instrucciones complejas.</li> <li>Las instrucciones tienen un tama\u00f1o mayor a una palabra.</li> <li>La instrucci\u00f3n puede tardar m\u00e1s de un ciclo de reloj para ejecutarse.</li> <li>Hist\u00f3ricamente menor n\u00famero de registros de prop\u00f3sito general, ya que las operaciones se realizan en la propia memoria.</li> <li>Modos de direccionamiento complejos.</li> <li>M\u00e1s tipos de datos.</li> </ul>"}, {"location": "clases/sistemas-embebidos-i/Bloque0-Introduccion/Tema_A/#comparativa-risc-vs-cisc", "title": "Comparativa RISC vs CISC", "text": "Categor\u00eda RISC CISC Tama\u00f1o de c\u00f3digo Mayor (se requieren m\u00e1s instrucciones). Menor (instrucciones complejas reducen l\u00edneas de c\u00f3digo). Velocidad de ejecuci\u00f3n M\u00e1s r\u00e1pida (instrucciones simples, f\u00e1cil decodificaci\u00f3n). M\u00e1s lenta (instrucciones complejas, mayor tiempo de decodificaci\u00f3n). Consumo de energ\u00eda Menor (ventaja para dispositivos port\u00e1tiles/embebidos). Mayor (complejidad del conjunto de instrucciones). Uso de memoria (programa) Mayor (m\u00e1s instrucciones para tareas complejas). Menor / m\u00e1s eficiente (menos instrucciones para tareas complejas). Complejidad del dise\u00f1o/ISA Menor (conjunto m\u00e1s peque\u00f1o y regular). Mayor (conjunto amplio y heterog\u00e9neo; dise\u00f1o y fabricaci\u00f3n m\u00e1s complejos). N\u00famero de instrucciones Se necesitan m\u00e1s instrucciones para tareas complejas. Menos instrucciones para la misma tarea (cada instrucci\u00f3n hace m\u00e1s). Costo de desarrollo/fabricaci\u00f3n Puede ser mayor (seg\u00fan tu nota original). Puede ser menor relativo a RISC (seg\u00fan tu nota original). Ejemplos de ISAs/familias y usos t\u00edpicos ARM (Cortex-M/A/R): STMicro (STM32), NXP, TI, Microchip (SAM), Nordic, Renesas, Samsung Exynos, Qualcomm Snapdragon, Broadcom (Raspberry Pi), Apple M-series; RISC-V: SiFive, Espressif (ESP32-C3/C6/H2), Kendryte K210, Bouffalo Lab BL602/604, StarFive; MIPS (hist.): Microchip PIC32, Loongson (GP); Power/PowerPC: NXP MPC5xxx (auto), IBM (servidor); SPARC (LEON en aeroespacial); SuperH (Renesas SH); AVR (Atmel/Microchip 8-bit); MSP430 (TI 16-bit); ARC (Synopsys); Xtensa (Cadence, p.ej. ESP32 \u201ccl\u00e1sico\u201d LX6/LX7); OpenRISC; Nios II (Intel FPGA), MicroBlaze (Xilinx FPGA). x86/x86-64: Intel (Core/Atom), AMD (Ryzen/EPYC); Motorola 68000/ColdFire (hist./embebidos cl\u00e1sicos), VAX (hist.); Z80 (Zilog, cl\u00e1sico/retro/embebido simple), 6502 (WDC 65C02/65C816, retro/industrial), 8051 (MCS-51, m\u00faltiples fabricantes como Nuvoton/Silicon Labs), Renesas RX/RL78 (CISC 32/16-bit), 68HC11/HC12 (cl\u00e1sicos)."}, {"location": "clases/sistemas-embebidos-i/Bloque0-Introduccion/Tema_A/#checklist-para-elegir-un-mcu", "title": "Checklist para elegir un MCU", "text": "<p>Checklist r\u00e1pido para elegir MCU</p> <ul> <li>Requisitos de tiempo real (duro/blando) y latencia de E/S</li> <li>Consumo/energ\u00eda y modos sleep</li> <li>Perif\u00e9ricos clave (ADC, PWM, DMA, comms)</li> <li>Memoria necesaria (Flash/SRAM) + seguridad (WDT, MPUs)</li> <li>Ecosistema (HAL, RTOS, toolchain, comunidad)</li> <li>Coste y disponibilidad (vida \u00fatil del producto)</li> </ul>"}, {"location": "clases/sistemas-embebidos-i/Bloque1-GPIO/Tema_B/", "title": "Entorno y Toolchain", "text": ""}, {"location": "clases/sistemas-embebidos-i/Bloque1-GPIO/Tema_B/#conceptos-base", "title": "Conceptos base", "text": ""}, {"location": "clases/sistemas-embebidos-i/Bloque1-GPIO/Tema_B/#lenguajes-de-alto-bajo-y-nivel-intermedio", "title": "Lenguajes de alto, bajo y nivel intermedio", "text": "<ul> <li>Bajo nivel: cercanos al hardware, poca abstracci\u00f3n. Ej.: ensamblador. Control fino de registros y memoria; m\u00e1xima dependencia de la arquitectura.</li> <li>Alto nivel: mucha abstracci\u00f3n (tipos complejos, manejo autom\u00e1tico de memoria, librer\u00edas ricas). Ej.: Python, Java, C#.</li> <li>Nivel intermedio (tambi\u00e9n llamado nivel medio): balance entre control de hardware y abstracci\u00f3n. Tradicionalmente se ubica aqu\u00ed C (permite acceso directo a memoria y, a la vez, estructuras y funciones portables).</li> </ul>"}, {"location": "clases/sistemas-embebidos-i/Bloque1-GPIO/Tema_B/#compilar-e-interpretar", "title": "Compilar e Interpretar", "text": "<ul> <li>Compilar: traducir el c\u00f3digo fuente a c\u00f3digo m\u00e1quina nativo (o a ensamblador/objeto intermedio) antes de ejecutar. El resultado es un binario para una arquitectura/ABI espec\u00edficas. Puede incluir enlazado, optimizaci\u00f3n y s\u00edmbolos de depuraci\u00f3n.</li> <li>Interpretar: ejecutar el programa leyendo instrucciones del c\u00f3digo fuente (o de un bytecode) y realizando acciones durante la ejecuci\u00f3n, sin producir un binario nativo completo por adelantado.</li> <li>JIT (Just-In-Time): punto medio. El int\u00e9rprete compila en tiempo de ejecuci\u00f3n los fragmentos \u201ccalientes\u201d a nativo para acelerar.</li> </ul> Aspecto Compilado (Ahead of Time AOT) Interpretado JIT Momento de traducci\u00f3n Antes de correr Durante la ejecuci\u00f3n Durante, por partes Binario nativo S\u00ed No (o parcial) Parcial/temporal Rendimiento t\u00edpico Alto y estable Menor, depende del int\u00e9rprete Sube con el calentamiento Portabilidad Menor (por arquitectura) Alta (un int\u00e9rprete por plataforma) Alta, con coste de complejidad Tiempo de arranque R\u00e1pido R\u00e1pido (si no compila) Puede tardar en \u201ccalentar\u201d Depuraci\u00f3n Con s\u00edmbolos y GDB/LLDB A menudo con REPL y trazas Mezcla: profiler + depurador"}, {"location": "clases/sistemas-embebidos-i/Bloque1-GPIO/Tema_B/#de-codigo-a-silicio", "title": "De codigo a silicio", "text": "<p>Compilado (Ahead of Time AOT)</p> <ol> <li>Preprocesado: expandir #include y macros, quitar comentarios/condicionales, para obtener un c\u00f3digo limpio.</li> <li>An\u00e1lisis y parseo: leer tokens, validar sintaxis y construir una representaci\u00f3n interna AST/IR (\u00e1rbol o representaci\u00f3n intermedia).</li> <li>Optimizacion: aplicar mejoras independientes de la arquitectura (inlining, eliminar c\u00f3digo muerto, etc.).</li> <li>Seleccion de instrucciones y registros: traducir el IR a c\u00f3digo para la ISA destino y asignar registros/pila. Obteniendo un ensamblador o codigo m\u00e1quina.</li> <li>Ensamblado: Convierte el ensamblador a objeto relocable (.o).</li> <li>Enlazado: Combina objetos/bibliotecas, resuelve s\u00edmbolos y genera el binario final.</li> <li>Carga (loader/bootloader): colocar el binario en memoria y saltar al punto de entrada, para ejecutar.</li> </ol> <p>Interpretado</p> <ol> <li>An\u00e1lisis y parseo del fuente: leer tokens, validar sintaxis y preparar una forma interna navegable.</li> <li>Inicializaci\u00f3n del entorno de ejecuci\u00f3n: preparar espacios de nombres, stack de llamadas, heap y cargar bibliotecas est\u00e1ndar del lenguaje.</li> <li>Bucle del int\u00e9rprete (evaluaci\u00f3n): recorrer el AST (o estructura equivalente) nodo por nodo y ejecutar sus acciones (expresiones, sentencias, control de flujo).</li> <li>Gesti\u00f3n de funciones y llamadas externas (FFI) \u2014 opcional: permitir que el c\u00f3digo interpretado invoque primitivas nativas (E/S, tiempo, sockets) a trav\u00e9s del runtime. </li> <li>Depuraci\u00f3n y trazas: instrumentar la ejecuci\u00f3n con REPL, tracebacks, logging y puntos de interrupci\u00f3n a nivel fuente.</li> <li>Finalizaci\u00f3n: liberar recursos del runtime y reportar estado de salida. </li> </ol>"}, {"location": "clases/sistemas-embebidos-i/Bloque1-GPIO/Tema_B/#terminos-comunes", "title": "T\u00e9rminos Comunes", "text": "<ul> <li>IR / AST*: representaciones internas del programa que facilitan an\u00e1lisis y optimizaci\u00f3n.</li> <li>Enlazador (linker): une objetos/bibliotecas y resuelve s\u00edmbolos \u2192 binario final.</li> <li>Loader/bootloader: coloca el binario en memoria y transfiere el control al programa.</li> <li>ISA: conjunto de instrucciones de la CPU (define c\u00f3mo debe generarse el c\u00f3digo).</li> <li>ABI: reglas binarias (llamadas, registros, layout) para que objetos/bibliotecas encajen.</li> <li>Objeto relocable (.o): c\u00f3digo ya ensamblado pero sin direcciones finales (previo al enlazado).</li> <li>S\u00edmbolos de depuraci\u00f3n: metadatos que relacionan direcciones con l\u00edneas/variables (clave para depurar).</li> <li>Toolchain: conjunto de herramientas (compilador, enlazador, etc.) para construir el software.</li> </ul>"}, {"location": "clases/sistemas-embebidos-i/Bloque1-GPIO/Tema_B/#plataforma-y-entorno-con-vs-code", "title": "Plataforma y entorno con VS Code", "text": ""}, {"location": "clases/sistemas-embebidos-i/Bloque1-GPIO/Tema_B/#arquitectura-objetivo", "title": "Arquitectura objetivo", "text": "<p>La Pico 2 monta el RP2350, que permite elegir una de estas rutas de compilaci\u00f3n:</p> <pre><code>graph TD\n    A[RP2350] --&gt;|Opci\u00f3n recomendada| ARM[Cortex-M33]\n    A --&gt;|Opci\u00f3n secundaria| RISCV[RISC-V Hazard3]</code></pre> <p>Nota</p> <p>La opci\u00f3n recomendada (Cortex-M33) ofrece un mejor rendimiento y soporte, mientras que la opci\u00f3n secundaria (RISC-V Hazard3) puede ser \u00fatil para experimentaci\u00f3n o compatibilidad con otros proyectos.</p>"}, {"location": "clases/sistemas-embebidos-i/Bloque1-GPIO/Tema_B/#instalacion-y-configuracion", "title": "Instalacion y Configuracion", "text": "<ol> <li> <p>Instala VS Code</p> </li> <li> <p>Abre VS Code, ve a extensiones y busca e instala \"Raspberry Pi Pico\". </p> </li> <li>Crea un proyecto base.<ol> <li>En la Barra lateral seleccion el simbolo de \"Raspberry pi pico project\"</li> <li>Selecciona nuevo proyecto C/C++</li> <li>Da clic en el boton para cambiar a plantillas ejemplo</li> <li>Selecciona la Plantilla \"Blink\" </li> <li>Selecciona el tipo de placa que tienes</li> <li>Da clic en \"Crear Proyecto\" </li> </ol> </li> <li>Compila y carga el programa en la placa.<ol> <li>En la barra lateral izquierda selecciona el archivo principal blink.c.</li> <li>Haz clic en el bot\u00f3n de \"Compilar\" .</li> <li>Espera a que la compilaci\u00f3n termine sin errores, y verifica que se haya creado un target file UF2.</li> <li>Conecta tu placa verificando que aparezca como dispositivo USB RPI-RP2. Para programarlo arrastra el UF2 a la unidad correspondiente o haz clic en el bot\u00f3n de \"Cargar\" . </li> </ol> </li> </ol> Error de carga <p>En caso de que aparezca el error  <code>No accessible RP2040/RP2350 devices in BOOTSEL mode were found.</code> acompa\u00f1ado de  <code>Device at bus 1, address 7 appears to be a RP2040 device in BOOTSEL mode, but picotool was unable to connect</code> descarga y corre zadig, selecciona <code>RP2 Boot (Interface 1)</code> y selecciona <code>WinUSB</code> y dale clic a instalar driver. </p>"}, {"location": "clases/sistemas-embebidos-i/Bloque1-GPIO/Tema_B/#primer-codigo", "title": "Primer Codigo", "text": "<p>Codigo minimo para un blink</p> <pre><code>#include \"pico/stdlib.h\"\n\nint main(void) {\n    const uint led = PICO_DEFAULT_LED_PIN;\n    gpio_init(led);\n    gpio_set_dir(led, GPIO_OUT);\n    while (true) {\n        gpio_put(led, 1);\n        sleep_ms(250);\n        gpio_put(led, 0);\n        sleep_ms(250);\n    }\n}\n</code></pre>"}, {"location": "clases/sistemas-embebidos-i/Bloque1-GPIO/Tema_B/#descripcion-de-partes", "title": "Descripcion de partes", "text": "<ul> <li><code>#include \"pico/stdlib.h\"</code>: Incluye la biblioteca est\u00e1ndar de Pico, que proporciona funciones para interactuar con el hardware.</li> <li><code>int main(void)</code>: Punto de entrada de la aplicaci\u00f3n, En embebidos, el startup code inicializa memoria y llama a <code>main</code>.</li> <li><code>const uint led = PICO_DEFAULT_LED_PIN;</code>:      -<code>const</code> protege contra reasignaciones accidentales.     -<code>uint</code>: entero sin signo (un GPIO no es negativo). Alternativa fija: uint32_t.<ul> <li><code>PICO_DEFAULT_LED_PIN</code>: constante que representa el pin LED predeterminado de la placa.</li> </ul> </li> <li><code>while(true)</code>: Bucle infinito que mantiene el programa en ejecuci\u00f3n.</li> </ul>"}, {"location": "clases/sistemas-embebidos-i/Bloque1-GPIO/Tema_C/", "title": "Control de GPIO", "text": "<p>Este tutorial gu\u00eda desde la manipulaci\u00f3n de registros hasta el uso de abstracciones modernas (SDKs, HALs) para controlar GPIO en microcontroladores.</p>"}, {"location": "clases/sistemas-embebidos-i/Bloque1-GPIO/Tema_C/#1-que-es-el-control-de-registros", "title": "1. \u00bfQu\u00e9 es el control de registros?", "text": "<p>Un registro es una peque\u00f1a memoria interna del microcontrolador, normalmente de 8, 16 o 32 bits. Cada bit de un registro controla o refleja el estado de alguna funci\u00f3n del hardware: habilitar una salida, indicar una entrada, seleccionar un modo, etc.</p> <p>Cuando se programa a nivel de registro, se leen y escriben directamente las direcciones de memoria donde residen esos registros, sin funciones de librer\u00edas de alto nivel. Perif\u00e9ricos (GPIO, UART, Timers\u2026) exponen campos de bits para direcci\u00f3n, datos, pulls, etc.</p> <p>Muchos MCUs ofrecen escrituras at\u00f3micas \u201cWrite-1-to-Set/Clear/XOR\u201d (SET/CLR/XOR) para afectar solo los bits indicados, evitando condiciones de carrera.</p> <p>Ejemplos de familias:</p> <ul> <li> <p>ATmega328P (Arduino Uno):</p> </li> <li> <p><code>DDRB</code> \u2192 direcci\u00f3n de datos (input/output)</p> </li> <li><code>PORTB</code> \u2192 valores de salida</li> <li><code>PINB</code> \u2192 lectura de entradas</li> <li> <p>RP2040 (Pico 2):</p> </li> <li> <p><code>SIO-&gt;gpio_oe</code> \u2192 configuraci\u00f3n de pines como salida</p> </li> <li><code>SIO-&gt;gpio_out</code> \u2192 valores de salida</li> <li><code>SIO-&gt;gpio_in</code> \u2192 lectura de entradas</li> </ul> <p>La idea transversal es la misma: leer y escribir bits en registros.</p>"}, {"location": "clases/sistemas-embebidos-i/Bloque1-GPIO/Tema_C/#2-gpio-por-dentro", "title": "2. GPIO por dentro", "text": "<p>Ideas clave :</p> <ul> <li>\"IOMUX/AF\": selecciona la funci\u00f3n del pin (GPIO, UART, SPI\u2026).</li> <li>\"DIR/OE\": habilita el driver de salida del pin.</li> <li>\"OUT/DATA\": fija el nivel l\u00f3gico.</li> <li>\"IN\": lee el estado del pin.</li> <li>\"PULL-UP/DOWN\": resistencias internas para fijar nivel cuando est\u00e1 en entrada.</li> </ul>"}, {"location": "clases/sistemas-embebidos-i/Bloque1-GPIO/Tema_C/#3-representacion-numerica", "title": "3. Representacion Numerica", "text": "Expresi\u00f3n Binario Hex Decimal <code>1u &lt;&lt; 0</code> <code>0b00000001</code> <code>0x01</code> 1 <code>1u &lt;&lt; 2</code> <code>0b00000100</code> <code>0x04</code> 4 <code>1u &lt;&lt; 5</code> <code>0b00100000</code> <code>0x20</code> 32 <code>1u &lt;&lt; 7</code> <code>0b10000000</code> <code>0x80</code> 128 <p>Nota</p> <p>Por qu\u00e9 usar desplazamientos (&lt;&lt;): es una forma compacta de \u201cponer a 1 el bit n\u201d sin escribir literales binarios/hex largos. Puedes usar indistintamente binario, hex o decimal (son equivalentes).</p>"}, {"location": "clases/sistemas-embebidos-i/Bloque1-GPIO/Tema_C/#4-operadores-bit-a-bit-bitwise-en-c", "title": "4. Operadores bit a bit (bitwise) en C", "text": "<p>Para manipular registros se usan operadores bitwise:</p> Operador Uso Ejemplo Explicaci\u00f3n <code>|</code> (OR) Poner bits en 1 `reg = (1u &lt;&lt; n);` Fuerza el bit n a 1 sin afectar otros bits en 0 <code>&amp;</code> (AND) Conservar ciertos bits <code>reg &amp;= mask;</code> Mantiene 1 solo donde <code>mask</code> tiene 1 <code>~</code> (NOT) Invertir bits <code>~(1u &lt;&lt; n)</code> M\u00e1scara con todos 1 excepto el bit n <code>^</code> (XOR) Alternar (toggle) <code>reg ^= (1u &lt;&lt; n);</code> Cambia el bit n de 0\u21941 <code>&lt;&lt;</code>, <code>&gt;&gt;</code> (shift) Desplazar <code>(1u &lt;&lt; 5)</code> Genera un valor con el bit 5 en 1 <p>Ejemplos por operador</p> <p>AND &amp;:</p> <p><code>0b11001010 &amp; 0b11110000 = 0b11000000</code></p> <p><code>0x5A &amp; 0x0F = 0x0A (90 &amp; 15 = 10)</code></p> <p>OR |:</p> <p><code>0b01010000 | 0b00000110 = 0b01010110</code></p> <p><code>0x20 | 0x04 = 0x24</code></p> <p>XOR ^:</p> <p><code>0b00001111 ^ 0b00000101 = 0b00001010</code></p> <p><code>0xAA ^ 0xFF = 0x55</code></p> <p>NOT ~:</p> <p><code>~0b00001111 = 0b11110000</code> (en 8 bits)</p> <p><code>~0x00 = 0xFF</code></p> <p>Shifts:</p> <p><code>1u &lt;&lt; 2 = 0b00000100 = 0x04</code></p> <p><code>0b10000000 &gt;&gt; 3 = 0b00010000 = 0x10</code></p>"}, {"location": "clases/sistemas-embebidos-i/Bloque1-GPIO/Tema_C/#5-el-bloque-sio-single-cycle-io-en-rp2040", "title": "5. El bloque SIO (Single-Cycle I/O) en RP2040", "text": "<p>SIO es la unidad del RP2040 para acceso r\u00e1pido a GPIO. Proporciona registros de lectura/escritura directa con operaciones at\u00f3micas por bits.</p>"}, {"location": "clases/sistemas-embebidos-i/Bloque1-GPIO/Tema_C/#registros-principales-de-sio", "title": "Registros principales de SIO", "text": "<ul> <li><code>gpio_oe</code> \u2192 estado de direcci\u00f3n (1 = salida, 0 = entrada)</li> <li><code>gpio_oe_set</code> \u2192 pone bits a 1 (salida)</li> <li><code>gpio_oe_clr</code> \u2192 pone bits a 0 (entrada)</li> <li><code>gpio_oe_togl</code> \u2192 invierte bits (entrada \u2194 salida)</li> <li><code>gpio_out</code> \u2192 estado actual de salidas</li> <li><code>gpio_set</code> \u2192 pone pines en alto (1) de forma at\u00f3mica multipin</li> <li><code>gpio_clr</code> \u2192 pone pines en bajo (0) de forma at\u00f3mica multipin</li> <li><code>gpio_togl</code> \u2192 invierte pines de forma at\u00f3mica multipin</li> <li><code>gpio_in</code> \u2192 lectura de entradas</li> </ul> <p>Cada bit corresponde a un GPIO (bit 2 controla GPIO2, etc.).</p>"}, {"location": "clases/sistemas-embebidos-i/Bloque1-GPIO/Tema_C/#de-registros-a-sdks-y-hals-catalogo-de-comandos", "title": "De registros a SDKs y HALs (cat\u00e1logo de comandos)", "text": "<p>Pico SDK (C, equilibrio control/portabilidad)</p> <ul> <li>Inicializaci\u00f3n: <code>gpio_init(pin)</code>, <code>gpio_init_mask(mask)</code></li> <li>Direcci\u00f3n: <code>gpio_set_dir(pin, bool)</code>, <code>gpio_set_dir_out_masked(mask)</code>, <code>gpio_set_dir_in_masked(mask)</code></li> <li>Escritura por pin: <code>gpio_put(pin, 0/1)</code></li> <li>Escritura multipin at\u00f3mica: <code>gpio_set_mask(mask)</code>, <code>gpio_clr_mask(mask)</code>, <code>gpio_xor_mask(mask)</code>, <code>gpio_put_masked(mask, value)</code></li> <li>Lectura y pulls: <code>gpio_get(pin)</code>, <code>gpio_pull_up(pin)</code>, <code>gpio_pull_down(pin)</code>, <code>gpio_disable_pulls(pin)</code></li> </ul> <p>Arduino (muy portable, m\u00e1s alto nivel)</p> <ul> <li>Direcci\u00f3n: <code>pinMode(pin, INPUT/OUTPUT/INPUT_PULLUP/INPUT_PULLDOWN)</code></li> <li>I/O digital: <code>digitalWrite(pin, HIGH/LOW), digitalRead(pin)</code></li> </ul> <p>MicroPython/CircuitPython (prototipado r\u00e1pido)</p> <ul> <li><code>from machine import Pin</code></li> <li><code>Pin(n, Pin.OUT/Pin.IN, pull=Pin.PULL_UP/PULL_DOWN)</code></li> <li><code>p.on()</code>, <code>p.off()</code>, <code>p.value()</code></li> </ul>"}, {"location": "clases/sistemas-embebidos-i/Bloque1-GPIO/Tema_C/#9-primer-codigo-blink", "title": "9. Primer Codigo Blink", "text": "sio_blink.c<pre><code>#include \"pico/stdlib.h\"\n#include \"hardware/structs/sio.h\"\n\nint main() {\n    const uint32_t bit = 1u &lt;&lt; PICO_DEFAULT_LED_PIN;\n\n    gpio_init(PICO_DEFAULT_LED_PIN);           // pone funci\u00f3n SIO y habilita I/O\n    sio_hw-&gt;gpio_oe_set = bit;    // salida (OE=1) at\u00f3mico\n\n    while (true) {\n        sio_hw-&gt;gpio_set = bit;   // alto (usa campo del SDK)\n        sleep_ms(500);\n        sio_hw-&gt;gpio_clr = bit;   // bajo\n        sleep_ms(500);\n    }\n}\n</code></pre> sdk_blink.c<pre><code>// Archivo: sdk_blink.c\n#include \"pico/stdlib.h\"\n#include \"hardware/gpio.h\"\n\n\nint main() {\n    // stdio_init_all(); // OPCIONAL: solo para printf\n\n    gpio_init(PICO_DEFAULT_LED_PIN);            // enruta el pin a GPIO/SIO\n    gpio_set_dir(PICO_DEFAULT_LED_PIN, true);   // salida\n\n    while (true) {\n        gpio_put(PICO_DEFAULT_LED_PIN, 1);      // ON\n        sleep_ms(500);\n        gpio_put(PICO_DEFAULT_LED_PIN, 0);      // OFF\n        sleep_ms(500);\n    }\n}\n</code></pre> sio_toggle_xor.c<pre><code>#include \"pico/stdlib.h\"\n#include \"hardware/structs/sio.h\"\n\nint main() {\n    const uint32_t bit = 1u &lt;&lt; PICO_DEFAULT_LED_PIN;\n\n    gpio_init(PICO_DEFAULT_LED_PIN);            // asegura funci\u00f3n SIO\n    sio_hw-&gt;gpio_oe_set = bit;     // salida\n\n    while (true) {\n        sio_hw-&gt;gpio_togl = bit;   // toggle at\u00f3mico (no gpio_out_xor)\n        sleep_ms(500);\n    }\n}\n</code></pre> sdk_toggle_xor.c<pre><code>#include \"pico/stdlib.h\"\n#include \"hardware/gpio.h\"\n\n\nint main() {\n    gpio_init(PICO_DEFAULT_LED_PIN);\n    gpio_set_dir(PICO_DEFAULT_LED_PIN, true);\n\n    const uint32_t bit = (1u &lt;&lt; PICO_DEFAULT_LED_PIN);\n    while (true) {\n        gpio_xor_mask(bit); // alternar SOLO ese pin\n        sleep_ms(500);\n    }\n}\n</code></pre>"}, {"location": "clases/sistemas-embebidos-i/Bloque1-GPIO/Tema_C/#mascaras", "title": "M\u00e1scaras", "text": "<p>Una m\u00e1scara es un patr\u00f3n de bits utilizado para seleccionar, modificar o verificar bits espec\u00edficos dentro de un registro o un conjunto de datos. Las m\u00e1scaras se utilizan com\u00fanmente en operaciones de manipulaci\u00f3n de bits, como la configuraci\u00f3n de pines GPIO, donde se puede utilizar una m\u00e1scara para afectar solo a un subconjunto de pines en lugar de a todos ellos.</p> <p><pre><code> ... 0000 0000 0000 0000 0000 0101 0100\n                              ^ ^  ^\n                              | |  \u2514\u2500 selecciona GPIO 2\n                              | \u2514\u2500\u2500\u2500 selecciona GPIO 4\n                              \u2514\u2500\u2500\u2500\u2500\u2500 selecciona GPIO 6\n</code></pre> Si esa m\u00e1scara es <code>MASK = (1u&lt;&lt;2) | (1u&lt;&lt;4) | (1u&lt;&lt;6)</code>, entonces una sola escritura a los registros SET/CLR/XOR del SIO puede encender, apagar o alternar todos esos pines a la vez.</p>"}, {"location": "clases/sistemas-embebidos-i/Bloque1-GPIO/Tema_C/#construccion-de-mascaras", "title": "Construccion de Mascaras", "text": "<ul> <li>Un solo pin: <code>1u &lt;&lt; PIN</code></li> <li>Varios pines: <code>((1u &lt;&lt; PIN1) | (1u &lt;&lt; PIN2) | (1u &lt;&lt; PIN3))</code></li> <li>Rango contiguo(\"bus\"): <code>MASK_N_BITS = ((1u &lt;&lt; N) - 1u) &lt;&lt; SHIFT</code>         - para 3 bits en GPIO de 10..12 -&gt; <code>MASK = ((1u &lt;&lt; 3) - 1u) &lt;&lt; 10</code></li> </ul>"}, {"location": "clases/sistemas-embebidos-i/Bloque1-GPIO/Tema_C/#ejemplos-de-mascara-aplicada", "title": "Ejemplos de mascara aplicada", "text": "SIO-atomico<pre><code>#include \"pico/stdlib.h\"\n#include \"hardware/structs/sio.h\"\n\n#define PIN_A 2\n#define PIN_B 4\n#define PIN_C 6\n\nint main() {\n    // 1) M\u00e1scara con varios pines\n    const uint32_t MASK = (1u&lt;&lt;PIN_A) | (1u&lt;&lt;PIN_B) | (1u&lt;&lt;PIN_C);\n\n    // 2) Asegura funci\u00f3n SIO en cada pin (necesario una sola vez)\n    gpio_init(PIN_A);\n    gpio_init(PIN_B);\n    gpio_init(PIN_C);\n\n    // 3) Direcci\u00f3n: salida (OE=1) para TODOS los pines con UNA sola instrucci\u00f3n\n    sio_hw-&gt;gpio_oe_set = MASK;\n\n    while (true) {\n        // 4) SET: pone en alto TODOS los pines de la m\u00e1scara en una sola operaci\u00f3n\n        sio_hw-&gt;gpio_set = MASK;\n        sleep_ms(500);\n\n        // 5) CLR: pone en bajo TODOS los pines de la m\u00e1scara en una sola operaci\u00f3n\n        sio_hw-&gt;gpio_clr = MASK;\n        sleep_ms(500);\n\n        // 6) TOGL (XOR): alterna TODOS los pines de la m\u00e1scara en una sola operaci\u00f3n\n        sio_hw-&gt;gpio_togl = MASK;\n        sleep_ms(500);\n    }\n}\n</code></pre> <p>En el SDK los comandos tipicos son:</p> <ul> <li><code>gpio_set_mask(MASK);</code> \u2192 pone en alto los pines de MASK</li> <li><code>gpio_clr_mask(MASK);</code> \u2192 pone en bajo los pines de MASK</li> <li><code>gpio_xor_mask(MASK);</code> \u2192 alterna los pines de MASK</li> <li><code>gpio_put_masked(MASK, VALUE);</code> \u2192 pone en alto/bajo los pines de MASK seg\u00fan el valor de VALUE</li> </ul> <p>Ejemplo SDK<pre><code>#include \"pico/stdlib.h\"\n#include \"hardware/structs/sio.h\"\n\n#define PIN_A 2\n#define PIN_B 4\n#define PIN_C 6\n\nint main() {\n    // 1) M\u00e1scara con varios pines\n    const uint32_t MASK = (1u&lt;&lt;2) | (1u&lt;&lt;4) | (1u&lt;&lt;6);\n\n    // 2) Asegura funci\u00f3n SIO en cada pin (necesario una sola vez)\n    gpio_init(2);\n    gpio_init(4);\n    gpio_init(6);\n\n    // 3) Direcci\u00f3n: salida (OE=1) para TODOS los pines con UNA sola instrucci\u00f3n\n    sio_hw-&gt;gpio_oe_set = MASK;\n\n    while (true) {\n        gpio_set_mask(MASK);            // alto en 2,4,6\n        sleep_ms(200);\n        gpio_clr_mask(MASK);            // bajo en 2,4,6\n        sleep_ms(200);\n        gpio_xor_mask(MASK);            // toggle en 2,4,6\n    }\n}\n</code></pre></p> EJEMPLO1<pre><code>#include \"pico/stdlib.h\"\n#include \"hardware/gpio.h\"\n\n#define A   0\n#define B   1\n#define C   2\n\nint main() {\n    const uint32_t MASK = (1u&lt;&lt;A) | (1u&lt;&lt;B) | (1u&lt;&lt;C);\n    const uint32_t PATRON = (1u&lt;&lt;C) | (1u&lt;&lt;A);\n\n    gpio_init_mask(MASK);\n    gpio_put_masked(MASK, PATRON);\n    gpio_set_dir_masked(MASK, MASK);   \n\n    while (true) {\n        sleep_ms(500);\n        gpio_xor_mask(MASK);\n    }\n}\n</code></pre> EJEMPLO2<pre><code>#include \"pico/stdlib.h\"\n#include \"hardware/gpio.h\"\n\n#define A   0\n#define B   1\n#define C   2\n\nint main() {\n    const uint32_t MASK = (1u&lt;&lt;0) | (1u&lt;&lt;1) | (1u&lt;&lt;2);\n    gpio_init(0); gpio_init(1); gpio_init(2);\n    sio_hw-&gt;gpio_oe_set = MASK;                 // outputs\n    sio_hw-&gt;gpio_clr    = MASK;                 // clear first\n    sio_hw-&gt;gpio_set    = (1u&lt;&lt;2) | (1u&lt;&lt;0);    // load 101\n\n    while (true) {\n        sleep_ms(500);\n        sio_hw-&gt;gpio_togl = MASK; \n    }\n}\n</code></pre>"}, {"location": "clases/sistemas-embebidos-i/Bloque1-GPIO/Tema_C/#referencias", "title": "Referencias", "text": ""}, {"location": "clases/sistemas-embebidos-i/Bloque1-GPIO/Tema_C/#pinout-pico-2", "title": "Pinout Pico 2", "text": ""}, {"location": "clases/sistemas-embebidos-i/Bloque1-GPIO/Tema_C/#reset-cableado", "title": "Reset Cableado", "text": ""}, {"location": "clases/sistemas-embebidos-i/Bloque1-GPIO/Tema_C/#atomico-un-ciclo", "title": "ATOMICO un ciclo", "text": "<p>Necesario para usarlo</p> <pre><code>`#include \"hardware/structs/sio.h\"`\nAntes conecta cada pin a SIO con `gpio_init(pin);`\n</code></pre> Prop\u00f3sito Registro / Campo Qu\u00e9 hace Leer entradas (todos) <code>sio_hw-&gt;gpio_in</code> Lee niveles de todos los GPIO; enmascara para quedarte con los de inter\u00e9s. Salida: SET <code>sio_hw-&gt;gpio_set = mask;</code> Pone en alto los pines de <code>mask</code> (at\u00f3mico). Salida: CLR <code>sio_hw-&gt;gpio_clr = mask;</code> Pone en bajo los pines de <code>mask</code> (at\u00f3mico). Salida: TOGGLE <code>sio_hw-&gt;gpio_togl = mask;</code> Alterna los pines de <code>mask</code> (XOR at\u00f3mico). Salida: escritura directa <code>sio_hw-&gt;gpio_out = value;</code> Sobrescribe todo el registro de salida (no at\u00f3mico). Direcci\u00f3n: OUT <code>sio_hw-&gt;gpio_oe_set = mask;</code> Pasa a salida los pines de <code>mask</code> (at\u00f3mico). Direcci\u00f3n: IN <code>sio_hw-&gt;gpio_oe_clr = mask;</code> Pasa a entrada los pines de <code>mask</code> (at\u00f3mico). Direcci\u00f3n: alternar <code>sio_hw-&gt;gpio_oe_togl = mask;</code> Alterna IN/OUT (at\u00f3mico)."}, {"location": "clases/sistemas-embebidos-i/Bloque1-GPIO/Tema_C/#sdk-alto-nivel", "title": "SDK - alto nivel", "text": "<p>Necesario para usarlo</p> <pre><code>`#include \"hardware/gpio.h\"`\nAntes conecta cada pin a SIO con `gpio_init(pin);`\n</code></pre> Prop\u00f3sito Llamada Qu\u00e9 hace Enrutar a SIO <code>gpio_init(pin);</code> Selecciona <code>GPIO_FUNC_SIO</code> y habilita buffer de entrada. Init varios pines <code>gpio_init_mask(mask);</code> Igual, pero para m\u00faltiples pines. Habilitar entrada <code>gpio_set_input_enabled(pin, en);</code> Controla el buffer de entrada. Fijar direcci\u00f3n (uno) <code>gpio_set_dir(pin, out);</code> <code>true</code>=salida, <code>false</code>=entrada. Dir. enmascarada <code>gpio_set_dir_masked(mask, value);</code> En <code>mask</code>: 1\u2192salida, 0\u2192entrada. Todos salida <code>gpio_set_dir_out_masked(mask);</code> Pasa a salida los pines de <code>mask</code>. Todos entrada <code>gpio_set_dir_in_masked(mask);</code> Pasa a entrada los pines de <code>mask</code>. Escribir un pin <code>gpio_put(pin, value);</code> Alto/Bajo en un pin. Escribir patr\u00f3n enmascarado <code>gpio_put_masked(mask, value);</code> Actualiza s\u00f3lo los bits de <code>mask</code>. SET en m\u00e1scara <code>gpio_set_mask(mask);</code> Pone en alto todos los bits de <code>mask</code>. CLR en m\u00e1scara <code>gpio_clr_mask(mask);</code> Pone en bajo todos los bits de <code>mask</code>. TOGGLE en m\u00e1scara <code>gpio_xor_mask(mask);</code> Alterna todos los bits de <code>mask</code>."}, {"location": "clases/sistemas-embebidos-i/Bloque1-GPIO/Tema_D/", "title": "Entradas digitales", "text": ""}, {"location": "clases/sistemas-embebidos-i/Bloque1-GPIO/Tema_D/#que-es-una-entrada-digital", "title": "Qu\u00e9 es una entrada digital", "text": "<p>Una entrada digital es un GPIO configurado para leer un nivel l\u00f3gico: alto (1) o bajo (0). A diferencia de una salida, no impone voltaje; solo observa el que llega desde un bot\u00f3n, sensor digital o l\u00f3gica externa.</p>"}, {"location": "clases/sistemas-embebidos-i/Bloque1-GPIO/Tema_D/#estados-posibles", "title": "Estados posibles", "text": "<ul> <li>Alto (1): voltaje considerado como \u201c1\u201d.</li> <li>Bajo (0): voltaje considerado como \u201c0\u201d.</li> <li>Flotante (Z): sin referencia; puede leer valores aleatorios (ev\u00edtalo).</li> </ul>"}, {"location": "clases/sistemas-embebidos-i/Bloque1-GPIO/Tema_D/#niveles-logicos-y-umbrales", "title": "Niveles l\u00f3gicos y umbrales", "text": "<p>En la pr\u00e1ctica, el comparador interno decide 1/0 por umbrales:</p> <ul> <li>1 t\u00edpico: \u2265 \\~2.0\u20132.4 VDD</li> <li>0 t\u00edpico: \u2264 \\~0.5\u20130.8 VDD   Entre ambos hay zona incierta \u2192 evita operar ah\u00ed.</li> </ul> <p></p>"}, {"location": "clases/sistemas-embebidos-i/Bloque1-GPIO/Tema_D/#pull-ups-pull-downs-evitar-flotante", "title": "Pull-ups / Pull-downs (evitar \u201cflotante\u201d)", "text": "<p>Los pulls son resistencias hacia VDD (pull-up) o GND (pull-down) que fijan un estado por defecto cuando la l\u00ednea puede quedar flotante. En el Pi pico2 puedes usar pulls internos o externos.</p> <p>Pulls internos (\u2248 50\u201380 k\u03a9, t\u00edp. \\~50 k\u03a9)</p> <ul> <li>\u00datiles: prototipos r\u00e1pidos, botones cercanos (cables cortos), se\u00f1ales lentas/limpias.</li> <li>Limitaciones: son d\u00e9biles; con cables largos o capacitancia elevada los flancos suben lento y entra ruido. No aptos para buses como I\u00b2C/1-Wire.</li> </ul> <p>Pulls externos (1 k\u03a9\u2013100 k\u03a9)</p> <ul> <li>\u00datiles: buses abiertos (I\u00b2C), cables largos/ambientes ruidosos, control preciso de RC (debounce), o para ajustar consumo/tiempos de subida.</li> <li>Trade-off: R baja \u2192 m\u00e1s corriente y flancos r\u00e1pidos; R alta \u2192 menos corriente y flancos lentos/sensibles a ruido.</li> </ul> <p>Gu\u00eda r\u00e1pida de elecci\u00f3n</p> <ul> <li>Bot\u00f3n local: interno o 10 k\u03a9 externo.</li> <li>Cable largo/ruidoso: 4.7\u201310 k\u03a9 externo (+ Schmitt).</li> <li>I\u00b2C (open-drain): 4.7\u201310 k\u03a9 y ajustar seg\u00fan capacitancia/frecuencia.</li> </ul>"}, {"location": "clases/sistemas-embebidos-i/Bloque1-GPIO/Tema_D/#problemas-tipicos-y-mitigacion", "title": "Problemas t\u00edpicos y mitigaci\u00f3n", "text": ""}, {"location": "clases/sistemas-embebidos-i/Bloque1-GPIO/Tema_D/#rebote-bounce", "title": "Rebote (\u201cbounce\u201d)", "text": "<p>Un bot\u00f3n mec\u00e1nico genera m\u00faltiples conmutaciones en 1\u201320 ms al presionar/soltar. Mitiga con debounce en hardware (RC + Schmitt), en software, o ambos.</p>"}, {"location": "clases/sistemas-embebidos-i/Bloque1-GPIO/Tema_D/#ruido-emi-cables-z", "title": "Ruido (EMI, cables, Z)", "text": "<p>Las entradas flotantes o cables largos capturan interferencia. Mitiga con:</p> <ul> <li>Pull-ups/downs adecuados.</li> <li>RC + Schmitt trigger.</li> <li>Resistencia serie 100\u2013330 \u03a9 para limitar picos.</li> <li>TVS si el entorno es hostil (industrial/automotriz).</li> </ul> <p></p>"}, {"location": "clases/sistemas-embebidos-i/Bloque1-GPIO/Tema_D/#dimensionamiento-practico", "title": "Dimensionamiento pr\u00e1ctico", "text": "<p>Consumo al presionar (activo-bajo con pull-up): \\(I \\approx \\dfrac{V}{R}\\)</p> <ul> <li>3.3 V / 10 k\u03a9 \u2248 0.33 mA</li> <li>3.3 V / 4.7 k\u03a9 \u2248 0.7 mA</li> </ul> <p>RC para debounce (hardware): \\(\\tau = R \\cdot C\\)</p> <ul> <li>Punto de partida: 2\u201310 ms (p. ej., 10 k\u03a9 + 220 nF \u2192 2.2 ms).</li> </ul> <p>Buses abiertos (I\u00b2C):</p> <ul> <li>Comienza con 4.7\u201310 k\u03a9 y ajusta seg\u00fan capacitancia y frecuencia.</li> </ul> <p>Nota RP2350 \u2013 corrientes de E/S: las cifras de corriente por pin (2/4/8/12 mA) y l\u00edmite total \\~50 mA aplican a salidas. En entradas, la corriente la dominan las resistencias de pull y fugas del pad.</p>"}, {"location": "clases/sistemas-embebidos-i/Bloque1-GPIO/Tema_D/#implementacion", "title": "Implementaci\u00f3n", "text": ""}, {"location": "clases/sistemas-embebidos-i/Bloque1-GPIO/Tema_D/#bajo-nivel-padssio", "title": "Bajo nivel (PADS/SIO)", "text": "<pre><code>#include \"pico/stdlib.h\"\n#include \"hardware/structs/sio.h\"\n\n#define button_pin 16\n\nint main(void) {\n    const uint32_t LED_BIT = 1u &lt;&lt; PICO_DEFAULT_LED_PIN; // LED (p. ej. 25 en Pico/Pico2)\n    const uint32_t BTN_BIT = 1u &lt;&lt; button_pin;                    // Bot\u00f3n en GPIO1\n\n    // Asegura funci\u00f3n GPIO\n    gpio_init(PICO_DEFAULT_LED_PIN);\n    gpio_init(button_pin);\n\n    // LED como salida; bot\u00f3n como entrada\n    sio_hw-&gt;gpio_oe_set = LED_BIT; // salida\n    sio_hw-&gt;gpio_oe_clr = BTN_BIT; // entrada\n\n    // IMPORTANTE: pull-up externo -&gt; desactivar pulls internos\n    gpio_disable_pulls(button_pin);\n\n    while (true) {\n        // Con pull-up (externo), presionado = 0 (nivel bajo)\n        if ((sio_hw-&gt;gpio_in &amp; BTN_BIT)) {\n            sio_hw-&gt;gpio_set = LED_BIT;   // LED ON\n        } else {\n            sio_hw-&gt;gpio_clr = LED_BIT;   // LED OFF\n        }\n\n        // Breve descanso / anti-rebote m\u00ednimo\n        sleep_ms(1);\n    }\n}\n</code></pre>"}, {"location": "clases/sistemas-embebidos-i/Bloque1-GPIO/Tema_D/#alto-nivel-pico-sdk", "title": "Alto nivel (Pico SDK)", "text": "<pre><code>#include \"pico/stdlib.h\"\n\nint main(void) {\n    const uint LED = PICO_DEFAULT_LED_PIN; // En Pico/Pico 2 suele ser 25\n    const uint BTN = 16;\n\n    // LED salida\n    gpio_init(LED);\n    gpio_set_dir(LED, 1);\n\n    // Bot\u00f3n entrada con pull-up (presionado = 0)\n    gpio_init(BTN);\n    gpio_set_dir(BTN, 0);\n\n    while (true) {\n        if (gpio_get(BTN) == 0) {\n            gpio_put(LED, 1);   // ON\n        } else {\n            gpio_put(LED, 0);   // OFF\n        }\n        sleep_ms(1); // anti-rebote m\u00ednimo / descanso\n    }\n}\n</code></pre>"}, {"location": "clases/sistemas-embebidos-i/Bloque1-GPIO/Tema_D/#debounce-hardware-y-software", "title": "Debounce (hardware y software)", "text": ""}, {"location": "clases/sistemas-embebidos-i/Bloque1-GPIO/Tema_D/#hardware-rc-schmitt", "title": "Hardware (RC + Schmitt)", "text": "<ul> <li>Filtra rebotes con una constante de tiempo 2\u201310 ms.</li> <li>Habilita Schmitt para hist\u00e9resis.</li> </ul>"}, {"location": "clases/sistemas-embebidos-i/Bloque1-GPIO/Tema_D/#software-tres-patrones", "title": "Software (tres patrones)", "text": "<ol> <li> <p>Retardo fijo (bloqueante)    Tras detectar cambio, espera 10\u201320 ms y vuelve a leer. Simple, pero bloquea (usa <code>sleep_ms</code>).</p> </li> <li> <p>Integrador / ventana deslizante (no bloqueante)    Muestrea a intervalos regulares; acepta el cambio cuando acumulas N lecturas coherentes. \u00datil con varios botones.</p> </li> <li> <p>M\u00e1quina de estados    Estados: <code>estable_0 \u2192 posible_1 \u2192 estable_1 \u2192 posible_0 \u2192 ...</code>    Solo confirmas transici\u00f3n si se mantiene el nuevo valor por un tiempo/lecturas.</p> </li> </ol>"}, {"location": "clases/sistemas-embebidos-i/Bloque1-GPIO/Tema_E/", "title": "Interrupciones", "text": ""}, {"location": "clases/sistemas-embebidos-i/Bloque1-GPIO/Tema_E/#que-es-una-interrupcion-definicion-acronimos", "title": "\u00bfQu\u00e9 es una interrupci\u00f3n? (definici\u00f3n + acr\u00f3nimos)", "text": "<p>Una interrupci\u00f3n es un evento as\u00edncrono que preempta el flujo normal de ejecuci\u00f3n para correr una rutina corta y de alta prioridad llamada ISR. Se usan para reaccionar de inmediato a eventos de hardware o software (timer, UART RX, DMA done, PIO, GPIO, etc.) sin busy-waiting.</p> <p>Acr\u00f3nimos y conceptos: - ISR \u2014 Interrupt Service Routine \u2014 Rutina de Servicio de Interrupci\u00f3n. - IRQ \u2014 Interrupt ReQuest \u2014 Petici\u00f3n de Interrupci\u00f3n (la l\u00ednea/evento). - NVIC \u2014 Nested Vectored Interrupt Controller \u2014 Controlador de Interrupciones Anidado y Vectorizado (prioridades, despacho, anidamiento). - Vector table \u2014 Vector Table \u2014 Tabla de vectores (arreglo de direcciones de ISR). - Masking \u2014 Interrupt Masking \u2014 Enmascaramiento de interrupciones (bloqueo temporal). - Priority \u2014 Interrupt Priority \u2014 Prioridad (n\u00famero menor = mayor urgencia en Cortex-M). - Edge vs Level \u2014 Edge-triggered vs Level-triggered \u2014 Disparo por flanco vs por nivel. - Polarity \u2014 Polarity \u2014 Polaridad (Rising/Falling, Active-High/Active-Low). - NMI \u2014 Non-Maskable Interrupt \u2014 Interrupci\u00f3n No Enmascarable (prioridad m\u00e1xima, no se puede bloquear).</p>"}, {"location": "clases/sistemas-embebidos-i/Bloque1-GPIO/Tema_E/#flujo-de-control-durante-una-interrupcion-con-diagrama", "title": "Flujo de control durante una interrupci\u00f3n (con diagrama)", "text": "<p>Lectura del diagrama (de abajo hacia arriba):</p> <ol> <li> <p>Interrupt Enable (habilitaci\u00f3n global/de l\u00ednea)    Si est\u00e1 LOW, la CPU ignora la petici\u00f3n. Al pasar a HIGH, la CPU puede atender la IRQ (Interrupt ReQuest \u2014 Petici\u00f3n de Interrupci\u00f3n).</p> </li> <li> <p>Interrupt Request (evento)    Es el disparo (edge o level). Con la l\u00ednea habilitada, el NVIC marca la IRQ como pendiente y compara prioridades.</p> </li> <li> <p>Background Code \u2192 Enter ISR    La CPU interrumpe el hilo de fondo y auto-apila registros (R0\u2013R3, R12, LR, PC, xPSR).    Carga la direcci\u00f3n de la ISR desde la Vector Table. Latencia de interrupci\u00f3n = tiempo desde que la IRQ es v\u00e1lida hasta la primera instrucci\u00f3n de la ISR.</p> </li> <li> <p>ISR Code Regla de oro: ack/clear temprano (limpiar la fuente) y trabajo m\u00ednimo. Tiempo de servicio = duraci\u00f3n dentro de la ISR (perf\u00edlalo con un pin de traza).</p> </li> <li> <p>Exit ISR \u2192 Background Code Exception return: la CPU desapila el contexto y reanuda en el punto exacto donde se interrumpi\u00f3. Overhead de retorno: costo fijo del desenlace.</p> </li> </ol> <p>Detalles (Cortex-M33): - Preemption: una IRQ de mayor prioridad (n\u00famero menor) puede interrumpir una ISR en curso. - Tail-chaining: si termina una ISR y hay otra pendiente con prioridad v\u00e1lida, el core encadena sin restaurar/guardar todo de nuevo \u2192 menos overhead. - Late arrival: si llega una IRQ m\u00e1s prioritaria durante la entrada a otra, el NVIC puede redirigir a la m\u00e1s alta antes de ejecutar la primera.</p> <p>Medici\u00f3n pr\u00e1ctica (traza): sube un GPIO al entrar a la ISR y b\u00e1jalo al salir. - Ancho del pulso = tiempo de servicio. - Distancia entre el evento y el flanco de subida = latencia.</p>"}, {"location": "clases/sistemas-embebidos-i/Bloque1-GPIO/Tema_E/#tipos-de-interrupciones-comunes-no-solo-gpio", "title": "Tipos de interrupciones comunes (no solo GPIO)", "text": "Clase Motivo t\u00edpico L\u00edneas IRQ (ejemplos) Patr\u00f3n de limpieza (ack/clear) Timer/Alarm tick peri\u00f3dico, scheduling <code>TIMER_IRQ_0..3</code> W1C en <code>timer_hw-&gt;intr</code>; programar el pr\u00f3ximo <code>alarm[i]</code> UART RX lleg\u00f3 dato; TX tiene espacio <code>UART0_IRQ</code>, <code>UART1_IRQ</code> Drenar FIFO / leer estado (al desaparecer la condici\u00f3n baja la IRQ) DMA transferencia completa / error <code>DMA_IRQ_0</code>, <code>DMA_IRQ_1</code> W1C en estado/IRQ del canal PIO IRQ de SM, umbrales de FIFO <code>PIO0_IRQ_0/1</code>, <code>PIO1_IRQ_0/1</code> Leer/limpiar flags o drenar FIFO PWM wrap, compare <code>PWM_IRQ_WRAP</code> W1C en bit de IRQ de PWM I\u00b2C/SPI fin de transferencia, FIFOs, errores <code>I2C0_IRQ/I2C1_IRQ</code>, <code>SPI0_IRQ/SPI1_IRQ</code> Leer estado/limpiar flags SysTick (n\u00facleo) timebase del core Excepci\u00f3n SysTick Gestionado por registros de SysTick"}, {"location": "clases/sistemas-embebidos-i/Bloque1-GPIO/Tema_E/#edge-triggered-vs-level-triggered-y-polaridad", "title": "Edge-triggered vs Level-triggered y polaridad", "text": "<ul> <li> <p>Edge-triggered: dispara en una transici\u00f3n (p. ej., flanco interno de timer o GPIO rising/falling). Pro: no re-dispara mientras se mantenga el nivel; ideal para eventos discretos. Contra: si se pierde el flanco, se pierde el evento.</p> </li> <li> <p>Level-triggered: permanece pendiente mientras la condici\u00f3n siga activa (p. ej., RX FIFO no vac\u00eda). Pro: dif\u00edcil \u201cperder\u201d eventos sostenidos. Contra: debes remover la causa (leer FIFO, limpiar flag) o re-entrar\u00e1.</p> </li> </ul> <p>Polarity (polaridad): - En GPIO: flancos <code>Rising/Falling</code> o niveles <code>Active-High/Active-Low</code>. - En perif\u00e9ricos: piensa \u201c\u00bfqu\u00e9 condici\u00f3n la activa y c\u00f3mo la elimino?\u201d.</p>"}, {"location": "clases/sistemas-embebidos-i/Bloque1-GPIO/Tema_E/#vectores-de-isr-y-prioridades-nvic-en-cortex-m33-16-niveles", "title": "Vectores de ISR y Prioridades NVIC en Cortex-M33 (16 niveles)", "text": "<p>Idea clave: en Cortex-M, un n\u00famero de prioridad m\u00e1s bajo significa mayor prioridad </p> <p>En M33, el n\u00famero de niveles efectivos es <code>2^(__NVIC_PRIO_BITS)</code>. En muchos M33 hay 4 bits \u2192 16 niveles (0\u201315).</p> <p>Asignaci\u00f3n sugerida:</p> Nivel (0 = alt\u00edsima) Uso t\u00edpico Motivo 0\u20131 Captura/tiempos ultra cr\u00edticos, hard-deadline Preemption garantizada 2\u20133 DMA done que alimenta pipelines Minimiza latencia de reabastecimiento 4\u20135 Timer/Alarm base de tiempo/planificador Jitter bajo razonable 6\u20137 UART RX con tr\u00e1fico alto Evitar overflow de FIFO 8\u201310 PIO/PWM/I\u00b2C/SPI seg\u00fan caso Trabajo regular 11\u201313 GPIO y tareas no cr\u00edticas 14\u201315 Telemetr\u00eda/depuraci\u00f3n Menor prioridad <p>Timers (2 instancias \u00d7 4 alarmas)</p> <ul> <li><code>TIMER0_IRQ_0..3</code>, <code>TIMER1_IRQ_0..3</code>.</li> </ul> <p>PWM</p> <ul> <li><code>PWM_IRQ_WRAP_0</code>, <code>PWM_IRQ_WRAP_1</code>.</li> </ul> <p>DMA</p> <ul> <li><code>DMA_IRQ_0</code>, <code>DMA_IRQ_1</code>, <code>DMA_IRQ_2</code>, <code>DMA_IRQ_3</code>.</li> </ul> <p>USB</p> <ul> <li><code>USBCTRL_IRQ</code>.    </li> </ul> <p>PIO (3 bloques, 2 IRQ c/u)</p> <ul> <li><code>PIO0_IRQ_0</code>, <code>PIO0_IRQ_1</code>, <code>PIO1_IRQ_0</code>, <code>PIO1_IRQ_1</code>, <code>PIO2_IRQ_0</code>, <code>PIO2_IRQ_1</code>.</li> </ul> <p>GPIO / IO Banks</p> <ul> <li> <p><code>IO_IRQ_BANK0</code> (GPIO \u201cnormales\u201d)</p> </li> <li> <p><code>IO_IRQ_BANK0_NS</code> (versi\u00f3n Non-Secure para TrustZone)</p> </li> <li> <p><code>IO_IRQ_QSPI</code> (Banco 1: QSPI/USB)</p> </li> <li> <p><code>IO_IRQ_QSPI_NS</code> (Non-Secure)</p> </li> </ul> <p>SIO (core-local)</p> <ul> <li><code>SIO_IRQ_FIFO</code>, <code>SIO_IRQ_BELL</code>, <code>SIO_IRQ_FIFO_NS</code>, <code>SIO_IRQ_BELL_NS</code>, <code>SIO_IRQ_MTIMECMP</code>. </li> </ul> <p>Relojes / buses / perif\u00e9ricos</p> <ul> <li><code>CLOCKS_IRQ</code>, <code>SPI0_IRQ</code>, <code>SPI1_IRQ</code>, <code>UART0_IRQ</code>, <code>UART1_IRQ</code>, <code>ADC_IRQ_FIFO</code>, <code>I2C0_IRQ</code>, <code>I2C1_IRQ</code>, <code>OTP_IRQ</code>, <code>TRNG_IRQ</code>, <code>PROC0_IRQ_CTI</code>, <code>PROC1_IRQ_CTI</code>, <code>PLL_SYS_IRQ</code>, <code>PLL_USB_IRQ</code>, <code>POWMAN_IRQ_POW</code>, <code>POWMAN_IRQ_TIMER</code>.</li> </ul> Tips de Interrupciones <ul> <li>Una ISR solo puede ser preemptada por otra con n\u00famero de prioridad menor (m\u00e1s urgente).</li> <li>Misma prioridad \u2260 preempci\u00f3n. Se encolan; el NVIC optimiza con tail-chaining (salir de una ISR y entrar a la siguiente sin pasar por el hilo).</li> <li>Si mientras ejecutas una ISR llega una m\u00e1s urgente, puede aplicarse late arrival: el NVIC salta directamente a la m\u00e1s urgente.</li> </ul> <p>M\u00e1scaras de interrupci\u00f3n en Cortex-M33: </p> <p>Son registros globales dentro del n\u00facleo que controlan qu\u00e9 interrupciones pueden activarse:</p> <ul> <li>PRIMASK: 1 = bloquea todas las IRQ configurables (las \u201cnormales\u201d). No bloquea NMI ni HardFault.</li> <li>BASEPRI: valor \u2260 0 = bloquea las IRQ con prioridad num\u00e9rica \u2265 umbral; deja pasar las m\u00e1s urgentes (con n\u00famero menor).</li> <li>FAULTMASK: 1 = bloquea todo excepto NMI. Incluso mantiene en pausa HardFault. Es la m\u00e1s \u201cdura\u201d.</li> </ul> <p>No son m\u00e1scaras \u201cpor bit\u201d de cada IRQ. Son puertas globales: PRIMASK y FAULTMASK apagan \u201ctodo\u201d (con excepciones), y BASEPRI pone un umbral de prioridad.</p> Glosario de m\u00e1scaras<pre><code>// PRIMASK: todo OFF (menos NMI/HardFault) \u2192 \u00dasalo muy poco y muy corto.\n__disable_irq();         // PRIMASK = 1\n// ... secci\u00f3n ultracorta ...\n__enable_irq();          // PRIMASK = 0\n\n// BASEPRI: umbral (recomendado para secciones cr\u00edticas \u201cRTOS-friendly\u201d)\nuint32_t old = __get_BASEPRI();\n__set_BASEPRI(NVIC_PRIO(8));  // bloquea 8..15; deja pasar 0..7\n__DSB(); __ISB();              // garantizar efecto inmediato\n// ... secci\u00f3n cr\u00edtica con urgentes habilitadas ...\n__set_BASEPRI(old);\n\n// Levantar solo el umbral (nunca bajarlo accidentalmente)\n__set_BASEPRI_MAX(NVIC_PRIO(6));\n\n// FAULTMASK: extremo; casi nunca en app normal\n__set_FAULTMASK(1);     // bloquea todo excepto NMI\n// ... c\u00f3digo de emergencia ...\n__set_FAULTMASK(0);\n</code></pre>"}, {"location": "clases/sistemas-embebidos-i/Bloque1-GPIO/Tema_E/#programacion-de-irq", "title": "Programacion de IRQ", "text": "<p>Comandos Basicos</p> <ul> <li><code>gpio_set_irq_enabled_with_callback(gpio, events, enabled, callback)</code><ul> <li>Habilita/deshabilita IRQ en un pin y registra un callback </li> <li>Eventos:<ul> <li><code>GPIO_IRQ_EDGE_FALL</code></li> <li><code>GPIO_IRQ_EDGE_RISE</code></li> <li><code>GPIO_IRQ_LEVEL_HIGH</code></li> <li><code>GPIO_IRQ_LEVEL_LOW</code></li> </ul> </li> <li>Un callback es una funci\u00f3n que se llama cuando ocurre el evento de interrupci\u00f3n.</li> <li>Ejemplo de uso: <pre><code>gpio_set_irq_enabled_with_callback(16, GPIO_IRQ_EDGE_FALL, true, &amp;isr);\n</code></pre></li> </ul> </li> <li><code>gpio_set_irq_enabled(gpio, events, enabled)</code><ul> <li>Habilita/deshabilita IRQ en un pin sin callback</li> <li>Ejemplo de uso: <pre><code>gpio_set_irq_enabled(16, GPIO_IRQ_EDGE_FALL, true);\n</code></pre></li> </ul> </li> <li><code>gpio_acknowledge_irq(gpio, event_mask)</code><ul> <li>Limpia el flag latcheado del evento en la ISR (si no, sigue disparando).</li> <li>Ejemplo de uso: <pre><code>void isr(uint gpio, uint32_t events) {\n    if (events &amp; GPIO_IRQ_EDGE_FALL) { /* ... */ }\n    gpio_acknowledge_irq(gpio, events);\n}\n</code></pre></li> </ul> </li> <li><code>gpio_get_irq_event_mask(gpio)</code><ul> <li>Lee qu\u00e9 evento(s) activaron la IRQ (\u00fatil para decidir l\u00f3gica).</li> <li>Ejemplo de uso: <pre><code>if (gpio_get_irq_event_mask(16) &amp; GPIO_IRQ_EDGE_FALL) { /* ... */ }\n</code></pre></li> </ul> </li> </ul> Ejemplo de uso Basico<pre><code>#include \"pico/stdlib.h\"\n#include \"hardware/gpio.h\"\n\n#define LED_PIN 25   // LED onboard (Pico 2)\n#define BTN_PIN 16   // bot\u00f3n con pull-up externo a 3V3, pulsador a GND\n\nstatic void button_isr(uint gpio, uint32_t events) {\n    if (gpio == BTN_PIN &amp;&amp; (events &amp; GPIO_IRQ_EDGE_RISE)) {\n        gpio_xor_mask(1u &lt;&lt; LED_PIN);   \n    }\n    gpio_acknowledge_irq(gpio, events);  // limpia el flag de la IRQ\n}\n\nint main(void) {\n    stdio_init_all();\n\n    // LED\n    gpio_init(LED_PIN);\n    gpio_set_dir(LED_PIN, GPIO_OUT);\n    gpio_put(LED_PIN, 0);\n\n    // Bot\u00f3n: entrada sin pulls internos (usas el pull-up externo del hardware)\n    gpio_init(BTN_PIN);\n    gpio_set_dir(BTN_PIN, GPIO_IN);\n    gpio_disable_pulls(BTN_PIN);   // importante: no mezclar con pull interno\n\n    // Interrupci\u00f3n por flanco de bajada (alto -&gt; bajo al presionar)\n    gpio_set_irq_enabled_with_callback(BTN_PIN,\n                                       GPIO_IRQ_EDGE_RISE,\n                                       true,\n                                       &amp;button_isr);\n\n    while (true) {\n        tight_loop_contents();\n    }\n}\n</code></pre> Ejemplo de uso Encadenado<pre><code>#include \"pico/stdlib.h\"\n#include \"hardware/gpio.h\"\n#include \"hardware/irq.h\"\n\n#define LED_A_PIN   0    // LED para bot\u00f3n A (externo)\n#define LED_B_PIN   25   // LED para bot\u00f3n B (onboard Pico 2)\n\n#define BTN_A_PIN   16   // Bot\u00f3n A con pull-up externo, a GND (FALL al presionar)\n#define BTN_B_PIN   17   // Bot\u00f3n B con pull-up externo, a GND (FALL al presionar)\n\n// Prototipo del callback global de GPIO (unico por core)\nstatic void gpio_isr(uint pin, uint32_t event_mask);\n\n// Parpadeo bloqueante (SOLO para demostraci\u00f3n en ISR; en producci\u00f3n, evitar)\nstatic void blink_blocking(uint led_pin, int times, int ms_delay) {\n    for (int i = 0; i &lt; times; ++i) {\n        gpio_xor_mask(1u &lt;&lt; led_pin);\n        busy_wait_ms(ms_delay);   // bloqueo intencional para notar la \u201cocupaci\u00f3n\u201d\n        gpio_xor_mask(1u &lt;&lt; led_pin);\n        busy_wait_ms(ms_delay);\n    }\n}\n\nint main(void) {\n    stdio_init_all();\n\n    // LEDs\n    gpio_init(LED_A_PIN);\n    gpio_set_dir(LED_A_PIN, GPIO_OUT);\n    gpio_put(LED_A_PIN, 0);\n\n    gpio_init(LED_B_PIN);\n    gpio_set_dir(LED_B_PIN, GPIO_OUT);\n    gpio_put(LED_B_PIN, 0);\n\n    gpio_init(BTN_A_PIN);\n    gpio_set_dir(BTN_A_PIN, GPIO_IN);\n    gpio_disable_pulls(BTN_A_PIN);\n\n    gpio_init(BTN_B_PIN);\n    gpio_set_dir(BTN_B_PIN, GPIO_IN);\n    gpio_disable_pulls(BTN_B_PIN);\n\n    // Habilitar IRQ por flanco de BAJADA en ambos pines\n    gpio_set_irq_enabled_with_callback(BTN_A_PIN,\n                                       GPIO_IRQ_EDGE_FALL,\n                                       true,\n                                       &amp;gpio_isr);\n    // El segundo pin usa el MISMO callback:\n    gpio_set_irq_enabled(BTN_B_PIN, GPIO_IRQ_EDGE_FALL, true);\n\n    irq_set_priority(IO_IRQ_BANK0, 0x80);   // cualquier valor (no hay otra l\u00ednea para competir)\n    irq_set_enabled(IO_IRQ_BANK0, true);\n\n    while (true) {\n        tight_loop_contents();\n    }\n}\n\n// Callback \nstatic void gpio_isr(uint pin, uint32_t event_mask) {\n    if (event_mask &amp; GPIO_IRQ_EDGE_FALL) {\n        if (pin == BTN_A_PIN) {\n            // Cada bot\u00f3n tiene SU propio \u201cblink_blocking\u201d\n            blink_blocking(LED_A_PIN, 4, 1000);  // 4 veces, 1 s\n        } else if (pin == BTN_B_PIN) {\n            blink_blocking(LED_B_PIN, 4, 1000);  // 4 veces, 1 s\n        }\n    }\n    gpio_acknowledge_irq(pin, event_mask);\n}\n</code></pre>"}, {"location": "clases/sistemas-embebidos-i/Bloque2-Temporizador/Tema_F/", "title": "Temporizadores", "text": "<p>Terminolog\u00eda</p> <p></p> <ul> <li>Per\u00edodo (T): tiempo entre eventos repetitivos (segundos).</li> <li>Frecuencia (f): eventos por segundo (Hz). Relaci\u00f3n: $$ f = \\frac{1}{T} $$.</li> <li>Tick: unidad discreta de tiempo del temporizador $$ \\Delta t = \\frac{1}{f_{\\text{timer}}} $$.</li> <li>Resoluci\u00f3n: el paso temporal m\u00ednimo que puedes representar $$ \\text{Resolucion} \\approx \\frac{1}{f_{\\text{timer}}} $$.</li> <li>Jitter: variaci\u00f3n no deseada del instante real respecto al ideal.</li> <li>Prescaler: divisor del reloj que alimenta al temporizador (reduce f_timer). Nota: el timer de sistema del RP2350 no usa prescaler cl\u00e1sico; selecciona la fuente de tick (\u00b5s o ciclos de clk_sys).</li> <li>Overflow / wrap: cuando el contador alcanza su l\u00edmite y \u201cse da la vuelta\u201d.</li> <li>One-shot vs peri\u00f3dico: dispara una vez vs se rearma autom\u00e1ticamente.</li> </ul> <p>Relojes del sistema y dominios</p> <ul> <li>Reloj de CPU (f_core/f_sys): ejecuta instrucciones.</li> <li>Reloj de perif\u00e9ricos (f_periph): algunos perif\u00e9ricos usan reloj propio.</li> <li>PLL/DFS: multiplicadores/divisores que alteran f_core y f_periph.</li> <li>Estabilidad: si cambias clocks en runtime, recalcula configuraciones temporales.</li> </ul> <p>Modos de Timer</p> <ul> <li>Temporizador: avanza con un reloj conocido (mide tiempo).</li> <li>Contador: avanza con eventos externos (mide sucesos).</li> <li>Modos comunes: up, down, up/down, one-shot, peri\u00f3dico, compare, capture.</li> <li>Salidas: flags, interrupciones, compare-match, toggles de pin, DMA trigger.</li> </ul> <p>C\u00e1lculo de Tiempo</p> <ul> <li>f_clk: reloj de entrada del timer (core o perif\u00e9rico).</li> <li>P: valor de preescalador (seg\u00fan proveedor puede ser N, N-1, o potencias de 2).</li> <li>f_timer = f_clk / (P_efectivo)</li> <li>Reload: valor de recarga (ancho N bits)</li> </ul> \\[ T \\approx \\frac{\\mathrm{Reload}+1}{f_{\\mathrm{timer}}} \\] \\[ \\Delta t = \\frac{1}{f_{\\mathrm{timer}}} = \\frac{P_{\\mathrm{efectivo}}}{f_{\\mathrm{clk}}} \\] \\[ T_{\\max} \\approx \\frac{2^{N}}{f_{\\mathrm{timer}}} \\] <p>RP2350</p> <p>Contador de 64 bits que avanza con un tick seleccionado:</p> <ul> <li>Modo \u00b5s: \\(\\Delta t = 1~\\mu s\\).</li> <li>Modo ciclos: \\(\\Delta t = \\frac{1}{f_{\\text{sys}}}\\) (p. ej., \\(1/150~\\text{MHz} \\approx 6.67~\\text{ns}\\)).</li> </ul> <p>Alarmas por comparaci\u00f3n con el contador (varias alarmas disponibles).</p> <p>Las alarmas comparan 32 bits bajos del contador \u21d2 el m\u00e1ximo tiempo programable hacia el futuro es:</p> \\[ T_{\\max}^{\\text{alarma}} \\approx 2^{32} \\cdot \\Delta t \\] <ul> <li>Ej.: en 1 \u00b5s/tick \u2192 \\(\\approx 71.6~\\text{min}\\) </li> <li>En ciclos @ 150 MHz \u2192 \\(\\approx 28.6~\\text{s}\\)</li> </ul> <p>Usar deadlines absolutos y rearme acumulativo:</p> \\[ \\text{intervalo\\_ticks}=\\frac{T_{\\text{deseado}}}{\\Delta t}, \\qquad \\text{next} \\leftarrow \\text{now} + \\text{intervalo_ticks} \\] <p>En la ISR:</p> \\[ \\text{next} \\leftarrow \\text{next} + \\text{intervalo_ticks} \\] <p>(As\u00ed evitas que la latencia de la ISR acumule error de fase).</p> <p>Calculos de ejemplos:</p> <p>Periodo 10 \u00b5s (100 kHz) - Modo \u00b5s: \\(\\text{intervalo\\_ticks}=10\\) - Modo ciclos @ 150 MHz: \\(\\text{intervalo\\_ticks}=1500\\)</p> <p>Periodo 3.3 \u00b5s - Modo \u00b5s: no exacto (solo enteros de \u00b5s). - Modo ciclos @ 150 MHz: \\(3.3 \\cdot 150 = 495\\) ciclos \u2192 exacto.</p>"}, {"location": "clases/sistemas-embebidos-i/Bloque2-Temporizador/Tema_F/#funciones", "title": "Funciones", "text": "<pre><code>static inline bool add_repeating_timer_ms(int32_t delay_ms, repeating_timer_callback_t callback, void *user_data, repeating_timer_t *out) {\n    return alarm_pool_add_repeating_timer_us(alarm_pool_get_default(), delay_ms * (int64_t)1000, callback, user_data, out);\n}\n</code></pre> <ul> <li><code>int32_t delay_ms</code> : el retardo de repetici\u00f3n en milisegundos; si es &gt; 0, este es el tiempo entre que termina un callback (funci\u00f3n de devoluci\u00f3n de llamada) y comienza el siguiente; si es &lt; 0, entonces es el negativo del tiempo entre los inicios de los callbacks. El valor 0 se trata como 1 microsegundo.</li> <li><code>repeating_timer_callback_t callback</code> : La funcion callback del temporizador repetible</li> <li><code>void *user_data</code> : datos del usuario que se pasar\u00e1n y almacenar\u00e1n en la estructura <code>repeating_timer</code> para ser utilizados por el callback.</li> <li><code>repeating_timer_t *out</code> : el puntero a la estructura propiedad del usuario donde se almacenar\u00e1 la informaci\u00f3n del temporizador repetitivo.</li> </ul> <p><code>irq_set_exclusive_handler(ALARM_IRQ, on_alarm_irq);</code></p> <ul> <li>Qu\u00e9 hace: registra tu funci\u00f3n <code>on_alarm_irq</code> como \u00fanico manejador para la l\u00ednea de interrupci\u00f3n <code>ALARM_IRQ</code> en el NVIC (vector de interrupciones del M33).</li> </ul> <p><code>hw_set_bits(&amp;timer_hw-&gt;inte, 1u &lt;&lt; ALARM_NUM);</code></p> <ul> <li>Qu\u00e9 hace: habilita dentro del perif\u00e9rico TIMER la fuente de interrupci\u00f3n para la alarma <code>ALARM_NUM</code>.</li> <li>Otros Params<ul> <li><code>intr</code> = estado bruto de flags (qui\u00e9n pidi\u00f3 interrupci\u00f3n).</li> <li><code>inte</code> = enables (qui\u00e9n tiene permiso de pedir).</li> <li><code>ints</code> = estado enmascarado (intr &amp; inte).</li> </ul> </li> </ul> <p><code>irq_set_enabled(ALARM_IRQ, true);</code></p> <ul> <li>Qu\u00e9 hace: habilita la l\u00ednea de interrupci\u00f3n <code>ALARM_IRQ</code> en el NVIC (controlador de interrupciones del n\u00facleo).</li> <li>Opcional: puedes ajustar la prioridad: <code>irq_set_priority(ALARM_IRQ, priority); // 0 = m\u00e1s alta, 255 = m\u00e1s baja</code></li> </ul>"}, {"location": "clases/sistemas-embebidos-i/Bloque2-Temporizador/Tema_F/#ejemplos", "title": "Ejemplos", "text": "<p>Blink Basico sin delay</p> <pre><code>// Blink con timer (SDK alto nivel): cambia BLINK_MS para ajustar\n#include \"pico/stdlib.h\"\n#include \"pico/time.h\"\n\n#define LED_PIN PICO_DEFAULT_LED_PIN\nstatic const int BLINK_MS = 250;  // &lt;-- ajusta tu periodo aqu\u00ed\n\nbool blink_cb(repeating_timer_t *t) {\n    static bool on = false;\n    gpio_put(LED_PIN, on = !on);\n    return true; // seguir repitiendo la alarma\n}\n\nint main() {\n    stdio_init_all();\n\n    gpio_init(LED_PIN);\n    gpio_set_dir(LED_PIN, true);\n\n    repeating_timer_t timer;\n    // Programa una interrupci\u00f3n peri\u00f3dica cada BLINK_MS:\n    add_repeating_timer_ms(BLINK_MS, blink_cb, NULL, &amp;timer);\n\n    while (true) {\n        // El trabajo \"pesado\" deber\u00eda ir aqu\u00ed (no en la ISR).\n        tight_loop_contents();\n    }\n}\n</code></pre> <p>Blink con alarma configurable</p> <pre><code>// Blink con timer de sistema (bajo nivel): programando ALARM0 e IRQ\n#include \"pico/stdlib.h\"\n#include \"hardware/irq.h\"\n#include \"hardware/structs/timer.h\"\n\n#define LED_PIN       PICO_DEFAULT_LED_PIN\n#define ALARM_NUM     0  // usaremos la alarma 0\n\n// Calcula el n\u00famero de IRQ para esa alarma \n#define ALARM_IRQ     timer_hardware_alarm_get_irq_num(timer_hw, ALARM_NUM)\n\nstatic volatile uint32_t next_deadline;   // pr\u00f3ximo instante (en us) en 32 bits bajos\n// Por defecto el timer cuenta \u00b5s (no cambiamos la fuente).\nstatic volatile uint32_t intervalo_us = 1000000u;    // periodo en microsegundos\n\nvoid on_alarm_irq(void) {\n    // 1) Limpiar el flag de la alarma\n    hw_clear_bits(&amp;timer_hw-&gt;intr, 1u &lt;&lt; ALARM_NUM);\n\n    // 2) Hacer el trabajo toggle LED\n    sio_hw-&gt;gpio_togl = 1u &lt;&lt; LED_PIN;\n\n    // 3) Rearmar la siguiente alarma con \"deadline acumulativo\"\n    next_deadline += intervalo_us;\n    timer_hw-&gt;alarm[ALARM_NUM] = next_deadline;\n}\n\nint main() {\n    stdio_init_all();\n\n    // Configura el LED\n    gpio_init(LED_PIN);\n    gpio_set_dir(LED_PIN, true);\n\n    // \"now\" = 32 bits bajos del contador (tiempo en \u00b5s)\n    uint32_t now_us = timer_hw-&gt;timerawl;          // lectura 32b (low) del contador\n    next_deadline = now_us + intervalo_us;         // primer deadline\n\n    // Programa la alarma\n    timer_hw-&gt;alarm[ALARM_NUM] = next_deadline;\n\n    // Crea un handler exclusivo para ligar el callback a la IRQ de la alarma\n    irq_set_exclusive_handler(ALARM_IRQ, on_alarm_irq);\n    // Habilita dentro del perif\u00e9rico TIMER la fuente de interrupci\u00f3n para la alarma ALARM_NUM inte = interrupt enable\n    hw_set_bits(&amp;timer_hw-&gt;inte, 1u &lt;&lt; ALARM_NUM);\n    //Habilita la IRQ en el NVIC (controlador de interrupciones del n\u00facleo)\n    irq_set_enabled(ALARM_IRQ, true);\n\n    while (true) {\n        // Mant\u00e9n el bucle principal libre; lo pesado va aqu\u00ed, no en la ISR\n        tight_loop_contents();\n    }\n}\n</code></pre> <p>Blink Multiples</p> <pre><code>// Dos LEDs con m\u00faltiples alarmas del timer de sistema (RP2350 / Pico 2) en modo \u00b5s\n// - ALARM0 controla el LED \"default\" (PICO_DEFAULT_LED_PIN).\n// - ALARM1 controla un LED externo en GPIO 0.\n// Cambia LED0_MS y LED1_MS para ajustar la velocidad de parpadeo de cada LED.\n\n#include \"pico/stdlib.h\"\n#include \"hardware/irq.h\"\n#include \"hardware/structs/timer.h\"\n#include \"hardware/gpio.h\"\n\n#define LED0_PIN     PICO_DEFAULT_LED_PIN   // LED integrado\n#define LED1_PIN     0                      // LED externo en GPIO 0\n\n#define ALARM0_NUM   0\n#define ALARM1_NUM   1\n\n#define ALARM0_IRQ   timer_hardware_alarm_get_irq_num(timer_hw, ALARM0_NUM)\n#define ALARM1_IRQ   timer_hardware_alarm_get_irq_num(timer_hw, ALARM1_NUM)\n\n\n// Pr\u00f3ximos \"deadlines\" (32 bits bajos en \u00b5s) y sus intervalos en \u00b5s\nstatic volatile uint32_t next0_us, next1_us;\nstatic const uint32_t INTERVALO0_US = 250000u;\nstatic const uint32_t INTERVALO1_US = 400000u;\n\n// ISR para ALARM0\nstatic void on_alarm0_irq(void) {\n    hw_clear_bits(&amp;timer_hw-&gt;intr, 1u &lt;&lt; ALARM0_NUM);\n    sio_hw-&gt;gpio_togl = 1u &lt;&lt; LED0_PIN;\n    next0_us += INTERVALO0_US;\n    timer_hw-&gt;alarm[ALARM0_NUM] = next0_us;\n}\n\n// ISR para ALARM1\nstatic void on_alarm1_irq(void) {\n    hw_clear_bits(&amp;timer_hw-&gt;intr, 1u &lt;&lt; ALARM1_NUM);\n    sio_hw-&gt;gpio_togl = 1u &lt;&lt; LED1_PIN;\n    next1_us += INTERVALO1_US;\n    timer_hw-&gt;alarm[ALARM1_NUM] = next1_us;\n}\n\nint main() {\n\n    gpio_init(LED0_PIN);\n    gpio_set_dir(LED0_PIN, GPIO_OUT);\n    gpio_put(LED0_PIN, 0);\n\n    gpio_init(LED1_PIN);\n    gpio_set_dir(LED1_PIN, GPIO_OUT);\n    gpio_put(LED1_PIN, 0);\n\n    // Timer de sistema en microsegundos (por defecto source = 0)\n    timer_hw-&gt;source = 0u;\n\n    uint32_t now_us = timer_hw-&gt;timerawl;\n\n    // Primeros deadlines\n    next0_us = now_us + INTERVALO0_US;\n    next1_us = now_us + INTERVALO1_US;\n\n    // Programa ambas alarmas\n    timer_hw-&gt;alarm[ALARM0_NUM] = next0_us;\n    timer_hw-&gt;alarm[ALARM1_NUM] = next1_us;\n\n    // Limpia flags pendientes antes de habilitar\n    hw_clear_bits(&amp;timer_hw-&gt;intr, (1u &lt;&lt; ALARM0_NUM) | (1u &lt;&lt; ALARM1_NUM));\n\n    // Registra handlers exclusivos para cada alarma\n    irq_set_exclusive_handler(ALARM0_IRQ, on_alarm0_irq);\n    irq_set_exclusive_handler(ALARM1_IRQ, on_alarm1_irq);\n\n    // Habilita fuentes de interrupci\u00f3n en el perif\u00e9rico TIMER\n    hw_set_bits(&amp;timer_hw-&gt;inte, (1u &lt;&lt; ALARM0_NUM) | (1u &lt;&lt; ALARM1_NUM));\n\n    // Habilita ambas IRQ en el NVIC\n    irq_set_enabled(ALARM0_IRQ, true);\n    irq_set_enabled(ALARM1_IRQ, true);\n\n    // Bucle principal: todo el parpadeo ocurre en las ISRs\n    while (true) {\n        tight_loop_contents();\n    }\n}\n</code></pre>"}, {"location": "clases/sistemas-embebidos-i/Bloque2-Temporizador/Tema_G/", "title": "PWM \u2014 Modulaci\u00f3n por Ancho de Pulso", "text": ""}, {"location": "clases/sistemas-embebidos-i/Bloque2-Temporizador/Tema_G/#1-introduccion", "title": "1) Introducci\u00f3n", "text": "<p>La Modulaci\u00f3n por Ancho de Pulso (PWM) es una t\u00e9cnica digital que permite controlar la potencia promedio aplicada a una carga alternando r\u00e1pidamente entre ON y OFF. Ajustando la relaci\u00f3n c\u00edclica (duty cycle) se logra un efecto an\u00e1logo a variar la tensi\u00f3n.</p> <p></p> <p>Aplicaciones: control de brillo en LEDs, motores DC (puente H), servos RC, generaci\u00f3n de tonos (buzzer), conversi\u00f3n DAC con filtro RC, etc.</p>"}, {"location": "clases/sistemas-embebidos-i/Bloque2-Temporizador/Tema_G/#2-conceptos-fundamentales-del-pwm", "title": "2) Conceptos Fundamentales del PWM", "text": ""}, {"location": "clases/sistemas-embebidos-i/Bloque2-Temporizador/Tema_G/#valor-promedio-y-rms", "title": "Valor Promedio y RMS", "text": "<p>Una se\u00f1al PWM de amplitud \\( V_{high} \\) y duty \\( D \\) tiene un valor promedio:</p> \\[ V_{avg} = V_{high} \\cdot D \\] <p>En cargas resistivas, el par\u00e1metro relevante para la disipaci\u00f3n de potencia es el valor RMS:</p> \\[ V_{rms} = V_{high} \\cdot \\sqrt{D} \\] <p>La potencia en una carga \\( R \\) se calcula como:</p> \\[ P = \\frac{V_{rms}^2}{R} \\] <p>\u26a0\ufe0f Nota: La f\u00f3rmula \\( V_{avg} = D \\cdot V_{cc} \\) es v\u00e1lida cuando el nivel bajo = 0V y el nivel alto = \\( V_{cc} \\).</p>"}, {"location": "clases/sistemas-embebidos-i/Bloque2-Temporizador/Tema_G/#rizado-ripple", "title": "Rizado (Ripple)", "text": "<p>El rizado (ripple) es la variaci\u00f3n peri\u00f3dica alrededor del valor promedio debido a que la se\u00f1al real conmuta ON/OFF. En un filtro RC, la salida no es perfectamente plana: oscila un poco por cada ciclo PWM.</p> <ul> <li>Menos rizado \u21e2 mayor frecuencia PWM o filtros con constante de tiempo mayor que el per\u00edodo de conmutaci\u00f3n.  </li> <li>M\u00e1s rizado \u21e2 frecuencia baja o carga sensible.</li> </ul> <p></p>"}, {"location": "clases/sistemas-embebidos-i/Bloque2-Temporizador/Tema_G/#como-elegir-la-frecuencia", "title": "C\u00f3mo elegir la frecuencia", "text": "<ol> <li>LEDs: \u2265 1 kHz para el ojo humano, 10\u201320 kHz si se usan c\u00e1maras para evitar banding.  </li> <li>Motores DC: 15\u201325 kHz para salir del rango audible humano.  </li> <li>Servos RC: 50 Hz con pulsos de 1\u20132 ms (protocolo especial).  </li> <li>DAC por PWM: mientras m\u00e1s alta \\( f_{PWM} \\) frente al filtro, menor rizado.</li> </ol>"}, {"location": "clases/sistemas-embebidos-i/Bloque2-Temporizador/Tema_G/#3-parametros-practicos", "title": "3) Par\u00e1metros pr\u00e1cticos", "text": ""}, {"location": "clases/sistemas-embebidos-i/Bloque2-Temporizador/Tema_G/#top-y-resolucion", "title": "TOP y Resoluci\u00f3n", "text": "<ul> <li>TOP: valor m\u00e1ximo que alcanza el contador antes de reiniciarse.  </li> <li>Define la resoluci\u00f3n del PWM:</li> </ul> \\[ Resoluci\u00f3n\\ (bits) = \\log_2(TOP+1) \\] <p>O de forma m\u00e1s intuitiva:</p> \\[ 2^{Resoluci\u00f3n} = TOP+1 \\] <ul> <li>Ejemplo: TOP=255 \u2192 8 bits, TOP=1023 \u2192 10 bits, TOP=4095 \u2192 12 bits.</li> </ul>"}, {"location": "clases/sistemas-embebidos-i/Bloque2-Temporizador/Tema_G/#relacion-duty-vs-level", "title": "Relaci\u00f3n Duty vs Level", "text": "<p>El duty cycle se obtiene de la comparaci\u00f3n entre el contador y el registro CC (level):</p> \\[ Duty\\ Cycle = \\frac{level}{TOP+1} \\cdot 100\\% \\]"}, {"location": "clases/sistemas-embebidos-i/Bloque2-Temporizador/Tema_G/#armonicos", "title": "Arm\u00f3nicos", "text": "<p>Un arm\u00f3nico es un componente de frecuencia que aparece en una se\u00f1al peri\u00f3dica y cuya frecuencia es un m\u00faltiplo entero de la fundamental.    - Fundamental: f1 (ej. 2 kHz).   - Arm\u00f3nicos: 2f1 (4 kHz), 3f1 (6 kHz), etc.  </p> <p>Efectos de los arm\u00f3nicos: - Ruido audible: si un arm\u00f3nico cae en 20 Hz\u201320 kHz, se percibe como zumbido. - Interferencia electromagn\u00e9tica (EMI): arm\u00f3nicos altos se irradian en cables/pistas. - Calentamiento adicional: excitaci\u00f3n de transistores y bobinas a altas frecuencias. - Distorsi\u00f3n visual: en LEDs/pantallas, los arm\u00f3nicos pueden generar parpadeo o banding en c\u00e1maras.</p> <p>Alineaci\u00f3n de bordes: - Edge-aligned: refuerza arm\u00f3nicos pares \u2192 m\u00e1s ruido EMI. - Center-aligned: cancela arm\u00f3nicos pares \u2192 menos ruido audible/EMI.  </p> <p> </p>"}, {"location": "clases/sistemas-embebidos-i/Bloque2-Temporizador/Tema_G/#4-arquitectura-del-pwm-en-microcontroladores", "title": "4) Arquitectura del PWM en microcontroladores", "text": "<pre><code>flowchart TD\n    A[Clock del sistema] --&gt; B[Divisor de reloj]\n    B --&gt; C[Contador 0..TOP]\n    C --&gt;|Comparaci\u00f3n| D[Registro CC Duty A/B]\n    D --&gt; E[Conmutador de salida]\n    E --&gt; F[GPIO en funci\u00f3n PWM]\n    C --&gt; G[Evento de Wrap TOP]\n    G --&gt; H[IRQ opcional]</code></pre> <ol> <li>Clock del sistema (A): define la base temporal del PWM.  </li> <li>Divisor de reloj (B): ajusta el rango de frecuencias \u00fatiles.  </li> <li>Contador 0..TOP (C): coraz\u00f3n del PWM, define la resoluci\u00f3n.  </li> <li>Comparaci\u00f3n (C\u2192D): si contador &lt; CC \u21d2 salida HIGH; si \u2265 CC \u21d2 LOW.  </li> <li>Conmutador de salida (E): puede incluir polaridad normal/invertida y estado inactivo (LOW, HIGH, Hi-Z).  </li> <li>GPIO en modo PWM (F): el pin f\u00edsico emite la se\u00f1al PWM.  </li> <li>Evento de Wrap (C\u2192G): \u00fatil para sincronizar procesos.  </li> <li>IRQ opcional (H): permite ejecutar c\u00f3digo en cada ciclo PWM.</li> </ol>"}, {"location": "clases/sistemas-embebidos-i/Bloque2-Temporizador/Tema_G/#5-pwm-en-raspberry-pi-pico-2", "title": "5) PWM en Raspberry Pi Pico 2", "text": "<ul> <li>Slices: 8 bloques PWM con 2 canales (A y B) \u21d2 16 salidas.  </li> <li>TOP ajustable: hasta 16 bits.  </li> <li>Divisor de reloj: entero/fraccional.  </li> </ul>"}, {"location": "clases/sistemas-embebidos-i/Bloque2-Temporizador/Tema_G/#relacion-frecuenciadivisortop", "title": "Relaci\u00f3n frecuencia\u2013divisor\u2013TOP", "text": "\\[ f_{PWM} = \\frac{f_{clk}}{div \\cdot (TOP+1)} \\] <p>donde: - \\( f_{clk} \\) = frecuencia de reloj del sistema (125 MHz en Pico). - \\( div \\) = divisor (1\u2013255, fraccional). - \\( TOP \\) = valor de recuento m\u00e1ximo.  </p>"}, {"location": "clases/sistemas-embebidos-i/Bloque2-Temporizador/Tema_G/#funciones-utiles-sdk", "title": "Funciones \u00fatiles (SDK)", "text": "API \u00bfQu\u00e9 hace? Notas <code>gpio_set_function(pin, GPIO_FUNC_PWM)</code> Pone el pin en modo PWM. <code>GPIO_FUNC_PWM</code> conecta el pin al generador PWM interno. <code>pwm_gpio_to_slice_num(pin)</code> Obtiene el slice asociado. Cada slice maneja 2 canales. <code>pwm_gpio_to_channel(pin)</code> Retorna A o B. Necesario para fijar duty. <code>pwm_set_wrap(slice, top)</code> Define <code>TOP</code>. Determina resoluci\u00f3n. <code>pwm_set_clkdiv(slice, div)</code> Define divisor. Ajusta frecuencia. <code>pwm_set_chan_level(slice, chan, level)</code> Ajusta duty. Relaci\u00f3n con duty: \\( \\frac{level}{TOP+1} \\). <code>pwm_set_enabled(slice, bool)</code> Activa/desactiva slice. Inicia PWM."}, {"location": "clases/sistemas-embebidos-i/Bloque2-Temporizador/Tema_G/#ejemplo-en-c-sdk", "title": "Ejemplo en C (SDK)", "text": "<pre><code>// pwm_led.c \u2014 Atenuar LED con PWM en GPIO 2\n#include \"pico/stdlib.h\"\n#include \"hardware/pwm.h\"\n\n#define LED_PIN 2\n#define F_PWM_HZ 2000   // 2 kHz: fuera del rango visible\n#define TOP 1023        // 10 bits de resoluci\u00f3n\n\nint main() {\n    stdio_init_all();\n\n    gpio_set_function(LED_PIN, GPIO_FUNC_PWM);\n    uint slice = pwm_gpio_to_slice_num(LED_PIN);\n    uint chan  = pwm_gpio_to_channel(LED_PIN);\n\n    // Calcular divisor\n    float f_clk = 125000000.0f; // 125 MHz\n    float div = f_clk / (F_PWM_HZ * (TOP + 1));\n    pwm_set_clkdiv(slice, div);\n    pwm_set_wrap(slice, TOP);\n\n    pwm_set_chan_level(slice, chan, 0);\n    pwm_set_enabled(slice, true);\n\n    // Fade\n    int level = 0, step = 8, dir = +step;\n    while (true) {\n        pwm_set_chan_level(slice, chan, level);\n        sleep_ms(5);\n        level += dir;\n        if (level &gt;= TOP || level &lt;= 0) dir = -dir;\n    }\n}\n</code></pre>"}, {"location": "clases/sistemas-embebidos-i/Bloque2-Temporizador/Tema_H/", "title": "UART \u2014 Comunicaci\u00f3n serial", "text": ""}, {"location": "clases/sistemas-embebidos-i/Bloque2-Temporizador/Tema_H/#2-conceptos", "title": "2) Conceptos", "text": ""}, {"location": "clases/sistemas-embebidos-i/Bloque2-Temporizador/Tema_H/#21-que-es-uart", "title": "2.1 \u00bfQu\u00e9 es UART?", "text": "<p>UART (Universal Asynchronous Receiver/Transmitter) transmite datos bit a bit sin reloj compartido. Cada extremo configura baudios, bits de datos, paridad y stop. Se\u00f1ales: TX (emite) y RX (recibe).</p> <p>Trama t\u00edpica:</p> <p></p> <ul> <li>Start bit: 0 \u2192 marca inicio del byte.</li> <li>Bits de datos: 5\u20139 (normalmente 8).</li> <li>Paridad: None/Even/Odd para detecci\u00f3n simple de error.</li> <li>Stop bits: 1 o 2 (nivel alto).</li> </ul> <p>En 8N1, un byte ocupa 10 bits (1 start + 8 data + 1 stop).</p>"}, {"location": "clases/sistemas-embebidos-i/Bloque2-Temporizador/Tema_H/#22-bps-vs-baudios", "title": "2.2 bps vs baudios", "text": "<ul> <li>bps (bits por segundo): tasa de bits reales (incluye start/stop/paridad).</li> <li>Baudios (s\u00edmbolos/s): en UART cada s\u00edmbolo = 1 bit \u21d2 baudios = bps.</li> <li>En sistemas modulados un s\u00edmbolo puede valer varios bits (ah\u00ed baudios \u2260 bps).</li> </ul> <p>Ejemplo 115200 baudios: <code>T_bit \u2248 1/115200 \u2248 8.68 \u00b5s</code>. Un car\u00e1cter 8N1 (10 bits) tarda ~86.8 \u00b5s \u21d2 ~11.5 kB/s.</p> <p>Velocidad maxima Teorica </p> <p>Seg\u00fan el datasheet, puede alcanzar hasta ~1.5 Mbaud sin errores apreciables con un cable corto y hardware estable. En pr\u00e1ctica, los valores t\u00edpicos estables son:</p> <ul> <li>9600 / 19200 / 38400 / 57600 / 115200 bps (est\u00e1ndares de PC).</li> <li>1 000 000 bps (usado a veces en comunicaci\u00f3n MCU-MCU).</li> </ul> <p>A mayor velocidad, el margen de error y el ruido aumentan significativamente, entre mas largo el cable mayor probabilidad de errores.</p> <p>UART puede funcionar correctamente si el error entre el emisor y el receptor se mantiene por debajo del \u00b13 %.</p>"}, {"location": "clases/sistemas-embebidos-i/Bloque2-Temporizador/Tema_H/#23-uart-vs-usart", "title": "2.3 UART vs USART", "text": "Caracter\u00edstica UART USART Reloj No (as\u00edncrona) Puede s\u00ed (s\u00edncrona) o no (as\u00edncrona) L\u00edneas TX, RX TX, RX, CLK (modo s\u00edncrono) Complejidad Menor Mayor, m\u00e1s flexible Uso t\u00edpico Consolas, m\u00f3dulos simples Modems/links que requieren reloj"}, {"location": "clases/sistemas-embebidos-i/Bloque2-Temporizador/Tema_H/#24-hardware-de-uart-pi-pico-2", "title": "2.4 Hardware de UART Pi Pico 2", "text": "<p>UARTs hardware: UART0 y UART1 (pueden usarse simult\u00e1neamente).</p> <p>Pines por defecto:</p> <ul> <li>UART0 \u2192 TX GP0, RX GP1</li> <li>UART1 \u2192 TX GP8, RX GP9</li> </ul> <p>Pines alternativos compatibles:</p> UART TX posibles RX posibles UART0 GP0, GP12, GP16, GP28 GP1, GP13, GP17, GP29 UART1 GP4, GP8, GP20 GP5, GP9, GP21 <p></p>"}, {"location": "clases/sistemas-embebidos-i/Bloque2-Temporizador/Tema_H/#25-ascii-american-standard-code-for-information-interchange", "title": "2.5 ASCII (American Standard Code for Information Interchange)", "text": "<p>El est\u00e1ndar ASCII define 128 s\u00edmbolos (0\u2013127) que incluyen:</p> Tipo Ejemplo Rango decimal Ejemplo binario Control <code>\\n</code>, <code>\\r</code>, <code>\\t</code> 0\u201331 <code>00001010</code> (LF) N\u00fameros <code>0</code>\u2013<code>9</code> 48\u201357 <code>00110000</code>\u2013<code>00111001</code> Letras may\u00fasculas <code>A</code>\u2013<code>Z</code> 65\u201390 <code>01000001</code>\u2013<code>01011010</code> Letras min\u00fasculas <code>a</code>\u2013<code>z</code> 97\u2013122 <code>01100001</code>\u2013<code>01111010</code> S\u00edmbolos comunes <code>, . ; ? !</code> etc. 33\u201347 y otros <code>00100001</code> (\u00a1) <p>Cada car\u00e1cter (char) es un entero de 8 bits (0\u2013255).</p> <p>Cuando haces uart_putc(UART_ID, 'A');, se env\u00eda el valor 65 decimal (0x41).</p> <p>Cuando recibes un byte (uart_getc() devuelve un char), puedes interpretarlo como n\u00famero o letra:</p> <pre><code>Valor: 65, Car\u00e1cter: A\n</code></pre>"}, {"location": "clases/sistemas-embebidos-i/Bloque2-Temporizador/Tema_H/#26-fifo-first-in-first-out", "title": "2.6 FIFO (First In First Out)", "text": "<p>FIFO (First In, First Out) es una peque\u00f1a cola de almacenamiento dentro del perif\u00e9rico UART. En el RP2350, cada UART tiene una FIFO de 16 bytes tanto para RX como para TX.</p> <p>Funcionamiento:</p> <ul> <li>Cada byte recibido entra a la FIFO RX.</li> <li>El CPU (o DMA) los va extrayendo con uart_getc().</li> <li>Si el CPU se retrasa y la FIFO se llena \u2192 los bytes nuevos se pierden (overrun).</li> </ul> <p>Importancia:</p> <ul> <li>En modo polling, la FIFO act\u00faa como peque\u00f1o \u201camortiguador\u201d entre hardware y software.</li> <li>En modo interrupci\u00f3n, el handler debe vaciar la FIFO r\u00e1pidamente (leyendo todos los bytes disponibles) para evitar saturarla.</li> <li>En flujos r\u00e1pidos, el uso de buffer circular externo y/o DMA se vuelve esencial.</li> </ul>"}, {"location": "clases/sistemas-embebidos-i/Bloque2-Temporizador/Tema_H/#3-ejemplos-monitor-serial-usb-cdc", "title": "3) Ejemplos Monitor Serial USB CDC", "text": ""}, {"location": "clases/sistemas-embebidos-i/Bloque2-Temporizador/Tema_H/#31-configuracion-de-usb-cdc", "title": "3.1 Configuraci\u00f3n de USB-CDC", "text": "<p>USB\u2011CDC hace que la Pico aparezca como puerto COM/ttyACM. </p> <p>Formato usual: 115200 8N1. Saltos de l\u00ednea: usa <code>\\r\\n</code> o configura la terminal (CR/LF).</p> <p>Antes de usar UART o USB-CDC, primero modificaremos el <code>CMakeLists.txt</code> :</p> <pre><code># Buscaremos el la linea:\npico_enable_stdio_usb(timer 1)#Por defecto 0 cambiaremos a uno 1 para activar\n\n# Agregaremos tambien en la seccion de librerias harware_uart:\ntarget_link_libraries(timer\n        pico_stdlib\n        hardware_uart\n        )\n</code></pre>"}, {"location": "clases/sistemas-embebidos-i/Bloque2-Temporizador/Tema_H/#32-codigo-ejemplo-echo", "title": "3.2 Codigo Ejemplo echo", "text": "Echo consola<pre><code>#include \"pico/stdlib.h\"\n#include &lt;stdio.h&gt;\n\nint main() {\n    stdio_init_all();\n    sleep_ms(2000); // tiempo para enumeraci\u00f3n USB\n\n    printf(\"\\n[Pico USB] Conexi\u00f3n lista. Escribe algo y Enter.\\n\");\n\n    while (true) {\n        int ch = getchar_timeout_us(0);\n        if (ch != PICO_ERROR_TIMEOUT) {\n            printf(\"Eco: %c\\n\", (char)ch);\n        }\n        sleep_ms(10);\n    }\n}\n</code></pre>"}, {"location": "clases/sistemas-embebidos-i/Bloque2-Temporizador/Tema_H/#33-probar-con-monitor-serial-en-vs-code", "title": "3.3 Probar con Monitor Serial en VS Code", "text": "<ol> <li>Abre Extensiones (<code>Ctrl+Shift+X</code>) y busca Serial Monitor (Microsoft). Instala.</li> <li>Conecta la Pico; espera a que aparezca el puerto USB Serial Device COMn.</li> <li>Paleta de comandos (<code>Ctrl+Shift+P</code>) \u2192 <code>Serial Monitor: Select Serial Port</code> \u2192 elige el puerto.</li> <li><code>Serial Monitor: Start Monitoring</code> \u2192 selecciona 115200.</li> <li>Configura CR/LF seg\u00fan necesites; para  <code>printf(\"\\r\\n\")</code> usa CR+LF.</li> </ol>"}, {"location": "clases/sistemas-embebidos-i/Bloque2-Temporizador/Tema_H/#4-comunicacion-entre-dos-pico-mainsupport-uart0", "title": "4) Comunicaci\u00f3n entre dos Pico (main/support) \u2014 UART0", "text": ""}, {"location": "clases/sistemas-embebidos-i/Bloque2-Temporizador/Tema_H/#41-cableado-de-uart", "title": "4.1 Cableado de UART", "text": "<p>Conexi\u00f3n:</p> Pico Main Pico Support GP0 (TX) GP1 (RX) GP1 (RX) GP0 (TX) GND GND"}, {"location": "clases/sistemas-embebidos-i/Bloque2-Temporizador/Tema_H/#42-glosario-de-funciones-sdk-pico", "title": "4.2 Glosario de funciones (SDK Pico)", "text": "Funci\u00f3n Descripci\u00f3n Ejemplo <code>stdio_init_all()</code> Habilita stdio (USB/UART) seg\u00fan CMake <code>stdio_init_all();</code> <code>printf()</code> Imprime a stdio <code>printf(\"Hola\\n\");</code> <code>getchar_timeout_us(us)</code> Lee char con timeout <code>getchar_timeout_us(0);</code> <code>uart_init(uart, baud)</code> Inicializa UART a baudios <code>uart_init(uart0,115200);</code> <code>uart_set_format(uart, db, sb, par)</code> Configura 8N1/E/O <code>uart_set_format(uart0,8,1,UART_PARITY_NONE);</code> <code>uart_puts/putc()</code> Env\u00eda cadena/car\u00e1cter <code>uart_puts(uart0,\"Hi\\r\\n\");</code> <code>uart_is_readable()</code> \u00bfHay datos RX? <code>if(uart_is_readable(u0))</code> <code>uart_getc()</code> Lee 1 byte RX <code>char c=uart_getc(u0);</code> <code>gpio_set_function(pin, GPIO_FUNC_UART)</code> Asigna pin a UART <code>gpio_set_function(0,GPIO_FUNC_UART);</code> <code>irq_set_exclusive_handler(irq,h)</code> Registra ISR <code>irq_set_exclusive_handler(UART0_IRQ,h);</code> <code>uart_set_irq_enables(u,rx,tx)</code> Enciende IRQ RX/TX <code>uart_set_irq_enables(u0,true,false);</code>"}, {"location": "clases/sistemas-embebidos-i/Bloque2-Temporizador/Tema_H/#43-envio", "title": "4.3 Envio", "text": "Codigo Envio<pre><code>#include \"pico/stdlib.h\"\n#include \"hardware/uart.h\"\n#include &lt;stdio.h&gt;\n\n#define UART_ID uart0\n#define BAUD_RATE 115200\n#define TX_PIN 0\n#define RX_PIN 1\n\nint main() {\n    stdio_init_all();\n\n    gpio_set_function(TX_PIN, GPIO_FUNC_UART);\n    gpio_set_function(RX_PIN, GPIO_FUNC_UART);\n\n    uart_init(UART_ID, BAUD_RATE);\n    uart_set_format(UART_ID, 8, 1, UART_PARITY_NONE);\n\n    printf(\"[MAIN] Enviando mensajes cada segundo...\\n\");\n\n    int counter = 0;\n    while (true) {\n        char msg[64];\n        sprintf(msg, \"Mensaje %d desde MAIN\\r\\n\", counter++);\n        uart_puts(UART_ID, msg);\n        sleep_ms(1000);\n    }\n}\n</code></pre> <p>Polling (sondeo): el <code>main()</code> revisa si hay datos (<code>uart_is_readable()</code>). Simple, pero consume CPU y puede perder datos si la CPU se ocupa demasiado tiempo (FIFO UART \u2248 16 bytes).</p>"}, {"location": "clases/sistemas-embebidos-i/Bloque2-Temporizador/Tema_H/#44-recepcion", "title": "4.4 Recepcion", "text": "Codigo Recepcion<pre><code>#include \"pico/stdlib.h\"\n#include \"hardware/uart.h\"\n#include &lt;stdio.h&gt;\n\n#define BAUD_RATE 115200\n#define TX_PIN 0\n#define RX_PIN 1\n\nint main() {\n    stdio_init_all();\n\n    gpio_set_function(TX_PIN, GPIO_FUNC_UART);\n    gpio_set_function(RX_PIN, GPIO_FUNC_UART);\n\n    uart_init(uart0, BAUD_RATE);\n    uart_set_format(UART_ID, 8, 1, UART_PARITY_NONE);\n\n    printf(\"[SUPPORT] Esperando mensajes (polling)...\\n\");\n\n    while (true) {\n        if (uart_is_readable(uart0)) {\n            char c = uart_getc(uart0);\n            printf(\"%c\", c);\n        }\n    }\n}\n</code></pre> <p>Interrupciones: el hardware llama a un handler cuando llega un byte; la ISR debe ser r\u00e1pida y volcar el dato a un buffer circular en RAM para procesarlo luego. Eficiente y robusto a baudios altos.</p> Codigo Recepcion IRQ<pre><code>#include \"pico/stdlib.h\"\n#include \"hardware/uart.h\"\n#include \"hardware/irq.h\"\n#include &lt;stdio.h&gt;\n\n#define UART_ID uart0\n#define BAUD_RATE 115200\n#define TX_PIN 0\n#define RX_PIN 1\n\n// Buffer circular simple\n#define BUF_SIZE 256\nvolatile char buffer[BUF_SIZE];\nvolatile uint16_t head = 0, tail = 0;\n\nstatic void on_uart_rx(void) {\n    while (uart_is_readable(uart0)) {\n        char c = uart_getc(uart0);\n        buffer[head] = c;\n        head = (head + 1) % BUF_SIZE; // sin control de overflow para simplicidad\n    }\n}\n\nint main() {\n    stdio_init_all();\n\n    gpio_set_function(TX_PIN, GPIO_FUNC_UART);\n    gpio_set_function(RX_PIN, GPIO_FUNC_UART);\n\n    uart_init(uart0, BAUD_RATE);\n    uart_set_format(uart0, 8, 1, UART_PARITY_NONE);\n\n    // Configurar IRQ de UART0\n    irq_set_exclusive_handler(UART0_IRQ, on_uart_rx);\n    irq_set_enabled(UART0_IRQ, true);\n    uart_set_irq_enables(uart0, true, false); // RX interrupt ON\n\n    printf(\"[SUPPORT IRQ] Esperando datos con interrupciones...\\n\");\n\n    while (true) {\n        // Vaciar buffer a la consola USB\n        while (tail != head) {\n            char c = buffer[tail];\n            tail = (tail + 1) % BUF_SIZE;\n            printf(\"%c\", c);\n        }\n        sleep_ms(10);\n    }\n}\n</code></pre>"}, {"location": "clases/sistemas-embebidos-i/Bloque2-Temporizador/Tema_H/#5-errores", "title": "5) Errores", "text": ""}, {"location": "clases/sistemas-embebidos-i/Bloque2-Temporizador/Tema_H/#51-problemas-de-aplicacion-comunes", "title": "5.1 Problemas de aplicacion comunes", "text": "<ul> <li>No aparece el puerto USB: cable solo de carga; habilita <code>pico_enable_stdio_usb(... 1)</code> y espera ~2 s tras <code>stdio_init_all()</code>.</li> <li>Texto ilegible: desajuste de baudios/formato; usa 115200 8N1.</li> <li>Sin eco por UART: cruza TX\u2194RX, comparte GND, fija <code>GPIO_FUNC_UART</code>.</li> <li>P\u00e9rdida de datos a baudios altos: usa IRQ + buffer circular o DMA; aumenta <code>BUF_SIZE</code>.</li> <li>CR/LF raros: usa <code>\\r\\n</code> o ajusta la terminal a CR+LF.</li> </ul>"}, {"location": "clases/sistemas-embebidos-i/Bloque2-Temporizador/Tema_H/#52-errores-de-comunicacion-uart", "title": "5.2 Errores de Comunicacion UART", "text": "Tipo de error Causa C\u00f3mo detectarlo Efecto t\u00edpico Framing Error El receptor no detecta correctamente el bit de Stop (por ruido o desajuste de baud rate). Bit <code>FRAMING_ERR</code> en registro de estado (<code>UARTx_FRSR</code>). Los datos recibidos se descartan o se interpretan err\u00f3neamente. Parity Error Cuando se usa bit de paridad (even/odd) y no coincide con lo esperado. Bit <code>PARITY_ERR</code>. Detecci\u00f3n de corrupci\u00f3n de un bit individual. Overrun Error El receptor recibi\u00f3 un nuevo byte antes de que el software leyera el anterior de la FIFO. Bit <code>OVERRUN_ERR</code>. Se pierde el byte m\u00e1s antiguo del buffer. Break Condition La l\u00ednea <code>TX</code> se mantiene en nivel bajo por m\u00e1s del tiempo de un byte. Bit <code>BREAK_DETECT</code>. Puede indicar desconexi\u00f3n o error grave en hardware. Noise / Glitches Ruido el\u00e9ctrico o interferencia entre cables. Osciloscopio / analizador l\u00f3gico. Bytes espurios, framing errors aleatorios."}, {"location": "clases/sistemas-embebidos-i/Bloque2-Temporizador/Tema_H/#53-manejo-de-errores-en-codigo", "title": "5.3 Manejo de errores en codigo", "text": "Registro Funci\u00f3n <code>UARTx_FR</code> (Flag Register) Muestra el estado de la FIFO y la l\u00ednea (busy, empty, etc.) <code>UARTx_RSR</code> / <code>UARTx_ECR</code> (Receive Status / Error Clear) Contiene flags de error: <code>FE</code>, <code>PE</code>, <code>BE</code>, <code>OE</code> Bit Nombre Significado 0 FE Framing Error \u2014 No se detect\u00f3 bit de stop v\u00e1lido 1 PE Parity Error \u2014 Paridad incorrecta 2 BE Break Error \u2014 La l\u00ednea RX estuvo en bajo demasiado tiempo 3 OE Overrun Error \u2014 Se perdi\u00f3 un dato por FIFO llena Lectura de errores UART<pre><code>#include \"hardware/uart.h\"\n\nif (uart_is_readable(uart0)) {\n    int c = uart_getc(uart0); // Lee un car\u00e1cter\n    if (uart_get_hw(uart0)-&gt;rsr &amp; (UART_UARTDR_FE_BITS | UART_UARTDR_PE_BITS | UART_UARTDR_OE_BITS)) {\n        printf(\"\u26a0\ufe0f Error detectado en UART\\n\");\n        uart_get_hw(uart0)-&gt;rsr = 0; // Limpia errores\n    }\n}\n</code></pre>"}, {"location": "clases/sistemas-embebidos-i/Bloque3/Tema_I/", "title": "ADC Convertidor Anal\u00f3gico a Digital", "text": ""}, {"location": "clases/sistemas-embebidos-i/Bloque3/Tema_I/#1-introduccion", "title": "1. Introducci\u00f3n", "text": "<p>El conversor anal\u00f3gico a digital permite leer voltajes como n\u00fameros. En sistemas embebidos se usa para sensado de temperatura, corriente, posici\u00f3n o audio b\u00e1sico. Este tema combina teor\u00eda de muestreo y cuantizaci\u00f3n con el uso pr\u00e1ctico del ADC integrado del RP2350 en el Pico 2.</p>"}, {"location": "clases/sistemas-embebidos-i/Bloque3/Tema_I/#2-conceptos-fundamentales", "title": "2. Conceptos fundamentales", "text": ""}, {"location": "clases/sistemas-embebidos-i/Bloque3/Tema_I/#21-resolucion-lsb-rango-y-vref", "title": "2.1 Resoluci\u00f3n, LSB, rango y VREF", "text": "<ul> <li>Resoluci\u00f3n: n\u00famero de bits N del ADC. Para 12 bits hay \\(2^{12}\\) niveles. </li> <li>Vref: referencia contra la cual el ADC compara la entrada. Puede ser interna o externa seg\u00fan placa.</li> <li> <p>LSB: tama\u00f1o del paso de cuantizaci\u00f3n.     $$     \\mathrm{LSB}=\\frac{V_{\\mathrm{ref}}}{2^{N}}     $$     Por ejemplo, para un ADC de 12 bits con Vref = 3.3 V:     $$     \\mathrm{LSB}=\\frac{3.3 V}{2^{12}}= 0.806 mV     $$</p> </li> <li> <p>Rango: 0 a Vref para entradas single-ended (como el RP2350) y Vref1 a Vref2 para diferenciales.</p> </li> </ul>"}, {"location": "clases/sistemas-embebidos-i/Bloque3/Tema_I/#22-muestreo-y-nyquist", "title": "2.2 Muestreo y Nyquist", "text": "<ul> <li>Frecuencia de muestreo Fs. Es el n\u00famero de muestras por segundo que toma el ADC sobre una se\u00f1al continua. Se expresa en Hz o muestras/s.</li> <li>Aliasing: Es el fen\u00f3meno por el cual componentes de frecuencia mayores que Fn se \u201cplegan\u201d hacia bajas frecuencias en el espectro muestreado, apareciendo como se\u00f1ales falsas.</li> </ul> <ul> <li>Teorema de Nyquist. Para evitar aliasing, Fs debe ser al menos 2 veces la m\u00e1xima frecuencia \u00fatil de la se\u00f1al.     $$     F_{s} \\geq 2 \\cdot F_{max}     $$     donde \\(F_{max}\\) es la m\u00e1xima frecuencia presente en la se\u00f1al anal\u00f3gica.</li> <li>Tiempo de adquisici\u00f3n. Es el tiempo durante el cual el circuito de sample and hold del ADC est\u00e1 conectado a la entrada para cargar su capacitancia interna hasta un error m\u00e1ximo permitido antes de iniciar la conversi\u00f3n.</li> </ul>"}, {"location": "clases/sistemas-embebidos-i/Bloque3/Tema_I/#23-cuantizacion-ruido-y-enob", "title": "2.3 Cuantizaci\u00f3n, ruido y ENOB", "text": "<ul> <li>Cuantizaci\u00f3n, Cuando un ADC mide una se\u00f1al continua, solo puede reportar valores en una rejilla de pasos iguales. A este proceso de \u201cajustar\u201d la se\u00f1al al escal\u00f3n m\u00e1s cercano se le llama cuantizaci\u00f3n.</li> <li>Ruido de cuantizaci\u00f3n, Es el error que aparece por redondear a la rejilla. Si la se\u00f1al es suficientemente \u201crica\u201d y el ADC funciona bien, ese error se puede modelar como un ruido peque\u00f1o que var\u00eda entre \u2212LSB/2 y +LSB/2. Cuanto menor sea el LSB, menor ser\u00e1 este ruido.</li> <li>SNR(Signal to Noise Ratio), Es la relaci\u00f3n entre la potencia de la se\u00f1al y la potencia del ruido. Se expresa en decibelios. Un SNR grande indica que la se\u00f1al sobresale claramente sobre el ruido.</li> </ul> <ul> <li>THD(Harmonic Distortion), Mide cu\u00e1nta energ\u00eda aparece en arm\u00f3nicos de la se\u00f1al fundamental debido a no linealidades. Un THD bajo significa poca distorsi\u00f3n.</li> </ul> <ul> <li>SINAD(Signal to Noise And Distortion), Es como el SNR, pero cuenta tanto el ruido como la distorsi\u00f3n. Por eso, el SINAD suele ser menor que el SNR real de cuantizaci\u00f3n. Se usa mucho para caracterizar la calidad total de un ADC.</li> <li>ENOB, (Effective Number Of Bits). Es una manera de decir \u201ccu\u00e1ntos bits \u00fatiles\u201d obtienes considerando ruido y distorsi\u00f3n reales. Se calcula a partir del SINAD: $$ ENOB = (SINAD \u2212 1.76) / 6.02. $$ Ejemplo Si mides SINAD = 62 dB, entonces ENOB \u2248 (62 \u2212 1.76) / 6.02 \u2248 10 bits.</li> </ul>"}, {"location": "clases/sistemas-embebidos-i/Bloque3/Tema_I/#3-arquitecturas-de-adc", "title": "3. Arquitecturas de ADC", "text": ""}, {"location": "clases/sistemas-embebidos-i/Bloque3/Tema_I/#31-sar", "title": "3.1 SAR", "text": "<p>Funcionamiento</p> <ol> <li>Muestreo. Un circuito sample and hold captura la tensi\u00f3n de entrada durante una ventana breve y la mantiene constante.</li> <li>Aproximaciones sucesivas. Un registro SAR controla un DAC interno. Empezando por el bit m\u00e1s significativo, el DAC genera un valor de prueba y un comparador decide si la entrada es mayor o menor.</li> <li>B\u00fasqueda binaria. En cada ciclo se fija un bit seg\u00fan el resultado del comparador y se actualiza el DAC. Tras N ciclos en un ADC de N bits, se obtiene el c\u00f3digo final.</li> <li>Temporizaci\u00f3n. La conversi\u00f3n requiere un tiempo de adquisici\u00f3n m\u00e1s N ciclos de comparaci\u00f3n. Muchos SAR en MCUs permiten ajustar el tiempo de adquisici\u00f3n para asegurar que el sample and hold se cargue adecuadamente cuando la fuente tiene alta impedancia.</li> <li>M\u00faltiples canales. Un multiplexor selecciona el canal antes del muestreo. Al cambiar de canal, la capacitancia interna debe asentarse de nuevo, por lo que el tiempo de adquisici\u00f3n es cr\u00edtico.</li> </ol> <p>Uso t\u00edpico Sensores generales en MCUs, medici\u00f3n de corriente con shunt, control y automatizaci\u00f3n donde la latencia baja y el consumo moderado son importantes.</p>"}, {"location": "clases/sistemas-embebidos-i/Bloque3/Tema_I/#32-sigma-delta", "title": "3.2 Sigma-Delta", "text": "<p>Funcionamiento</p> <ol> <li>Modulador de lazo cerrado. La entrada pasa por un integrador y un cuantizador de 1 bit o pocos bits. La salida digital se alimenta a un DAC interno que cierra el lazo con realimentaci\u00f3n.</li> <li>Modelado de ruido. El lazo empuja el ruido de cuantizaci\u00f3n hacia altas frecuencias fuera de la banda de inter\u00e9s.</li> <li>Sobremuestreo. El modulador opera a una frecuencia muy superior a la banda \u00fatil. El flujo de 1 bit contiene la se\u00f1al m\u00e1s ruido modelado.</li> <li>Filtro y decimaci\u00f3n digital. Un filtro digital de baja pasa (CIC y FIR en cascada en muchos casos) elimina el ruido fuera de banda y reduce la tasa de datos hasta la frecuencia de salida deseada.</li> <li>Orden y ganancia en SNR. Un modulador de primer orden mejora el SNR aproximadamente 9 dB por cada duplicaci\u00f3n del ratio de sobremuestreo. De segundo orden, alrededor de 15 dB por duplicaci\u00f3n.</li> <li>Latencia. La salida sufre el retardo de grupo del filtro digital, por lo que la latencia es mayor que en SAR.</li> </ol> <p>Uso t\u00edpico B\u00e1sculas de precisi\u00f3n, instrumentaci\u00f3n lenta, audio de alta fidelidad, mediciones de temperatura y presi\u00f3n de alta resoluci\u00f3n.</p>"}, {"location": "clases/sistemas-embebidos-i/Bloque3/Tema_I/#33-flash", "title": "3.3 Flash", "text": "<p>Funcionamiento</p> <ol> <li>Etapas en cascada. Cada etapa realiza una conversi\u00f3n gruesa de m bits usando un sub-ADC r\u00e1pido.</li> <li>Sub-DAC y residuo. La etapa reconstruye con un sub-DAC el valor de esos m bits y lo resta de la se\u00f1al de entrada para generar un residuo.</li> <li>Amplificaci\u00f3n del residuo. El residuo se amplifica t\u00edpicamente por 2^m y se pasa a la siguiente etapa donde se repite el proceso.</li> <li>Alineaci\u00f3n y correcci\u00f3n digital. Los bits de todas las etapas se alinean temporalmente y se corrigen errores peque\u00f1os mediante l\u00f3gica digital redundante.</li> <li>Latencia. La latencia total es el n\u00famero de etapas medido en ciclos de reloj. A cambio se obtiene alta velocidad con resoluciones medias a altas.</li> </ol> <p>Uso t\u00edpico Sistemas de radio definidos por software, digitalizadores de banda intermedia, adquisici\u00f3n de datos de medio a alto ancho de banda y visi\u00f3n embebida.</p>"}, {"location": "clases/sistemas-embebidos-i/Bloque3/Tema_I/#34-seleccion-de-arquitectura", "title": "3.4 Selecci\u00f3n de arquitectura", "text": "<ul> <li>Se\u00f1ales lentas y precisas. Sigma-Delta.</li> <li>Sensores generales en MCU. SAR.</li> <li>Altas velocidades. Pipeline o Flash.</li> </ul> ADC Type Pros Cons Max Resolution Max Sample Rate Main Applications Successive Approximation (SAR) Buena relaci\u00f3n velocidad/resoluci\u00f3n Sin protecci\u00f3n antialiasing intr\u00ednseca 18 bits 10 MHz Adquisici\u00f3n de datos Delta-sigma (\u0394\u03a3) Alto desempe\u00f1o din\u00e1mico, protecci\u00f3n antialiasing intr\u00ednseca Hist\u00e9resis en se\u00f1ales no naturales 32 bits 1 MHz Adquisici\u00f3n de datos, ruido y vibraci\u00f3n, audio Dual Slope Preciso, econ\u00f3mico Baja velocidad 20 bits 100 Hz Volt\u00edmetros Pipelined Muy r\u00e1pido Resoluci\u00f3n limitada 16 bits 1 GHz Osciloscopios Flash El m\u00e1s r\u00e1pido Baja resoluci\u00f3n en bits 12 bits 10 GHz Osciloscopios"}, {"location": "clases/sistemas-embebidos-i/Bloque3/Tema_I/#35-topologias-de-entrada", "title": "3.5 Topolog\u00edas de entrada", "text": "<p>No es una arquitectura de conversi\u00f3n. Describe c\u00f3mo se aplica la se\u00f1al al ADC.</p> <p>Single-ended Mide la tensi\u00f3n de un pin respecto a una referencia com\u00fan. Es simple y usa menos pines. Requiere retornos limpios y buen layout para evitar que el ruido de tierra degrade la medici\u00f3n.</p> <p>Diferencial Mide la diferencia entre dos nodos que comparten un modo com\u00fan. Internamente el ADC samplea ambas entradas y las resta, lo que mejora el rechazo de ruido de modo com\u00fan. Requiere front-end y ADC compatibles, y respetar el rango permitido de modo com\u00fan.</p> Topolog\u00eda C\u00f3mo mide Ventajas Precauciones Usos t\u00edpicos Single-ended Contra referencia com\u00fan Simplicidad, menos pines Sensible a ruido de tierra y lazos de retorno MCUs, sensores generales, potenci\u00f3metros Diferencial Diferencia entre dos nodos Alto rechazo de modo com\u00fan, mejor inmunidad a ruido Requiere ADC y front-end diferenciales, respetar modo com\u00fan Sensores puente, audio pro, RF, instrumentaci\u00f3n"}, {"location": "clases/sistemas-embebidos-i/Bloque3/Tema_I/#4-front-end-minimo-y-anti-alias", "title": "4. Front-end m\u00ednimo y anti-alias", "text": ""}, {"location": "clases/sistemas-embebidos-i/Bloque3/Tema_I/#41-filtro-rc-de-entrada", "title": "4.1 Filtro RC de entrada", "text": "<p>Es un circuito con una resistencia (R) y un condensador (C) que act\u00faa como filtro paso bajo, permitiendo el paso de se\u00f1ales de baja frecuencia y atenuando las de alta frecuencia, como el ruido.</p> <p></p> \\[ f_c = \\frac{1}{2\\pi RC} \\] <p>Frecuencia de corte sugerida para se\u00f1ales lentas: fc \u2248 0.4 a 0.5 de Fs \u00fatil o definida por los requisitos de banda.</p>"}, {"location": "clases/sistemas-embebidos-i/Bloque3/Tema_I/#42-buffer-con-op-amp", "title": "4.2 Buffer con op-amp", "text": "<ul> <li>Un seguidor de voltaje de baja impedancia ayuda a cargar la capacitancia de muestreo.</li> <li>Usar op-amp rail to rail con GBW adecuado y buen PSRR a 3.3 V.</li> </ul>"}, {"location": "clases/sistemas-embebidos-i/Bloque3/Tema_I/#43-proteccion", "title": "4.3 Protecci\u00f3n", "text": "<ul> <li>Resistencia serie peque\u00f1a para limitar corrientes de entrada.</li> <li>Diodos de clamping o protecci\u00f3n ESD seg\u00fan el entorno.</li> </ul>"}, {"location": "clases/sistemas-embebidos-i/Bloque3/Tema_I/#5-adc-en-rp2350", "title": "5. ADC en RP2350", "text": "<p>Resumen de caracter\u00edsticas</p> <ul> <li>ADC de 12 bits tipo SAR.</li> <li>Velocidad representativa del orden de cientos de kSps seg\u00fan reloj y configuraci\u00f3n.</li> <li>Canales single-ended multiplexados. Cantidad de entradas externas depende del paquete de silicio y la placa.<ul> <li>ADC0 \u2013  GPIO26</li> <li>ADC1 \u2013  GPIO27</li> <li>ADC2 \u2013  GPIO28</li> <li>ADC3 \u2013  GPIO29 (existe pero no est\u00e1 conectado a pines)</li> <li>ADC4 \u2013  Sensor de temperatura interno</li> </ul> </li> <li>Vref se toma de la red de 3.3 V o del pin VREF si est\u00e1 disponible en la placa.</li> <li>No hay modo diferencial expuesto. Evitar compartir l\u00edneas anal\u00f3gicas con cargas digitales ruidosas. Separar rutas de retorno cuando sea posible.</li> </ul>"}, {"location": "clases/sistemas-embebidos-i/Bloque3/Tema_I/#51-glosario-de-funciones-sdk-pico", "title": "5.1 Glosario de funciones (SDK Pico)", "text": "Funci\u00f3n Descripci\u00f3n Ejemplo <code>adc_init()</code> Habilita el perif\u00e9rico ADC <code>adc_init();</code> <code>adc_gpio_init(pin)</code> Configura el GPIO como entrada ADC <code>adc_gpio_init(26);</code> <code>adc_select_input(n)</code> Selecciona el canal ADC n <code>adc_select_input(0);</code> <code>adc_read()</code> Realiza una conversi\u00f3n y devuelve 12 bits <code>uint16_t v = adc_read();</code> <code>adc_set_clkdiv(div)</code> Ajusta el divisor del reloj del ADC <code>adc_set_clkdiv(479.0f);</code> <code>adc_fifo_setup(en, dreq, thr, err, shift)</code> Configura FIFO, DREQ para DMA y umbral <code>adc_fifo_setup(true, true, 1, false, false);</code> <code>adc_run(run)</code> Inicia o detiene conversiones en free-running <code>adc_run(true);</code> <code>adc_set_round_robin(mask)</code> Habilita escaneo autom\u00e1tico de canales <code>adc_set_round_robin(0b00001111);</code> <code>adc_set_temp_sensor_enabled(en)</code> Activa el sensor de temperatura interno <code>adc_set_temp_sensor_enabled(true);</code> <code>adc_fifo_drain()</code> Vac\u00eda la FIFO del ADC antes de iniciar <code>adc_fifo_drain();</code> <code>adc_fifo_get_level()</code> Lee cu\u00e1ntos datos hay en FIFO <code>uint lvl = adc_fifo_get_level();</code> <code>irq_set_exclusive_handler(ADC_IRQ_FIFO, h)</code> Registra ISR para IRQ del ADC <code>irq_set_exclusive_handler(ADC_IRQ_FIFO, adc_isr);</code> <code>irq_set_enabled(ADC_IRQ_FIFO, en)</code> Habilita o deshabilita la IRQ del ADC <code>irq_set_enabled(ADC_IRQ_FIFO, true);</code> <code>adc_irq_set_enabled(en)</code> Activa la generaci\u00f3n de IRQ por FIFO <code>adc_irq_set_enabled(true);</code> <code>DREQ_ADC</code> Selecci\u00f3n DREQ para DMA desde FIFO del ADC <code>channel_config_set_dreq(&amp;cfg, DREQ_ADC);</code>"}, {"location": "clases/sistemas-embebidos-i/Bloque3/Tema_I/#52-ejemplos-adc-basica", "title": "5.2 Ejemplos ADC b\u00e1sica", "text": "<ol> <li>Inicializar el subsistema ADC.</li> <li>Configurar el pin como entrada ADC.</li> <li>Seleccionar el canal.</li> <li>Leer por conversi\u00f3n \u00fanica y guarda el valor.</li> </ol> Ejemplo b\u00e1sico de lectura ADC<pre><code>#include &lt;stdio.h&gt;\n#include \"pico/stdlib.h\"\n#include \"hardware/adc.h\"\n\n// Configurar el canal ADC a usar\n#define ADC_INPUT 0 // canal 0\n\nint main() {\n    stdio_init_all();\n    adc_init();\n    // Configura el pin GPIO correspondiente como entrada ADC\n    adc_gpio_init(26); // GPIO26 suele mapear a ADC0 en Pico 2\n    // Seleccionar canal\n    adc_select_input(ADC_INPUT);\n\n    // Opcional: ajustar divisi\u00f3n de reloj si necesitas limitar Fs\n    // adc_set_clkdiv(div);\n\n    while (true) {\n        uint16_t adc = adc_read(); // 12 bits alineados a 0..4095\n        // float v = (adc * VREF) / 4095.0f;\n        printf(\"%u\\n\", adc);\n        sleep_ms(10);\n    }\n}\n</code></pre>"}, {"location": "clases/sistemas-embebidos-i/Bloque3/Tema_I/#6-mejora-de-mediciones-por-software", "title": "6. Mejora de mediciones por software", "text": ""}, {"location": "clases/sistemas-embebidos-i/Bloque3/Tema_I/#61-promediado-y-mediana", "title": "6.1 Promediado y mediana", "text": "<ul> <li>Media m\u00f3vil y media exponencial para rechazar picos.</li> </ul> Ejemplo de Media Movil<pre><code>#include &lt;stdio.h&gt;\n#include \"pico/stdlib.h\"\n#include \"hardware/adc.h\"\n\n// Configurar el canal ADC a usar\n#define ADC_INPUT 0 // canal 0\n// n\u00famero de muestras para promediar\n#define N_muestras 16 \n\nint main() {\n    stdio_init_all();\n    adc_init();\n    // Configura el pin GPIO correspondiente como entrada ADC\n    adc_gpio_init(26); // GPIO26 suele mapear a ADC0 en Pico 2\n    // Seleccionar canal\n    adc_select_input(ADC_INPUT);\n\n    // -- Variables --\n    uint16_t buffer[N_muestras];\n    uint32_t sum = 0; \n    uint8_t  indice = 0;              // proxima posicion a sobrescribir\n    uint8_t  cuenta = 0;            // numero de muestras llenas hasta N_muestras\n\n    while (true) {\n        uint16_t adc = adc_read(); // 12 bits alineados a 0..4095\n        if (cuenta &lt; N_muestras) {\n            // llenar buffer inicialmente\n            buffer[indice] = adc;\n            sum += adc;\n            cuenta++;\n            indice++;\n        } else {\n            // buffer lleno, proceder con media movil\n            sum -= buffer[indice];         // restar valor viejo\n            buffer[indice] = adc;          // agregar nuevo valor al buffer\n            sum += adc;                 // sumar nuevo valor al total\n            // Avance en el buffer circular\n            indice++;\n            if (indice &gt;= N_muestras) indice = 0;\n            // calcular promedio\n            uint16_t promedio = sum / N_muestras; \n\n            printf(\"%u\\n\", promedio);\n            sleep_ms(10);\n        }\n\n    }\n}\n</code></pre> <ul> <li>Media exponencial para suavizado r\u00e1pido con menor retardo, usa una formula recursiva para suavizar el ruido. Formula:   $$   y(n) = alpha \\cdot x(n) + (1 - alpha) \\cdot y(n-1)   $$   donde:   y(n) es la salida suavizada en la muestra n,   x(n) es la entrada actual en la muestra n,   y(n-1) es la salida suavizada en la muestra anterior,   alpha es el factor de suavizado (0 &lt; alpha \u2264 1).</li> </ul> Ejemplo de Media Exponencial<pre><code>#include &lt;stdio.h&gt;\n#include \"pico/stdlib.h\"\n#include \"hardware/adc.h\"\n\n#define ADC_INPUT 0          // canal 0 -&gt; GPIO26\nconst float alpha = 0.0625f; // 0&lt;alpha&lt;=1 (0.0625 = 1/16)\n\nint main() {\n    stdio_init_all();\n    adc_init();\n    adc_gpio_init(26);        // GPIO26 = ADC0\n    adc_select_input(ADC_INPUT);\n\n    bool   y_init = false;\n    float  y = 0.0f;\n\n    while (true) {\n        uint16_t x = adc_read();   // 0..4095 (12 bits)\n\n        if (!y_init) {\n            y = (float)x;          // inicializamos con la primera lectura\n            y_init = true;\n        } else {\n            y = alpha * (float)x + (1.0f - alpha) * y;  // y(n) = \u03b1x + (1-\u03b1)y\n        }\n\n        // Si prefieres entero para imprimir/salidas:\n        uint16_t y_u16 = (uint16_t)(y + 0.5f);\n\n        printf(\"raw=%u ema=%u\\n\", x, y_u16);\n        sleep_ms(10);\n    }\n}\n</code></pre>"}, {"location": "clases/sistemas-embebidos-i/Bloque3/Tema_I/#62-sobremuestreo-y-decimacion", "title": "6.2 Sobremuestreo y decimaci\u00f3n", "text": "<ul> <li>Aumentar la tasa de muestreo M veces y promediar para ganar bits efectivos. Regla aproximada: cada 4 veces de sobremuestreo aumenta 1 bit si el ruido es suficiente para dither.</li> </ul>"}, {"location": "clases/sistemas-embebidos-i/Bloque3/Tema_I/#63-filtros-iir-y-fir", "title": "6.3 Filtros IIR y FIR", "text": "<ul> <li>IIR de primer orden para suavizado r\u00e1pido. FIR para fases lineales.</li> </ul>"}, {"location": "clases/sistemas-embebidos-i/Bloque3/Tema_I/#64-linealizacion-y-calibracion-de-dos-puntos", "title": "6.4 Linealizaci\u00f3n y calibraci\u00f3n de dos puntos", "text": "<ul> <li>Medir salida con 0 V y con un punto de referencia conocido cercano a Vref. Calcular offset y ganancia y corregir en software.</li> </ul>"}, {"location": "clases/sistemas-embebidos-i/Proyecto/Instrucciones/", "title": "Capstone Micromouse", "text": "<p>El proyecto Micromouse consiste en dise\u00f1ar y programar un robot m\u00f3vil aut\u00f3nomo capaz de explorar un laberinto, construir un mapa y ejecutar una carrera r\u00e1pida (fast run) desde el inicio hasta el objetivo en el centro. </p>"}, {"location": "clases/sistemas-embebidos-i/Proyecto/Instrucciones/#alcance-y-entregables", "title": "Alcance y entregables", "text": "<p>Entregables obligatorios: 1. Robot funcional con binario MODO_ARENA. 2. Bit\u00e1cora t\u00e9cnica final (Pagina): arquitectura, pruebas clave, m\u00e9tricas, decisiones y lecciones. 3. C\u00f3digo fuente etiquetado (<code>tag</code> de release), binario final y mapa de pines/clocks. 4. Acta de resultados del evento.</p>"}, {"location": "clases/sistemas-embebidos-i/Proyecto/Instrucciones/#especificaciones-del-laberinto", "title": "Especificaciones del laberinto", "text": "<ul> <li>Tama\u00f1o: 16\u00d716 celdas, objetivo en un cuadro 2\u00d72 al centro.</li> <li>Celdas: ~15\u00d715 cm (t\u00edpico), paredes ~5 cm de alto (pueden variar seg\u00fan arena disponible).</li> <li>Superficie: Nivelada, con suficiente fricci\u00f3n para tracci\u00f3n.</li> <li>Meta: Se considera alcanzada cuando el centro geom\u00e9trico del robot entra a la zona objetivo.</li> </ul>"}, {"location": "clases/sistemas-embebidos-i/Proyecto/Instrucciones/#reglas-del-robot", "title": "Reglas del robot", "text": "<ul> <li>Autonom\u00eda: No se permite control humano una vez iniciado el intento.</li> <li>Dimensiones: M\u00e1x. 12\u00d712\u00d712 cm. Peso libre.</li> <li>Seguridad: Sin elementos punzantes, sin proyecciones, sin l\u00edquidos o humo.</li> <li>Kill switch: Obligatorio, accesible sin levantar el robot.</li> <li>Integridad: Cableado firme; bater\u00eda protegida; sin piezas sueltas.</li> </ul>"}, {"location": "clases/sistemas-embebidos-i/Proyecto/Instrucciones/#formato-de-competencia", "title": "Formato de competencia", "text": "<ul> <li>Intentos: Hasta 3 intentos por equipo (tiempo mediante, puede ajustarse en briefing).</li> <li>Estructura de intento:   1) Exploraci\u00f3n (el robot construye o actualiza el mapa)   2) Fast run (carrera \u00f3ptima hacia el objetivo)  </li> </ul> <p>Acciones que invalidan un intento: - Levantar el robot, o asistencia manual durante la carrera (excepto por seguridad). - Salida deliberada de pista o da\u00f1o al laberinto.</p>"}, {"location": "clases/sistemas-embebidos-i/Proyecto/Instrucciones/#cronograma", "title": "Cronograma", "text": "<p>Tiempo en minutos</p> <ul> <li>00:00\u201300:10 Registro e inspecci\u00f3n de seguridad.</li> <li>00:10\u201300:15 Briefing (reglas, orden, se\u00f1ales).</li> <li>00:15\u201301:30 Clasificatorios.</li> <li>01:30\u201301:50 Final.</li> <li>01:50\u201302:00 Premiaci\u00f3n y firma de actas.</li> </ul>"}, {"location": "clases/sistemas-embebidos-i/Proyecto/Instrucciones/#inspeccion-tecnica-checklist", "title": "Inspecci\u00f3n t\u00e9cnica (checklist)", "text": "<ul> <li>[ ] Dimensiones dentro de 12\u00d712\u00d712 cm.  </li> <li>[ ] Kill switch accesible y probado.  </li> <li>[ ] Bater\u00eda y cables asegurados; sin bordes peligrosos.  </li> <li>[ ] MODO_ARENA cargado (sin logs verbosos).  </li> <li>[ ] CLI y telemetr\u00eda solo para setup.   </li> <li>[ ] Sin control remoto durante la carrera.</li> </ul>"}, {"location": "clases/sistemas-embebidos-i/Proyecto/Instrucciones/#puntuacion-bonos-y-penalizaciones", "title": "Puntuaci\u00f3n, bonos y penalizaciones", "text": "<p>Tiempo base (Tc): mejor fast run del equipo (en segundos).</p> <p>Bonos: - Exploraci\u00f3n \u00fanica (sin reset entre explorar y fast run): \u22125 s - Cero colisiones (validado por jueces): \u22123 s</p> <p>Penalizaciones: - Colisi\u00f3n clara (detiene o altera trayectoria): +2 s c/u (m\u00e1x. +10 s) - Reinicio manual durante fast run: +5 s - Levantamiento del robot / salida de pista: intento inv\u00e1lido</p> <p>Puntuaci\u00f3n final:</p> <p>P = Tc + Bonos - Penalizaciones</p>"}, {"location": "clases/sistemas-embebidos-i/Proyecto/Instrucciones/#criterios-de-desempate", "title": "Criterios de desempate", "text": "<ol> <li>Menor fast run (sin bonos/penalizaciones).  </li> <li>Menor tiempo de exploraci\u00f3n.  </li> <li>Persistiendo empate: sorteo supervisado (coin toss).</li> </ol>"}, {"location": "clases/sistemas-embebidos-i/Proyecto/Instrucciones/#documentacion-y-entrega-final", "title": "Documentaci\u00f3n y entrega final", "text": "<ul> <li>Bit\u00e1cora final (Pagina) con:  </li> <li>Arquitectura (diagrama), pinout, clocks.  </li> <li>Pruebas clave (PIO/DMA/UART/WDT/energia/EMC/multicore).  </li> <li>M\u00e9tricas: tiempos, jitter, %CPU, p\u00e9rdidas FIFO/DMA, consumo.  </li> <li>Decisiones y rationale (por qu\u00e9 cada prueba).  </li> <li>Lecciones aprendidas.</li> <li>Dise\u00f1o de PCB.</li> <li>C\u00f3digo y binario .</li> </ul>"}, {"location": "clases/sistemas-embebidos-i/Proyecto/Instrucciones/#calificacion", "title": "Calificacion", "text": "<ul> <li>Desempe\u00f1o en competencia (ranking, P) \u2014 40%  <ul> <li>Primer lugar \u2014 40%</li> <li>Segundo lugar \u2014 36%</li> <li>Tercer lugar \u2014 32%</li> <li>Cuarto lugar \u2014 28%</li> <li>Quinto lugar \u2014 24%</li> <li>Sexto lugar \u2014 20%</li> <li>Septimo lugar \u2014 16%</li> <li>Octavo lugar \u2014 12%</li> </ul> </li> <li>Ingenier\u00eda y robustez del mouse \u2014 30%  <ul> <li>PCB</li> <li>Programaci\u00f3n</li> <li>Pruebas</li> </ul> </li> <li>Requisitos t\u00e9cnicos \u2014 20%</li> <li>Bit\u00e1cora t\u00e9cnica \u2014 10%</li> </ul>"}, {"location": "tutoriales/Maquinas/tutoriales_Laser/", "title": "Cortadora Laser", "text": ""}, {"location": "tutoriales/Maquinas/tutoriales_Laser/#software", "title": "Software", "text": ""}, {"location": "tutoriales/Maquinas/tutoriales_Laser/#descargar-y-operar-el-instalador", "title": "Descargar y operar el instalador", "text": "<p>El software deber\u00e1 pedirlo a un instructor local, quien nos proporcionar\u00e1 el enlace para descargar el instalador. Es fundamental seguir sus instrucciones al utilizarlo, ya que tiene algunas secciones escritas completamente en chino.</p> <p></p> <p>Uno de los pasos m\u00e1s importantes de la instalaci\u00f3n es seleccionar el idioma y el tipo de sistema correctos. Nuestra cortadora l\u00e1ser es del quinto sistema normal, como se muestra en esta imagen:</p> <p></p> <p>Una vez instalado correctamente, necesitaremos la clave de licencia USB. Solic\u00edtela a su instructor y cu\u00eddela bien; puede parecer modesta, pero es un equipo importante y costoso. Al conectarla a su ordenador, podr\u00e1 iniciar el software.</p>"}, {"location": "tutoriales/Maquinas/tutoriales_Laser/#importar-archivo", "title": "Importar archivo", "text": "<p>Al iniciar el programa, veremos la opci\u00f3n Archivo en la esquina superior izquierda de la pantalla. Al seleccionarla, se abrir\u00e1 el men\u00fa Archivo, donde haremos clic en Importar. Importaremos el archivo <code>.dxf</code> que creamos a partir de nuestro dibujo.</p> <p></p> <p>Una vez importado, el dibujo se alinear\u00e1 con el punto de origen predeterminado en el programa, que en nuestro caso es la esquina inferior derecha.</p>"}, {"location": "tutoriales/Maquinas/tutoriales_Laser/#parametros-de-entrada-del-laser", "title": "Par\u00e1metros de entrada del l\u00e1ser", "text": "<p>Seleccione todos los elementos del dibujo; a la derecha de la pantalla ver\u00e1 el panel de control. Aqu\u00ed seleccionaremos el mismo color que el del dibujo, en este caso el negro. Una vez seleccionado el color, introduzca la potencia m\u00e1xima y m\u00ednima del l\u00e1ser, as\u00ed como su velocidad de trabajo. Obtuvimos estos valores en las pruebas realizadas en grupo para determinar el equilibrio correcto entre potencia y velocidad que nos permita obtener los cortes m\u00e1s r\u00e1pidos y limpios posibles, minimizando las ranuras.  </p> <p>En nuestras pruebas, determinamos que la combinaci\u00f3n \u00f3ptima de valores oscila entre el 60 % y el 80 % de potencia y una velocidad de 40 a 60 mm/s. Decid\u00ed optar por un 70 % de potencia y una velocidad de 40 mm/s, con la que, tras las pruebas, qued\u00e9 satisfecho. Tras configurar los par\u00e1metros, hago clic en el bot\u00f3n Aplicar en la parte inferior del panel gr\u00e1fico, a la izquierda de la pantalla.</p> <p></p> <p>Una vez terminado, guarde el archivo en una USB para utilizarlo en la computadora de la l\u00e1ser.</p>"}, {"location": "tutoriales/Maquinas/tutoriales_Laser/#encendido-de-maquina", "title": "Encendido de M\u00e1quina", "text": "<p>Fab Lab Puebla cuenta con tres cortadoras l\u00e1ser de CO\u2082 de la marca CAMFive. Estas m\u00e1quinas pueden cortar y grabar diversos materiales, como tableros de fibra de densidad media (MDF), acr\u00edlico y cart\u00f3n. La m\u00e1quina utilizada para clases es la CFL-CMA1390T, con un \u00e1rea de trabajo de 1300 x 900 mm, una potencia de 100 vatios y un sistema de cabezal l\u00e1ser dual. Para m\u00e1s detalles, puede consultar nuestra tarea grupal aqu\u00ed: LINK P\u00c1GINA PUEBLA.</p> <p>Para usar esta m\u00e1quina, debemos seguir este proceso:</p>"}, {"location": "tutoriales/Maquinas/tutoriales_Laser/#1-registro", "title": "1. Registro", "text": "<p>Al recibir la licencia, tambi\u00e9n obtenemos la llave de la m\u00e1quina. Usaremos esta \u00faltima para operar la cortadora l\u00e1ser. Antes de comenzar a trabajar, debemos registrar la hora de inicio de uso en el registro del Fab Lab con Andr\u00e9s L\u00f3pez o Zeus Zapotl, junto con nuestro nombre, n\u00famero de identificaci\u00f3n de estudiante, el departamento o curso para el que la usamos y el nombre del responsable. (Es muy importante que haya sido autorizado previamente por tu coordinador). </p>"}, {"location": "tutoriales/Maquinas/tutoriales_Laser/#2-ventilacion", "title": "2. Ventilaci\u00f3n", "text": "<p>Para empezar a trabajar, el primer paso es activar el sistema de ventilaci\u00f3n. Para ello, encendemos el contacto m\u00faltiple en la parte trasera de la m\u00e1quina. Una vez activado, comprobamos que no haya obstrucciones y que el dep\u00f3sito de agua est\u00e9 lleno.</p> <p></p> <p></p>"}, {"location": "tutoriales/Maquinas/tutoriales_Laser/#3-energia", "title": "3. Energ\u00eda", "text": "<p>En el lado izquierdo de la m\u00e1quina, veremos un interruptor azul en posici\u00f3n de apagado. Lo accionamos para darle energ\u00eda a los sistemas principales.</p> <p></p>"}, {"location": "tutoriales/Maquinas/tutoriales_Laser/#4-paro-de-emergencia", "title": "4. Paro de emergencia", "text": "<p>En la parte frontal derecha se encuentra el bot\u00f3n de parada de emergencia, que siempre est\u00e1 activado cuando la m\u00e1quina no est\u00e1 en uso. Para desactivarlo, hay que girarlo en sentido horario hasta que salte.</p> <p></p>"}, {"location": "tutoriales/Maquinas/tutoriales_Laser/#5-llave", "title": "5. Llave", "text": "<p>El \u00faltimo paso es insertar y girar la llave en la cerradura situada en la parte superior derecha, detr\u00e1s de la consola. Con esto, la m\u00e1quina est\u00e1 lista para cortar.</p>"}, {"location": "tutoriales/Maquinas/tutoriales_Laser/#proceso-de-corte-por-laser", "title": "Proceso de corte por l\u00e1ser", "text": "<p>Una vez finalizada la activaci\u00f3n y la m\u00e1quina se encuentra en pleno estado operativo, tenemos que seguir estos pasos para comenzar nuestro proceso de corte:</p>"}, {"location": "tutoriales/Maquinas/tutoriales_Laser/#1-abrir-archivo-en-la-computadora", "title": "1. Abrir Archivo en la computadora", "text": ""}, {"location": "tutoriales/Maquinas/tutoriales_Laser/#2-cargar-material", "title": "2. Cargar Material", "text": "<p>Para cargar el material, en mi caso una l\u00e1mina de MDF de 1,5 x 1 metro y 2,5 mm de grosor, primero debemos despejar el \u00e1rea de trabajo del cabezal l\u00e1ser. Podemos controlar su posici\u00f3n con las flechas. Esto se puede hacer desde el men\u00fa principal o tras seleccionar nuestro archivo. Pulsamos la flecha hacia arriba hasta que el cabezal l\u00e1ser est\u00e9 lo suficientemente atr\u00e1s, donde podamos asegurarnos de no golpearlo al cargar el material. Tambi\u00e9n revisamos el \u00e1rea de trabajo para detectar cualquier residuo que pueda alterar la elevaci\u00f3n del material. Una vez despejada el \u00e1rea de trabajo, simplemente colocamos el material dentro; podemos ayudarnos con los bordes del \u00e1rea de trabajo para mantener el material en una posici\u00f3n \u00f3ptima.</p> <p></p>"}, {"location": "tutoriales/Maquinas/tutoriales_Laser/#4-calibrar-altura-laser", "title": "4. Calibrar altura l\u00e1ser", "text": "<p>Para asegurar un corte preciso con una ranura m\u00ednima, debemos ajustar la elevaci\u00f3n del cabezal l\u00e1ser en relaci\u00f3n con el material, siendo la distancia \u00f3ptima entre ellos de 5 mm. Debemos ser extremadamente cuidadosos durante este paso para evitar da\u00f1arlo. Primero, colocamos el cabezal l\u00e1ser sobre un borde del material donde podamos observarlo y manipularlo f\u00e1cilmente. Procedemos a verificar la distancia entre el cabezal l\u00e1ser y el material. Podemos hacer esto con cualquier objeto de 5 mm de altura, que, casualmente, es la altura aproximada de un conector USB, por lo que puede usar el mismo USB que us\u00f3 para cargar sus archivos. Si la distancia es demasiado corta o demasiado larga, podemos ajustarla aflojando el tornillo grande del cabezal l\u00e1ser y movi\u00e9ndolo hacia arriba o hacia abajo. Tenga mucho cuidado, sujete el cabezal firmemente para evitar que se caiga y aseg\u00farese de no desconectar ning\u00fan componente. Una vez en la posici\u00f3n correcta, vuelva a apretar el tornillo.</p> <p></p>"}, {"location": "tutoriales/Maquinas/tutoriales_Laser/#5-activar-laser", "title": "5. Activar L\u00e1ser", "text": "<p>El \u00faltimo paso antes de comenzar el corte es activar el l\u00e1ser. Dado que el l\u00e1ser es invisible al ojo humano y est\u00e1 expuesto sobre el eje del cabezal, debemos cerrar la puerta de la m\u00e1quina como medida de seguridad para evitar el contacto accidental con el l\u00e1ser. Una vez cerrada la puerta, giramos el potenci\u00f3metro del l\u00e1ser elegido en sentido horario hasta el m\u00e1ximo, o ambos potenci\u00f3metros si queremos cortar el mismo dise\u00f1o dos veces al mismo tiempo. Al usar ambos l\u00e1seres, ajuste correctamente las dimensiones de sus dise\u00f1os y la distancia entre los cabezales, que puede cambiar manualmente. Usar\u00e9 solo el cabezal l\u00e1ser derecho, as\u00ed que giro el potenci\u00f3metro derecho a su posici\u00f3n m\u00e1xima. Cuando la potencia del l\u00e1ser est\u00e9 al m\u00e1ximo, presionamos el bot\u00f3n de activaci\u00f3n del l\u00e1ser junto al puerto de la llave; esto encender\u00e1 el l\u00e1ser. Recuerde: una vez que el l\u00e1ser est\u00e9 encendido, no abra la puerta.</p> <p></p>"}, {"location": "tutoriales/Maquinas/tutoriales_Laser/#6-corte", "title": "6. Corte", "text": "<p>Realizamos una comprobaci\u00f3n final: lima, origen, marco y salida l\u00e1ser. Ahora podemos pulsar el bot\u00f3n de inicio y el corte comenzar\u00e1 de inmediato.</p> <p>Ahora solo queda supervisar la m\u00e1quina hasta que finalice el proceso. Debemos estar preparados para activar el tope de seguridad en cualquier momento si observamos alguna anomal\u00eda, especialmente incendios.</p> <p></p>"}, {"location": "tutoriales/Maquinas/tutoriales_Laser/#7-desactivacion-de-laser", "title": "7. Desactivaci\u00f3n de L\u00e1ser", "text": "<ol> <li>Presione el bot\u00f3n de encendido del l\u00e1ser para apagarlo y devuelva el potenci\u00f3metro a su posici\u00f3n cero.  </li> <li>Traslade el cabezal l\u00e1ser a la parte trasera para retirar la l\u00e1mina sin riesgo de colisi\u00f3n accidental con las lentes. Abra la puerta y retire la l\u00e1mina.  </li> <li>Retire el producto final y cualquier residuo en el \u00e1rea de trabajo.  </li> <li>Desactive la m\u00e1quina repitiendo la secuencia de activaci\u00f3n, pero en orden inverso: retire la llave, active el tope de seguridad, apague el interruptor de corriente y, por \u00faltimo, apague el sistema de ventilaci\u00f3n.  </li> <li>Retire todo el material sobrante de las instalaciones, no olvide el USB y devuelva la clave de licencia del software y la llave de la m\u00e1quina a su instructor.  </li> <li>Registre la hora en que termin\u00f3 de trabajar en el log del Fab Lab.</li> </ol>"}, {"location": "tutoriales/Maquinas/tutoriales_Router/", "title": "Router", "text": "<p>Esta Pagina no esta lista todavia</p>"}, {"location": "tutoriales/Maquinas/tutoriales_monofab/", "title": "TUTORIAL MINI MILL", "text": "<p>Esta Pagina no esta lista todavia</p>"}, {"location": "tutoriales/Maquinas/tutoriales_print3d/", "title": "Impresora 3D", "text": "<p>Esta Pagina no esta lista todavia</p>"}, {"location": "tutoriales/Software/tutoriales_cura/", "title": "Tutorial de Cura", "text": "<p>Esta Pagina no esta lista todavia</p>"}, {"location": "tutoriales/Software/tutoriales_mods/", "title": "Tutorial MODS", "text": "<p>Esta Pagina no esta lista todavia</p>"}, {"location": "tutoriales/Software/tutoriales_pslicer/", "title": "Tutorial de PrusaSlicer", "text": "<p>Esta Pagina no esta lista todavia</p>"}]}